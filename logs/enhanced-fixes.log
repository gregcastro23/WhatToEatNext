{"timestamp":"2025-08-11T05:06:51.287Z","level":"INFO","message":"Starting enhanced explicit-any fix script","data":{"config":{"maxFiles":null,"safetyLevel":"MAXIMUM","batchSize":5,"backupDir":"./backups/enhanced-fixes","logFile":"./logs/enhanced-fixes.log","dryRun":true,"useClassification":true},"options":{"max-files":true,"dry-run":true,"verbose":true}}}
{"timestamp":"2025-08-11T05:08:52.568Z","level":"INFO","message":"Safety checkpoint created: enhanced-fix-1754888811297","data":{"id":"enhanced-fix-1754888811297","timestamp":"2025-08-11T05:06:51.709Z","description":"Enhanced explicit-any fixes start","gitStash":"Saved working directory and index state On main: Enhanced explicit-any fixes start","typeScriptErrors":654,"explicitAnyWarnings":1048}}
{"timestamp":"2025-08-11T05:10:08.708Z","level":"ERROR","message":"Error getting files with explicit-any warnings","data":{"error":"Command failed: yarn lint --format=unix 2>/dev/null | grep \"@typescript-eslint/no-explicit-any\" | cut -d: -f1 | sort | uniq -c | sort -nr | head -NaN\nhead: invalid option -- N\nusage: head [-n lines | -c bytes] [file ...]\n"}}
{"timestamp":"2025-08-11T05:10:08.709Z","level":"INFO","message":"No files with explicit-any warnings found","data":null}
{"timestamp":"2025-08-16T13:02:58.300Z","level":"INFO","message":"Safety checkpoint created: enhanced-fix-1755349250424","data":{"id":"enhanced-fix-1755349250424","timestamp":"2025-08-16T13:00:50.906Z","description":"Enhanced explicit-any fixes start","gitStash":"Saved working directory and index state On main: Enhanced explicit-any fixes start","typeScriptErrors":5342,"explicitAnyWarnings":507}}
{"timestamp":"2025-08-16T13:04:09.710Z","level":"INFO","message":"Found 15 files with explicit-any warnings","data":null}
{"timestamp":"2025-08-16T13:04:09.711Z","level":"INFO","message":"Processing batch 1/3 (5 files)","data":null}
{"timestamp":"2025-08-16T13:05:29.415Z","level":"INFO","message":"Processing batch of 5 files","data":{"dryRun":false,"useClassification":true}}
{"timestamp":"2025-08-16T13:05:29.416Z","level":"INFO","message":"Processing /Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/SafeTypeReplacer.test.ts (31 any types)","data":null}
{"timestamp":"2025-08-16T13:05:29.472Z","level":"WARN","message":"Classification failed for /Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/SafeTypeReplacer.test.ts, using fallback","data":{"error":"Command failed: node -e \"\n      const { AnyTypeClassifier } = require('./src/services/campaign/unintentional-any-elimination/AnyTypeClassifier.ts');\n      const classifier = new AnyTypeClassifier();\n      classifier.classifyFile('/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/SafeTypeReplacer.test.ts')\n        .then(result => console.log(JSON.stringify(result, null, 2)))\n        .catch(err => { console.error(err); process.exit(1); });\n    \"\nfile:///Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/AnyTypeClassifier.ts:16\n  private rules: ClassificationRules;\n          ^^^^^\n\nSyntaxError: Unexpected identifier 'rules'\n    at compileSourceTextModule (node:internal/modules/esm/utils:346:16)\n    at ModuleLoader.importSyncForRequire (node:internal/modules/esm/loader:316:18)\n    at loadESMFromCJS (node:internal/modules/cjs/loader:1371:24)\n    at Module._compile (node:internal/modules/cjs/loader:1511:5)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1613:10)\n    at Module.load (node:internal/modules/cjs/loader:1275:32)\n    at Module._load (node:internal/modules/cjs/loader:1096:12)\n    at Module.require (node:internal/modules/cjs/loader:1298:19)\n    at require (node:internal/modules/helpers:182:18)\n    at [eval]:2:37\n\nNode.js v20.19.3\n"}}
{"timestamp":"2025-08-16T13:05:29.474Z","level":"DEBUG","message":"Found 18 safe replacements in /Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/SafeTypeReplacer.test.ts","data":null}
{"timestamp":"2025-08-16T13:05:29.474Z","level":"DEBUG","message":"Applied fix at line 954","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.475Z","level":"DEBUG","message":"Applied fix at line 942","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.475Z","level":"DEBUG","message":"Applied fix at line 915","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.475Z","level":"DEBUG","message":"Applied fix at line 894","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.475Z","level":"DEBUG","message":"Applied fix at line 864","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.475Z","level":"DEBUG","message":"Applied fix at line 847","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.476Z","level":"DEBUG","message":"Applied fix at line 830","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.476Z","level":"DEBUG","message":"Applied fix at line 808","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.476Z","level":"DEBUG","message":"Applied fix at line 774","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.476Z","level":"DEBUG","message":"Applied fix at line 686","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.476Z","level":"DEBUG","message":"Applied fix at line 519","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.476Z","level":"DEBUG","message":"Applied fix at line 274","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.477Z","level":"DEBUG","message":"Applied fix at line 216","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.477Z","level":"DEBUG","message":"Applied fix at line 185","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.477Z","level":"DEBUG","message":"Applied fix at line 167","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.477Z","level":"DEBUG","message":"Applied fix at line 106","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.477Z","level":"DEBUG","message":"Applied fix at line 71","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:29.478Z","level":"INFO","message":"Applied 17 fixes to /Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/SafeTypeReplacer.test.ts","data":[{"lineNumber":954,"category":"array_type","original":"mockFs.readFileSync.mockReturnValue('const items: any[] = [];');","replacement":"mockFs.readFileSync.mockReturnValue('const items: unknown[] = [];');","confidence":0.95},{"lineNumber":942,"category":"array_type","original":"codeSnippet: 'const items: any[] = [];',","replacement":"codeSnippet: 'const items: unknown[] = [];',","confidence":0.95},{"lineNumber":915,"category":"array_type","original":"mockFs.readFileSync.mockReturnValue('const items: any[] = [];');","replacement":"mockFs.readFileSync.mockReturnValue('const items: unknown[] = [];');","confidence":0.95},{"lineNumber":894,"category":"array_type","original":"mockFs.readFileSync.mockReturnValue('const items: any[] = [];');","replacement":"mockFs.readFileSync.mockReturnValue('const items: unknown[] = [];');","confidence":0.95},{"lineNumber":864,"category":"array_type","original":"const largeContent = 'const items: any[] = [];\\n'.repeat(10000);","replacement":"const largeContent = 'const items: unknown[] = [];\\n'.repeat(10000);","confidence":0.95},{"lineNumber":847,"category":"array_type","original":"mockFs.readFileSync.mockReturnValue('const items: any[] = [];');","replacement":"mockFs.readFileSync.mockReturnValue('const items: unknown[] = [];');","confidence":0.95},{"lineNumber":830,"category":"array_type","original":"return 'const items: any[] = [];';","replacement":"return 'const items: unknown[] = [];';","confidence":0.95},{"lineNumber":808,"category":"array_type","original":"mockFs.readFileSync.mockReturnValue('const items: any[] = [];');","replacement":"mockFs.readFileSync.mockReturnValue('const items: unknown[] = [];');","confidence":0.95},{"lineNumber":774,"category":"array_type","original":"if (filePath.includes('test1.ts')) return 'const items: any[] = [];';","replacement":"if (filePath.includes('test1.ts')) return 'const items: unknown[] = [];';","confidence":0.95},{"lineNumber":686,"category":"array_type","original":"codeSnippet: 'const planetaryPositions: any[] = [];',","replacement":"codeSnippet: 'const planetaryPositions: unknown[] = [];',","confidence":0.95},{"lineNumber":519,"category":"array_type","original":"codeSnippet: 'const items: any[] = [\"hello\", \"world\"];',","replacement":"codeSnippet: 'const items: unknown[] = [\"hello\", \"world\"];',","confidence":0.95},{"lineNumber":274,"category":"array_type","original":"mockFs.readFileSync.mockReturnValue('const x: any = 1;\\nconst items: any[] = [];');","replacement":"mockFs.readFileSync.mockReturnValue('const x: any = 1;\\nconst items: unknown[] = [];');","confidence":0.95},{"lineNumber":216,"category":"array_type","original":"if (filePath.includes('test1.ts')) return 'const items: any[] = [];';","replacement":"if (filePath.includes('test1.ts')) return 'const items: unknown[] = [];';","confidence":0.95},{"lineNumber":185,"category":"array_type","original":"mockFs.readFileSync.mockReturnValue('const items: any[] = [];'); // Pattern doesn't match","replacement":"mockFs.readFileSync.mockReturnValue('const items: unknown[] = [];'); // Pattern doesn't match","confidence":0.95},{"lineNumber":167,"category":"array_type","original":"mockFs.readFileSync.mockReturnValue('const items: any[] = [];'); // Only 1 line","replacement":"mockFs.readFileSync.mockReturnValue('const items: unknown[] = [];'); // Only 1 line","confidence":0.95},{"lineNumber":106,"category":"array_type","original":"mockFs.readFileSync.mockReturnValue('const items: any[] = [];');","replacement":"mockFs.readFileSync.mockReturnValue('const items: unknown[] = [];');","confidence":0.95},{"lineNumber":71,"category":"array_type","original":"mockFs.readFileSync.mockImplementation(() => 'const items: any[] = [];');","replacement":"mockFs.readFileSync.mockImplementation(() => 'const items: unknown[] = [];');","confidence":0.95}]}
{"timestamp":"2025-08-16T13:05:36.140Z","level":"ERROR","message":"TypeScript compilation failed - restoring backup","data":null}
{"timestamp":"2025-08-16T13:05:36.140Z","level":"INFO","message":"Processing /Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/IntegrationWorkflows.test.ts (27 any types)","data":null}
{"timestamp":"2025-08-16T13:05:36.176Z","level":"WARN","message":"Classification failed for /Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/IntegrationWorkflows.test.ts, using fallback","data":{"error":"Command failed: node -e \"\n      const { AnyTypeClassifier } = require('./src/services/campaign/unintentional-any-elimination/AnyTypeClassifier.ts');\n      const classifier = new AnyTypeClassifier();\n      classifier.classifyFile('/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/IntegrationWorkflows.test.ts')\n        .then(result => console.log(JSON.stringify(result, null, 2)))\n        .catch(err => { console.error(err); process.exit(1); });\n    \"\nfile:///Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/AnyTypeClassifier.ts:16\n  private rules: ClassificationRules;\n          ^^^^^\n\nSyntaxError: Unexpected identifier 'rules'\n    at compileSourceTextModule (node:internal/modules/esm/utils:346:16)\n    at ModuleLoader.importSyncForRequire (node:internal/modules/esm/loader:316:18)\n    at loadESMFromCJS (node:internal/modules/cjs/loader:1371:24)\n    at Module._compile (node:internal/modules/cjs/loader:1511:5)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1613:10)\n    at Module.load (node:internal/modules/cjs/loader:1275:32)\n    at Module._load (node:internal/modules/cjs/loader:1096:12)\n    at Module.require (node:internal/modules/cjs/loader:1298:19)\n    at require (node:internal/modules/helpers:182:18)\n    at [eval]:2:37\n\nNode.js v20.19.3\n"}}
{"timestamp":"2025-08-16T13:05:36.177Z","level":"DEBUG","message":"Found 14 safe replacements in /Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/IntegrationWorkflows.test.ts","data":null}
{"timestamp":"2025-08-16T13:05:36.177Z","level":"DEBUG","message":"Applied fix at line 800","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:36.177Z","level":"DEBUG","message":"Applied fix at line 781","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:36.177Z","level":"DEBUG","message":"Applied fix at line 704","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:36.177Z","level":"DEBUG","message":"Applied fix at line 703","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:36.178Z","level":"DEBUG","message":"Applied fix at line 631","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:36.178Z","level":"DEBUG","message":"Applied fix at line 569","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:36.178Z","level":"DEBUG","message":"Applied fix at line 549","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:36.178Z","level":"DEBUG","message":"Applied fix at line 483","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:36.178Z","level":"DEBUG","message":"Applied fix at line 447","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:36.178Z","level":"DEBUG","message":"Applied fix at line 370","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:36.178Z","level":"DEBUG","message":"Applied fix at line 312","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:36.179Z","level":"DEBUG","message":"Applied fix at line 162","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:36.179Z","level":"DEBUG","message":"Applied fix at line 70","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:36.179Z","level":"INFO","message":"Applied 13 fixes to /Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/IntegrationWorkflows.test.ts","data":[{"lineNumber":800,"category":"array_type","original":"const originalContent = 'const items: any[] = []; const data: Record<string, unknown> = {};';","replacement":"const originalContent = 'const items: unknown[] = []; const data: Record<string, unknown> = {};';","confidence":0.95},{"lineNumber":781,"category":"array_type","original":"mockFs.readFileSync.mockReturnValue('const items: any[] = [];');","replacement":"mockFs.readFileSync.mockReturnValue('const items: unknown[] = [];');","confidence":0.95},{"lineNumber":704,"category":"array_type","original":"'src/util2.ts': 'function transform(data: any[]): unknown[] { return data; }'","replacement":"'src/util2.ts': 'function transform(data: unknown[]): unknown[] { return data; }'","confidence":0.95},{"lineNumber":703,"category":"array_type","original":"'src/util1.ts': 'const items: any[] = []; const map: Record<string, unknown> = {};',","replacement":"'src/util1.ts': 'const items: unknown[] = []; const map: Record<string, unknown> = {};',","confidence":0.95},{"lineNumber":631,"category":"array_type","original":"`const items${index}: any[] = [];`,","replacement":"`const items${index}: unknown[] = [];`,","confidence":0.95},{"lineNumber":569,"category":"array_type","original":"const mockItems: any[] = [{ name: 'test' }];","replacement":"const mockItems: unknown[] = [{ name: 'test' }];","confidence":0.95},{"lineNumber":549,"category":"array_type","original":"export const processItems = (items: any[]): any[] => {","replacement":"export const processItems = (items: unknown[]): unknown[] => {","confidence":0.95},{"lineNumber":483,"category":"array_type","original":"const originalContent = 'const items: any[] = [];';","replacement":"const originalContent = 'const items: unknown[] = [];';","confidence":0.95},{"lineNumber":447,"category":"array_type","original":"if (path.includes('test1')) return 'const items: any[] = [];';","replacement":"if (path.includes('test1')) return 'const items: unknown[] = [];';","confidence":0.95},{"lineNumber":370,"category":"array_type","original":"return 'const items: any[] = [];';","replacement":"return 'const items: unknown[] = [];';","confidence":0.95},{"lineNumber":312,"category":"array_type","original":"return 'const items: any[] = []; const data: Record<string, unknown> = {};';","replacement":"return 'const items: unknown[] = []; const data: Record<string, unknown> = {};';","confidence":0.95},{"lineNumber":162,"category":"array_type","original":"'src/safe.ts': 'const items: any[] = []; const data: Record<string, unknown> = {};',","replacement":"'src/safe.ts': 'const items: unknown[] = []; const data: Record<string, unknown> = {};',","confidence":0.95},{"lineNumber":70,"category":"array_type","original":"'src/arrays.ts': 'const items: any[] = []; const data: Array<unknown> = [];',","replacement":"'src/arrays.ts': 'const items: unknown[] = []; const data: Array<unknown> = [];',","confidence":0.95}]}
{"timestamp":"2025-08-16T13:05:42.561Z","level":"ERROR","message":"TypeScript compilation failed - restoring backup","data":null}
{"timestamp":"2025-08-16T13:05:42.561Z","level":"INFO","message":"Processing /Users/GregCastro/Desktop/WhatToEatNext/src/utils/__tests__/buildQualityMonitor.test.ts (16 any types)","data":null}
{"timestamp":"2025-08-16T13:05:42.597Z","level":"WARN","message":"Classification failed for /Users/GregCastro/Desktop/WhatToEatNext/src/utils/__tests__/buildQualityMonitor.test.ts, using fallback","data":{"error":"Command failed: node -e \"\n      const { AnyTypeClassifier } = require('./src/services/campaign/unintentional-any-elimination/AnyTypeClassifier.ts');\n      const classifier = new AnyTypeClassifier();\n      classifier.classifyFile('/Users/GregCastro/Desktop/WhatToEatNext/src/utils/__tests__/buildQualityMonitor.test.ts')\n        .then(result => console.log(JSON.stringify(result, null, 2)))\n        .catch(err => { console.error(err); process.exit(1); });\n    \"\nfile:///Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/AnyTypeClassifier.ts:16\n  private rules: ClassificationRules;\n          ^^^^^\n\nSyntaxError: Unexpected identifier 'rules'\n    at compileSourceTextModule (node:internal/modules/esm/utils:346:16)\n    at ModuleLoader.importSyncForRequire (node:internal/modules/esm/loader:316:18)\n    at loadESMFromCJS (node:internal/modules/cjs/loader:1371:24)\n    at Module._compile (node:internal/modules/cjs/loader:1511:5)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1613:10)\n    at Module.load (node:internal/modules/cjs/loader:1275:32)\n    at Module._load (node:internal/modules/cjs/loader:1096:12)\n    at Module.require (node:internal/modules/cjs/loader:1298:19)\n    at require (node:internal/modules/helpers:182:18)\n    at [eval]:2:37\n\nNode.js v20.19.3\n"}}
{"timestamp":"2025-08-16T13:05:42.598Z","level":"DEBUG","message":"Found 0 safe replacements in /Users/GregCastro/Desktop/WhatToEatNext/src/utils/__tests__/buildQualityMonitor.test.ts","data":null}
{"timestamp":"2025-08-16T13:05:42.598Z","level":"INFO","message":"Processing /Users/GregCastro/Desktop/WhatToEatNext/src/types/advancedIntelligence.ts (15 any types)","data":null}
{"timestamp":"2025-08-16T13:05:42.632Z","level":"WARN","message":"Classification failed for /Users/GregCastro/Desktop/WhatToEatNext/src/types/advancedIntelligence.ts, using fallback","data":{"error":"Command failed: node -e \"\n      const { AnyTypeClassifier } = require('./src/services/campaign/unintentional-any-elimination/AnyTypeClassifier.ts');\n      const classifier = new AnyTypeClassifier();\n      classifier.classifyFile('/Users/GregCastro/Desktop/WhatToEatNext/src/types/advancedIntelligence.ts')\n        .then(result => console.log(JSON.stringify(result, null, 2)))\n        .catch(err => { console.error(err); process.exit(1); });\n    \"\nfile:///Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/AnyTypeClassifier.ts:16\n  private rules: ClassificationRules;\n          ^^^^^\n\nSyntaxError: Unexpected identifier 'rules'\n    at compileSourceTextModule (node:internal/modules/esm/utils:346:16)\n    at ModuleLoader.importSyncForRequire (node:internal/modules/esm/loader:316:18)\n    at loadESMFromCJS (node:internal/modules/cjs/loader:1371:24)\n    at Module._compile (node:internal/modules/cjs/loader:1511:5)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1613:10)\n    at Module.load (node:internal/modules/cjs/loader:1275:32)\n    at Module._load (node:internal/modules/cjs/loader:1096:12)\n    at Module.require (node:internal/modules/cjs/loader:1298:19)\n    at require (node:internal/modules/helpers:182:18)\n    at [eval]:2:37\n\nNode.js v20.19.3\n"}}
{"timestamp":"2025-08-16T13:05:42.632Z","level":"DEBUG","message":"Found 0 safe replacements in /Users/GregCastro/Desktop/WhatToEatNext/src/types/advancedIntelligence.ts","data":null}
{"timestamp":"2025-08-16T13:05:42.632Z","level":"INFO","message":"Processing /Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/DocumentationQualityAssurance.test.ts (15 any types)","data":null}
{"timestamp":"2025-08-16T13:05:42.666Z","level":"WARN","message":"Classification failed for /Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/DocumentationQualityAssurance.test.ts, using fallback","data":{"error":"Command failed: node -e \"\n      const { AnyTypeClassifier } = require('./src/services/campaign/unintentional-any-elimination/AnyTypeClassifier.ts');\n      const classifier = new AnyTypeClassifier();\n      classifier.classifyFile('/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/DocumentationQualityAssurance.test.ts')\n        .then(result => console.log(JSON.stringify(result, null, 2)))\n        .catch(err => { console.error(err); process.exit(1); });\n    \"\nfile:///Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/AnyTypeClassifier.ts:16\n  private rules: ClassificationRules;\n          ^^^^^\n\nSyntaxError: Unexpected identifier 'rules'\n    at compileSourceTextModule (node:internal/modules/esm/utils:346:16)\n    at ModuleLoader.importSyncForRequire (node:internal/modules/esm/loader:316:18)\n    at loadESMFromCJS (node:internal/modules/cjs/loader:1371:24)\n    at Module._compile (node:internal/modules/cjs/loader:1511:5)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1613:10)\n    at Module.load (node:internal/modules/cjs/loader:1275:32)\n    at Module._load (node:internal/modules/cjs/loader:1096:12)\n    at Module.require (node:internal/modules/cjs/loader:1298:19)\n    at require (node:internal/modules/helpers:182:18)\n    at [eval]:2:37\n\nNode.js v20.19.3\n"}}
{"timestamp":"2025-08-16T13:05:42.666Z","level":"DEBUG","message":"Found 6 safe replacements in /Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/DocumentationQualityAssurance.test.ts","data":null}
{"timestamp":"2025-08-16T13:05:42.666Z","level":"DEBUG","message":"Applied fix at line 446","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:42.666Z","level":"DEBUG","message":"Applied fix at line 312","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:42.666Z","level":"DEBUG","message":"Applied fix at line 301","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:42.667Z","level":"DEBUG","message":"Applied fix at line 284","data":{"category":"array_type","confidence":0.95}}
{"timestamp":"2025-08-16T13:05:42.667Z","level":"INFO","message":"Applied 4 fixes to /Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/DocumentationQualityAssurance.test.ts","data":[{"lineNumber":446,"category":"array_type","original":"codeSnippet: 'function process(data: any[]): any',","replacement":"codeSnippet: 'function process(data: unknown[]): any',","confidence":0.95},{"lineNumber":312,"category":"array_type","original":"{ code: 'const items: any[] = [];', expectedCategory: AnyTypeCategory.ARRAY_TYPE },","replacement":"{ code: 'const items: unknown[] = [];', expectedCategory: AnyTypeCategory.ARRAY_TYPE },","confidence":0.95},{"lineNumber":301,"category":"array_type","original":"expect(anyTypes.some((t: any) => t.codeSnippet.includes(': any[]'))).toBe(true);","replacement":"expect(anyTypes.some((t: any) => t.codeSnippet.includes(': unknown[]'))).toBe(true);","confidence":0.95},{"lineNumber":284,"category":"array_type","original":"'const items: any[] = [];',","replacement":"'const items: unknown[] = [];',","confidence":0.95}]}
{"timestamp":"2025-08-16T13:05:48.984Z","level":"ERROR","message":"TypeScript compilation failed - restoring backup","data":null}
{"timestamp":"2025-08-16T13:07:11.243Z","level":"ERROR","message":"Build validation failed after batch 1 - stopping","data":null}
{"timestamp":"2025-08-16T13:07:11.245Z","level":"INFO","message":"Enhanced explicit-any fix script completed","data":{"totalFixes":0,"successfulFiles":2,"failedFiles":3,"totalDuration":175269,"reportPath":"backups/enhanced-fixes/enhanced-fix-report-1755349631244.json"}}
