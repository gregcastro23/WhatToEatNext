"use strict";(()=>{var e={};e.id=154,e.ids=[154],e.modules={3480:(e,t,r)=>{e.exports=r(5600)},5412:(e,t,r)=>{r.r(t),r.d(t,{config:()=>g,default:()=>d,routeModule:()=>h});var n={};r.r(n),r.d(n,{default:()=>p});var o=r(3480),a=r(8667),u=r(6435);class i{static{this.dayRulers=["Sun","Moon","Mars","Mercury","Jupiter","Venus","Saturn"]}static{this.hourRulers=["Sun","Venus","Mercury","Moon","Saturn","Jupiter","Mars"]}calculatePlanetaryHour(e){let t=e.getHours(),r=e.getDay(),n=i.dayRulers[r],o=i.hourRulers.indexOf(n);return i.hourRulers[(o+(t>=6&&t<18?t-6:t<6?t+18:t-18))%7]}isDaytime(e){let t=e.getHours();return t>=6&&t<18}getDailyPlanetaryHours(e){let t=e.getDay(),r=new Map,n=i.dayRulers[t],o=i.hourRulers.indexOf(n);for(let e=0;e<24;e++){let t=(o+e)%7;r.set(e,i.hourRulers[t])}return r}}async function l(e=new Date){return function(e){let t={},r=function(e){let t=e.getUTCFullYear(),r=e.getUTCMonth()+1,n=e.getUTCDate(),o=e.getUTCHours(),a=e.getUTCMinutes(),u=e.getUTCSeconds();try{return julian.CalendarGregorianToJD(t,r,n+(o+a/60+u/3600)/24)}catch(t){return console.error("Error calculating Julian date with astronomia:",t),e.getTime()/864e5+2440587.5}}(e);try{t.Sun=function(e){try{let{lon:t}=solar.apparentLongitude(e);return t}catch(r){console.error("Error calculating Sun longitude:",r);let t=(e-2451545)/36525;return(280.46646+t*(36000.76983+3032e-7*t))%360}}(r),t.Moon=function(e){try{let{lon:t}=moon.position(e);return t}catch(r){console.error("Error calculating Moon longitude:",r);let t=(e-2451545)/36525;return(218.3164477+t*(481267.88123421+t*(-.0015786+t*(1/538841-t/65194e3))))%360}}(r),t.Mercury=s(r,"mercury"),t.Venus=s(r,"venus"),t.Mars=c(r,"mars"),t.Jupiter=c(r,"jupiter"),t.Saturn=c(r,"saturn"),t.Uranus=c(r,"uranus"),t.Neptune=c(r,"neptune"),t.Pluto=c(r,"pluto")}catch(t){return console.error("Error in astronomia calculations, falling back to simple model:",t),function(e){let t={},r=new Date("2000-01-01T12:00:00Z").getTime(),n=(e.getTime()-r)/864e5;return Object.entries({Sun:365.25,Moon:27.322,Mercury:87.969,Venus:224.701,Mars:686.98,Jupiter:4332.59,Saturn:10759.22,Uranus:30688.5,Neptune:60182,Pluto:90560}).forEach(([e,r])=>{"Sun"===e?t[e]=(n/365.25*360+180)%360:t[e]=n/r*360%360}),t}(e)}return t}(e)}function s(e,t){try{let r={mercury:{sma:.387098,ecc:.20563,inc:7.0047,peri:29.1241,node:48.3313,period:87.969},venus:{sma:.723332,ecc:.006772,inc:3.3946,peri:54.891,node:76.68,period:224.701}}[t];if(!r)throw Error(`Planet ${t} not supported`);let n=360/r.period*(e-2451545)%360,o=r.node+r.peri;return(n+2*r.ecc*Math.sin(n*Math.PI/180)+o)%360}catch(n){console.error(`Error calculating ${t} longitude:`,n);let r=(e-2451545)/36525;return("mercury"===t?252.25084+538101.03*r:181.9798+210664.1366*r)%360}}function c(e,t){try{let r={mars:{period:686.98,epochLongitude:355.45332,epochDate:2451545,dailyMotion:.5240207766},jupiter:{period:4332.59,epochLongitude:34.40438,epochDate:2451545,dailyMotion:.0830853001},saturn:{period:10759.22,epochLongitude:50.077471,epochDate:2451545,dailyMotion:.0334442282},uranus:{period:30688.5,epochLongitude:314.055005,epochDate:2451545,dailyMotion:.011725806},neptune:{period:60182,epochLongitude:304.348665,epochDate:2451545,dailyMotion:.0059802665},pluto:{period:90560,epochLongitude:238.92881,epochDate:2451545,dailyMotion:.0039793764}}[t];if(!r)throw Error(`Planet ${t} not supported`);let n=e-r.epochDate;return(r.epochLongitude+n*r.dailyMotion)%360}catch(r){return console.error(`Error calculating ${t} longitude:`,r),(e-2451545)/(({mars:686.98,jupiter:4332.59,saturn:10759.22,uranus:30688.5,neptune:60182,pluto:90560})[t]||365.25)*360%360}}async function p(e,t){if("POST"!==e.method)return t.status(405).json({message:"Method not allowed"});try{let{date:r}=JSON.parse(e.body),n=new Date(r),o=await l(n),a=function(e){let t=[],r=Object.keys(e),n=[{name:"conjunction",angle:0,orb:8},{name:"sextile",angle:60,orb:6},{name:"square",angle:90,orb:8},{name:"trine",angle:120,orb:8},{name:"opposition",angle:180,orb:10}];for(let o=0;o<r.length;o++)for(let a=o+1;a<r.length;a++){let u=r[o],i=r[a],l=Math.abs(e[u]-e[i]),s=l>180?360-l:l;for(let e of n)if(Math.abs(s-e.angle)<e.orb){t.push({planet1:u,planet2:i,type:e.name,strength:1-Math.abs(s-e.angle)/e.orb});break}}return t}(o);t.status(200).json({positions:o,aspects:a,timestamp:new Date().toISOString()})}catch(e){console.error("Error calculating planetary positions:",e),t.status(500).json({message:"Error calculating planetary positions",error:e instanceof Error?e.message:"Unknown error"})}}let d=(0,u.M)(n,"default"),g=(0,u.M)(n,"config"),h=new o.PagesAPIRouteModule({definition:{kind:a.A.PAGES_API,page:"/api/planetary-positions",pathname:"/api/planetary-positions",bundlePath:"",filename:""},userland:n})},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6435:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},8667:(e,t)=>{Object.defineProperty(t,"A",{enumerable:!0,get:function(){return r}});var r=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=t(t.s=5412);module.exports=r})();