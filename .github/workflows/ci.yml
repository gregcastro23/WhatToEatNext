name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      NEXT_PUBLIC_ENABLE_ASTRO_DEBUG: false
      NEXT_PUBLIC_API_CACHE_TIME: 3600
      CI: true
      NODE_OPTIONS: "--max-old-space-size=4096"
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: Debug workspace
        run: |
          echo "Current directory: $(pwd)"
          echo "Workspace directory: $GITHUB_WORKSPACE"
          ls -la $GITHUB_WORKSPACE
          echo "Looking for lock files..."
          find $GITHUB_WORKSPACE -name "package-lock.json" -o -name "yarn.lock" -o -name "npm-shrinkwrap.json"
      - name: Check for yarn.lock
        id: check_files
        run: |
          if [ ! -f "yarn.lock" ]; then
            echo "yarn_lock_missing=true" >> $GITHUB_OUTPUT
            echo "yarn.lock file is missing!"
          else
            echo "yarn_lock_missing=false" >> $GITHUB_OUTPUT
            echo "yarn.lock exists!"
          fi
      - name: Create yarn.lock if missing
        if: steps.check_files.outputs.yarn_lock_missing == 'true'
        run: |
          echo "Creating empty yarn.lock file as a fallback"
          touch yarn.lock
      - name: Setup safe directory
        run: git config --global --add safe.directory $GITHUB_WORKSPACE
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # Disable caching entirely
      - name: Verify Node Installation
        run: |
          node --version
          npm --version
          which npm
      - name: Enable Yarn
        run: corepack enable && corepack prepare yarn@stable --activate
      - name: Create env file
        run: |
          echo "NEXT_PUBLIC_ENABLE_ASTRO_DEBUG=false" > .env.local
          echo "NEXT_PUBLIC_API_CACHE_TIME=3600" >> .env.local
          echo "NODE_ENV=test" >> .env.local
      - name: Install dependencies
        run: yarn install --network-timeout 300000
      - name: Run lint
        # Maintain previous warning limit for now
        run: yarn lint --max-warnings=200

  build:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      NEXT_PUBLIC_ENABLE_ASTRO_DEBUG: false
      NEXT_PUBLIC_API_CACHE_TIME: 3600
      CI: true
      NODE_OPTIONS: "--max-old-space-size=4096"
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: Debug workspace
        run: |
          echo "Current directory: $(pwd)"
          echo "Workspace directory: $GITHUB_WORKSPACE"
          ls -la $GITHUB_WORKSPACE
          echo "Looking for lock files..."
          find $GITHUB_WORKSPACE -name "package-lock.json" -o -name "yarn.lock" -o -name "npm-shrinkwrap.json"
      - name: Check for yarn.lock
        id: check_files
        run: |
          if [ ! -f "yarn.lock" ]; then
            echo "yarn_lock_missing=true" >> $GITHUB_OUTPUT
            echo "yarn.lock file is missing!"
          else
            echo "yarn_lock_missing=false" >> $GITHUB_OUTPUT
            echo "yarn.lock exists!"
          fi
      - name: Create yarn.lock if missing
        if: steps.check_files.outputs.yarn_lock_missing == 'true'
        run: |
          echo "Creating empty yarn.lock file as a fallback"
          touch yarn.lock
      - name: Setup safe directory
        run: git config --global --add safe.directory $GITHUB_WORKSPACE
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # Disable caching entirely
      - name: Verify Node Installation
        run: |
          node --version
          npm --version
          which npm
      - name: Enable Yarn
        run: corepack enable && corepack prepare yarn@stable --activate
      - name: Create env file
        run: |
          echo "NEXT_PUBLIC_ENABLE_ASTRO_DEBUG=false" > .env.local
          echo "NEXT_PUBLIC_API_CACHE_TIME=3600" >> .env.local
          echo "NODE_ENV=test" >> .env.local
      - name: Install dependencies
        run: yarn install --network-timeout 300000
      - name: Build check
        run: yarn build

  test:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      NEXT_PUBLIC_ENABLE_ASTRO_DEBUG: false
      NEXT_PUBLIC_API_CACHE_TIME: 3600
      CI: true
      NODE_OPTIONS: "--max-old-space-size=4096"
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: Debug workspace
        run: |
          echo "Current directory: $(pwd)"
          echo "Workspace directory: $GITHUB_WORKSPACE"
          ls -la $GITHUB_WORKSPACE
          echo "Looking for lock files..."
          find $GITHUB_WORKSPACE -name "package-lock.json" -o -name "yarn.lock" -o -name "npm-shrinkwrap.json"
      - name: Check for yarn.lock
        id: check_files
        run: |
          if [ ! -f "yarn.lock" ]; then
            echo "yarn_lock_missing=true" >> $GITHUB_OUTPUT
            echo "yarn.lock file is missing!"
          else
            echo "yarn_lock_missing=false" >> $GITHUB_OUTPUT
            echo "yarn.lock exists!"
          fi
      - name: Create yarn.lock if missing
        if: steps.check_files.outputs.yarn_lock_missing == 'true'
        run: |
          echo "Creating empty yarn.lock file as a fallback"
          touch yarn.lock
      - name: Setup safe directory
        run: git config --global --add safe.directory $GITHUB_WORKSPACE
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # Disable caching entirely
      - name: Verify Node Installation
        run: |
          node --version
          npm --version
          which npm
      - name: Enable Yarn
        run: corepack enable && corepack prepare yarn@stable --activate
      - name: Create env file
        run: |
          echo "NEXT_PUBLIC_ENABLE_ASTRO_DEBUG=false" > .env.local
          echo "NEXT_PUBLIC_API_CACHE_TIME=3600" >> .env.local
          echo "NODE_ENV=test" >> .env.local
      - name: Install dependencies
        run: yarn install --network-timeout 300000
      - name: Run tests
        run: yarn test --passWithNoTests
