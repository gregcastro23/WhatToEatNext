# Multi-stage production Dockerfile for Kitchen Intelligence Service
# Optimized for security, performance, and minimal attack surface

# ==========================================
# Stage 1: Build Environment
# ==========================================
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    curl

# Copy package files
COPY package*.json ./
COPY yarn.lock ./

# Install dependencies
RUN yarn install --frozen-lockfile --production=false

# Copy source code
COPY . .

# Build the application
RUN yarn build

# Prune dev dependencies
RUN yarn install --frozen-lockfile --production=true --ignore-scripts --prefer-offline

# ==========================================
# Stage 2: Security Scanner
# ==========================================
FROM aquasec/trivy:latest AS security-scan

# Copy the built application
COPY --from=builder /app /scan

# Run security scan
RUN trivy fs --exit-code 0 --severity HIGH,CRITICAL --no-progress /scan

# ==========================================
# Stage 3: Production Runtime
# ==========================================
FROM node:18-alpine AS production

# Install security updates
RUN apk upgrade --no-cache

# Install runtime dependencies
RUN apk add --no-cache \
    dumb-init \
    curl \
    ca-certificates \
    tzdata

# Create non-root user
RUN addgroup -g 1001 -S alchm && \
    adduser -S alchm -u 1001 -G alchm

# Set working directory
WORKDIR /app

# Copy built application from builder stage
COPY --from=builder --chown=alchm:alchm /app/dist ./dist
COPY --from=builder --chown=alchm:alchm /app/node_modules ./node_modules
COPY --from=builder --chown=alchm:alchm /app/package.json ./package.json

# Create necessary directories
RUN mkdir -p /app/logs /app/temp && \
    chown -R alchm:alchm /app

# Set security-focused environment variables
ENV NODE_ENV=production \
    NODE_OPTIONS="--max-old-space-size=512" \
    SERVICE_NAME=kitchen-intelligence \
    LOG_LEVEL=info \
    FORCE_COLOR=0 \
    NPM_CONFIG_CACHE=/tmp/.npm

# Security hardening
RUN chmod -R 755 /app && \
    chmod -R 644 /app/dist && \
    find /app -type f -name "*.js" -exec chmod 644 {} \;

# Remove package managers to reduce attack surface
RUN rm -rf /usr/local/bin/npm /usr/local/bin/npx /usr/local/lib/node_modules/npm

# Switch to non-root user
USER alchm

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8100/health || exit 1

# Expose port
EXPOSE 8100

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["node", "dist/server.js"]

# Metadata labels
LABEL maintainer="alchm.kitchen DevOps <devops@alchm.kitchen>" \
      description="Kitchen Intelligence Service - Production optimized container" \
      version="1.0.0" \
      service="kitchen-intelligence" \
      environment="production" \
      security.scan="trivy" \
      build.date="${BUILD_DATE}" \
      build.commit="${BUILD_COMMIT}"