{
  "name": "TypeScript Error Monitor",
  "description": "Monitors TypeScript errors and triggers cleanup campaigns when threshold exceeded",
  "trigger": {
    "type": "onSave",
    "filePattern": "**/*.{ts,tsx}"
  },
  "condition": {
    "script": "const { execSync } = require('child_process'); try { const output = execSync('yarn tsc --noEmit --skipLibCheck 2>&1 | grep -c \"error TS\"', { encoding: 'utf8', stdio: 'pipe' }); const errorCount = parseInt(output.trim()) || 0; return errorCount > 100; } catch (error) { return error.status === 1 ? false : true; }"
  },
  "actions": [
    {
      "type": "runScript",
      "script": "src/services/campaign/checkTypeScriptErrors.js",
      "parameters": {
        "threshold": 100,
        "autoFix": true,
        "safetyLevel": "MAXIMUM"
      }
    },
    {
      "type": "notification",
      "message": "TypeScript errors exceed threshold. Campaign triggered.",
      "level": "warning"
    }
  ],
  "settings": {
    "autoExecute": false,
    "cooldown": 300000,
    "maxExecutionsPerHour": 4
  }
}
