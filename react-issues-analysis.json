{
  "summary": {
    "timestamp": "2025-07-30T07:50:16.108Z",
    "filesScanned": 291,
    "totalIssues": 301,
    "categories": {
      "unescapedEntities": 166,
      "unknownProperties": 0,
      "deprecatedPatterns": 3,
      "propTypeIssues": 0,
      "react19Compatibility": 132
    }
  },
  "issues": [
    {
      "file": "src/__tests__/e2e/MainPageWorkflows.test.tsx",
      "line": 160,
      "column": 23,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Properties: {ingredient.properties.join(', ')}<",
      "context": "<div>Properties: {ingredient.properties.join(', ')}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/__tests__/e2e/MainPageWorkflows.test.tsx",
      "line": 170,
      "column": 17,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{selectedIngredients.join(', ')}<",
      "context": "<div>{selectedIngredients.join(', ')}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/__tests__/e2e/MainPageWorkflows.test.tsx",
      "line": 398,
      "column": 17,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Name: {recipeName || 'Untitled Recipe'}<",
      "context": "<div>Name: {recipeName || 'Untitled Recipe'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/__tests__/setupTests.tsx",
      "line": 114,
      "column": 24,
      "type": "deprecatedPatterns",
      "severity": "warn",
      "description": "Deprecated React patterns",
      "matchedText": "componentWillReceiveProps",
      "context": "message.includes('componentWillReceiveProps') ||",
      "suggestion": "Use useEffect with dependency array"
    },
    {
      "file": "src/__tests__/setupTests.tsx",
      "line": 127,
      "column": 33,
      "type": "deprecatedPatterns",
      "severity": "warn",
      "description": "Deprecated React patterns",
      "matchedText": "componentWillReceiveProps",
      "context": "message.includes('Warning: componentWillReceiveProps') ||",
      "suggestion": "Use useEffect with dependency array"
    },
    {
      "file": "src/__tests__/setupTests.tsx",
      "line": 115,
      "column": 24,
      "type": "deprecatedPatterns",
      "severity": "warn",
      "description": "Deprecated React patterns",
      "matchedText": "componentWillUpdate",
      "context": "message.includes('componentWillUpdate'))",
      "suggestion": "Use useEffect"
    },
    {
      "file": "src/__tests__/utils/testComponentHelpers.tsx",
      "line": 29,
      "column": 36,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{debugMode ? 'debug' : 'production'}<",
      "context": "<div data-testid=\"debug-mode\">{debugMode ? 'debug' : 'production'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/__tests__/utils/testComponentHelpers.tsx",
      "line": 30,
      "column": 39,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{loading ? 'loading' : 'loaded'}<",
      "context": "<div data-testid=\"loading-state\">{loading ? 'loading' : 'loaded'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/__tests__/utils/testComponentHelpers.tsx",
      "line": 12,
      "column": 38,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const MockAlchemicalProvider: React.FC<AlchemicalProviderProps> = ({ children }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/__tests__/utils/testComponentHelpers.tsx",
      "line": 21,
      "column": 34,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const MockMainPageLayout: React.FC<MainPageLayoutProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/__tests__/utils/testComponentHelpers.tsx",
      "line": 72,
      "column": 24,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const MockComponent: React.FC<P> = (props) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/__tests__/utils/testComponentHelpers.tsx",
      "line": 121,
      "column": 32,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const AsyncTestWrapper: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/__tests__/utils/testComponentHelpers.tsx",
      "line": 70,
      "column": 3,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "defaultProps?: Partial<P>",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/__tests__/utils/testComponentHelpers.tsx",
      "line": 73,
      "column": 30,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "const mergedProps = { ...defaultProps, ...props };",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/__tests__/validation/MainPageValidation.test.tsx",
      "line": 110,
      "column": 33,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.memo(({",
      "context": "const TestMemoComponent = React.memo(({ value }: { value: string }) =>",
      "suggestion": "Review and update as needed for React best practices"
    },
    {
      "file": "src/app/alchemize-demo/page.tsx",
      "line": 105,
      "column": 57,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Greg's Energy<",
      "context": "<span className=\"text-white font-medium\">Greg's Energy</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/app/loading.tsx",
      "line": 9,
      "column": 20,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const PageLoading: React.FC<LoadingProps> = ({ fullScreen = false, variant = 'spinner', text = 'Loading...' }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/app/test/migrated-components/recipe-filters/page.tsx",
      "line": 95,
      "column": 14,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">We've extracted this into a separate RecipeFilters component following the service-based architecture pattern<",
      "context": "<li>We've extracted this into a separate RecipeFilters component following the service-based architecture pattern</li>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/AlchemicalPropertiesDisplay.tsx",
      "line": 22,
      "column": 13,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Context state available: {state ? 'Yes' : 'No'}<",
      "context": "<p>Context state available: {state ? 'Yes' : 'No'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/AlchemicalPropertiesDisplay.tsx",
      "line": 23,
      "column": 13,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Values defined: {alchemicalValues ? 'Yes' : 'No'}<",
      "context": "<p>Values defined: {alchemicalValues ? 'Yes' : 'No'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/AlchemicalRecommendations.tsx",
      "line": 475,
      "column": 36,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Greg's Energy:<",
      "context": "<span className=\"label\">Greg's Energy:</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/AlchemicalRecommendations.tsx",
      "line": 584,
      "column": 46,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Greg's Energy:<",
      "context": "<span className=\"label\">Greg's Energy:</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/AlchemicalRecommendations.tsx",
      "line": 57,
      "column": 38,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const AlchemicalRecommendationsView: React.FC<AlchemicalRecommendationsProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/AlchmKitchen.tsx",
      "line": 146,
      "column": 21,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">⦿ Spirit: {alchemicalValues.Spirit.toFixed(4) || '0.0000'}<",
      "context": "<div>⦿ Spirit: {alchemicalValues.Spirit.toFixed(4) || '0.0000'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/AlchmKitchen.tsx",
      "line": 147,
      "column": 21,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">⦿ Essence: {alchemicalValues.Essence.toFixed(4) || '0.0000'}<",
      "context": "<div>⦿ Essence: {alchemicalValues.Essence.toFixed(4) || '0.0000'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/AlchmKitchen.tsx",
      "line": 148,
      "column": 21,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">⦿ Matter: {alchemicalValues.Matter.toFixed(4) || '0.0000'}<",
      "context": "<div>⦿ Matter: {alchemicalValues.Matter.toFixed(4) || '0.0000'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/AlchmKitchen.tsx",
      "line": 149,
      "column": 21,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">⦿ Substance: {alchemicalValues.Substance.toFixed(4) || '0.0000'}<",
      "context": "<div>⦿ Substance: {alchemicalValues.Substance.toFixed(4) || '0.0000'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/AstrologicalClock.tsx",
      "line": 154,
      "column": 11,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Ascendant: {ZODIAC_SYMBOLS[chartData.ascendant || 'Libra']} {chartData.ascendant || 'Not available'}<",
      "context": "<p>Ascendant: {ZODIAC_SYMBOLS[chartData.ascendant || 'Libra']} {chartData.ascendant || 'Not available'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/AstrologyChart/AstrologyChart.migrated.tsx",
      "line": 15,
      "column": 31,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const AstrologyChartMigrated: React.FC<AstrologyChartProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/AstrologyWarning.tsx",
      "line": 17,
      "column": 11,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{state.errorMessage || 'Astrological calculations error. Data may be incomplete or inaccurate.'}<",
      "context": "<p>{state.errorMessage || 'Astrological calculations error. Data may be incomplete or inaccurate.'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/BridgeExampleComponent.tsx",
      "line": 88,
      "column": 35,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{isDaytime ? 'Daytime' : 'Nighttime'}<",
      "context": "<p className=\"font-medium\">{isDaytime ? 'Daytime' : 'Nighttime'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ChakraDisplay.migrated.tsx",
      "line": 286,
      "column": 28,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Planets: {planets.join(', ')}<",
      "context": "<span>Planets: {planets.join(', ')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ChakraDisplay.migrated.tsx",
      "line": 65,
      "column": 30,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ChakraDisplayMigrated: React.FC<ChakraDisplayProps> = ({ compact = false }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/ChakraEnergiesDisplay.tsx",
      "line": 264,
      "column": 28,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Planets: {planets.join(', ')}<",
      "context": "<span>Planets: {planets.join(', ')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ChakraEnergiesDisplay.tsx",
      "line": 22,
      "column": 30,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ChakraEnergiesDisplay: React.FC<ChakraEnergiesDisplayProps> = ({ compact = false }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/CookingMethodsSection.backup.tsx",
      "line": 1792,
      "column": 81,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": "> : direction === 'decrease' ? <",
      "context": "{direction === 'increase' ? <ArrowUp size={14} /> : direction === 'decrease' ? <ArrowDown size={14} /> : <Minus size={14} />}",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CookingMethodsSection.backup.tsx",
      "line": 1196,
      "column": 37,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const CookingMethodsSection: React.FC<CookingMethodsProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/CookingMethodsSection.migrated.tsx",
      "line": 547,
      "column": 26,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Best for: {method.suitable_for.join(', ')}<",
      "context": "<span>Best for: {method.suitable_for.join(', ')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CookingMethodsSection.tsx",
      "line": 598,
      "column": 81,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": "> : direction === 'decrease' ? <",
      "context": "{direction === 'increase' ? <ArrowUp size={14} /> : direction === 'decrease' ? <ArrowDown size={14} /> : <Minus size={14} />}",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CookingMethodsSection.tsx",
      "line": 61,
      "column": 37,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const CookingMethodsSection: React.FC<CookingMethodsSectionProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/CuisineRecommender/index.tsx",
      "line": 26,
      "column": 34,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const CuisineRecommender: React.FC<CuisineRecommenderProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/CuisineRecommender.tsx",
      "line": 1420,
      "column": 59,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Greg's Energy<",
      "context": "<div className=\"text-xs text-gray-600\">Greg's Energy</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineRecommender.tsx",
      "line": 557,
      "column": 25,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const LoadingComponent: React.FC<{ loadingState: LoadingState }> = ({ loadingState }) => (",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/CuisineSection/CuisineSection.migrated.tsx",
      "line": 308,
      "column": 48,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{sauce.name || 'Unnamed sauce'}<",
      "context": "<h3 className=\"text-lg font-semibold\">{sauce.name || 'Unnamed sauce'}</h3>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSection/CuisineSection.migrated.tsx",
      "line": 316,
      "column": 50,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{sauce.description || 'No description available'}<",
      "context": "<p className=\"text-sm text-gray-600 mb-3\">{sauce.description || 'No description available'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSection/CuisineSection.migrated.tsx",
      "line": 357,
      "column": 50,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{recipe.description || 'No description available'}<",
      "context": "<p className=\"text-sm text-gray-600 mb-3\">{recipe.description || 'No description available'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSection/index.tsx",
      "line": 207,
      "column": 69,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{cuisine.replace('_', ' ')} Cuisine<",
      "context": "<h2 className=\"text-2xl font-bold capitalize mb-4\">{cuisine.replace('_', ' ')} Cuisine</h2>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSection/index.tsx",
      "line": 213,
      "column": 62,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{String(recipeData.name || 'Unnamed Recipe')}<",
      "context": "<h3 className=\"text-lg font-medium\">{String(recipeData.name || 'Unnamed Recipe')}</h3>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSection/index.tsx",
      "line": 214,
      "column": 68,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{String(recipeData.description || 'No description available')}<",
      "context": "<p className=\"text-gray-600 text-sm mt-1\">{String(recipeData.description || 'No description available')}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSection/index.tsx",
      "line": 231,
      "column": 59,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{cuisine.replace('_', ' ')} Cuisine<",
      "context": "<h2 className=\"text-2xl font-bold capitalize mb-4\">{cuisine.replace('_', ' ')} Cuisine</h2>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSection/index.tsx",
      "line": 292,
      "column": 60,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{String(sauceData.name || 'Traditional Sauce')}<",
      "context": "<h4 className=\"font-medium text-lg text-gray-900\">{String(sauceData.name || 'Traditional Sauce')}</h4>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSection/index.tsx",
      "line": 44,
      "column": 30,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const CuisineSection: React.FC<CuisineSectionProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/CuisineSection.tsx",
      "line": 201,
      "column": 67,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{cuisine.replace('_', ' ')} Cuisine<",
      "context": "<h2 className=\"text-2xl font-bold capitalize mb-4\">{cuisine.replace('_', ' ')} Cuisine</h2>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSection.tsx",
      "line": 341,
      "column": 48,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{sauce.name || 'Unnamed sauce'}<",
      "context": "<h3 className=\"text-lg font-semibold\">{sauce.name || 'Unnamed sauce'}</h3>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSection.tsx",
      "line": 349,
      "column": 50,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{sauce.description || 'No description available'}<",
      "context": "<p className=\"text-sm text-gray-600 mb-3\">{sauce.description || 'No description available'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSection.tsx",
      "line": 390,
      "column": 50,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{recipe.description || 'No description available'}<",
      "context": "<p className=\"text-sm text-gray-600 mb-3\">{recipe.description || 'No description available'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSection.tsx",
      "line": 41,
      "column": 30,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const CuisineSection: React.FC<CuisineSectionProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/CuisineSelector.migrated.tsx",
      "line": 394,
      "column": 20,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": "> - {resolvedLunarPhase.split(/(?=[A-Z])/).join(\" \")}<",
      "context": "<span> - {resolvedLunarPhase.split(/(?=[A-Z])/).join(\" \")}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSelector.tsx",
      "line": 266,
      "column": 20,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": "> - {currentLunarPhase.split(/(?=[A-Z])/).join(\" \")}<",
      "context": "<span> - {currentLunarPhase.split(/(?=[A-Z])/).join(\" \")}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSpecificRecommendations.tsx",
      "line": 126,
      "column": 81,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">= 0.7 ? '✓' : recipe.planetaryDayScore <",
      "context": "{timeFactors.planetaryDay.planet} Day {recipe.planetaryDayScore >= 0.7 ? '✓' : recipe.planetaryDayScore <= 0.3 ? '✗' : ''}",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSpecificRecommendations.tsx",
      "line": 134,
      "column": 84,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">= 0.7 ? '✓' : recipe.planetaryHourScore <",
      "context": "{timeFactors.planetaryHour.planet} Hour {recipe.planetaryHourScore >= 0.7 ? '✓' : recipe.planetaryHourScore <= 0.3 ? '✗' : ''}",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/CuisineSpecificRecommendations.tsx",
      "line": 18,
      "column": 39,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const CuisineSpecificRecommendations: React.FC<CuisineSpecificRecommendationsProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/DebugInfo.tsx",
      "line": 33,
      "column": 11,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Mounted: {hasRenderedRef.current ? 'true' : 'false'}<",
      "context": "<p>Mounted: {hasRenderedRef.current ? 'true' : 'false'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/DebugInfo.tsx",
      "line": 35,
      "column": 11,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Current Sign: {(planetaryPositions.sun as any)?.sign || 'unknown'}<",
      "context": "<p>Current Sign: {(planetaryPositions.sun as any)?.sign || 'unknown'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/DebugInfo.tsx",
      "line": 36,
      "column": 11,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Planetary Hour: {(state.astrologicalState.planetaryHour as string) || 'Unknown'}<",
      "context": "<p>Planetary Hour: {(state.astrologicalState.planetaryHour as string) || 'Unknown'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/DebugInfo.tsx",
      "line": 37,
      "column": 11,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Lunar Phase: {state.lunarPhase || 'Unknown'}<",
      "context": "<p>Lunar Phase: {state.lunarPhase || 'Unknown'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/DebugInfo.tsx",
      "line": 41,
      "column": 14,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">⦿ Spirit: {state.alchemicalValues.Spirit.toFixed(4) || '0.0000'}<",
      "context": "<li>⦿ Spirit: {state.alchemicalValues.Spirit.toFixed(4) || '0.0000'}</li>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/DebugInfo.tsx",
      "line": 42,
      "column": 14,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">⦿ Essence: {state.alchemicalValues.Essence.toFixed(4) || '0.0000'}<",
      "context": "<li>⦿ Essence: {state.alchemicalValues.Essence.toFixed(4) || '0.0000'}</li>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/DebugInfo.tsx",
      "line": 43,
      "column": 14,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">⦿ Matter: {state.alchemicalValues.Matter.toFixed(4) || '0.0000'}<",
      "context": "<li>⦿ Matter: {state.alchemicalValues.Matter.toFixed(4) || '0.0000'}</li>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/DebugInfo.tsx",
      "line": 44,
      "column": 14,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">⦿ Substance: {state.alchemicalValues.Substance.toFixed(4) || '0.0000'}<",
      "context": "<li>⦿ Substance: {state.alchemicalValues.Substance.toFixed(4) || '0.0000'}</li>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ElementalDisplay/ElementalEnergyDisplay.migrated.tsx",
      "line": 16,
      "column": 39,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ElementalEnergyDisplayMigrated: React.FC<ElementalEnergyDisplayProps> = ({ showDebug = false }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/ElementalDisplay/ElementalEnergyDisplay.tsx",
      "line": 19,
      "column": 31,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ElementalEnergyDisplay: React.FC<ElementalEnergyDisplayProps> = ({ showDebug = false }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/ElementalExplorer.tsx",
      "line": 27,
      "column": 32,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": "> toggleQuality('initiating')}>Initiating<",
      "context": "<button onClick={() => toggleQuality('initiating')}>Initiating</button>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ElementalExplorer.tsx",
      "line": 28,
      "column": 32,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": "> toggleQuality('grounding')}>Grounding<",
      "context": "<button onClick={() => toggleQuality('grounding')}>Grounding</button>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ElementalExplorer.tsx",
      "line": 29,
      "column": 32,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": "> toggleQuality('adaptable')}>Adaptable<",
      "context": "<button onClick={() => toggleQuality('adaptable')}>Adaptable</button>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ElementalExplorer.tsx",
      "line": 30,
      "column": 32,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": "> toggleQuality('spicy')}>Spicy<",
      "context": "<button onClick={() => toggleQuality('spicy')}>Spicy</button>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ElementalExplorer.tsx",
      "line": 31,
      "column": 32,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": "> toggleQuality('stabilizing')}>Stabilizing<",
      "context": "<button onClick={() => toggleQuality('stabilizing')}>Stabilizing</button>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ElementalExplorer.tsx",
      "line": 32,
      "column": 32,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": "> toggleQuality('flexible')}>Flexible<",
      "context": "<button onClick={() => toggleQuality('flexible')}>Flexible</button>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ElementalExplorer.tsx",
      "line": 37,
      "column": 11,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Selected Qualities: {qualities.join(', ')}<",
      "context": "<p>Selected Qualities: {qualities.join(', ')}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ElementalProperties.tsx",
      "line": 21,
      "column": 28,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ElementalProperties: React.FC<ElementalPropertiesProps> = ({ properties,",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/ElementalRecommendations.migrated.tsx",
      "line": 19,
      "column": 41,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ElementalRecommendationsMigrated: React.FC<ElementalRecommendationsProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/ElementalVisualizer.migrated.tsx",
      "line": 638,
      "column": 21,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{recommendations.flavorProfile?.join(', ')}<",
      "context": "<p>{recommendations.flavorProfile?.join(', ')}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ElementalVisualizer.migrated.tsx",
      "line": 641,
      "column": 21,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{recommendations.cuisineAffinity?.join(', ')}<",
      "context": "<p>{recommendations.cuisineAffinity?.join(', ')}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ElementalVisualizer.migrated.tsx",
      "line": 644,
      "column": 21,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{recommendations.wellnessProperties?.join(', ')}<",
      "context": "<p>{recommendations.wellnessProperties?.join(', ')}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ElementalVisualizer.migrated.tsx",
      "line": 98,
      "column": 36,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ElementalVisualizerMigrated: React.FC<ElementalVisualizerProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/ErrorBoundary/ApiErrorBoundary.tsx",
      "line": 133,
      "column": 11,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">We couldn't connect to the server. Please check your internet connection and try again.<",
      "context": "<p>We couldn't connect to the server. Please check your internet connection and try again.</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ErrorBoundary/ApiErrorBoundary.tsx",
      "line": 187,
      "column": 4,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "): React.FC<P> {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/ErrorBoundary/index.tsx",
      "line": 114,
      "column": 24,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const DefaultFallback: React.FC<ErrorFallbackProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/ErrorBoundary/index.tsx",
      "line": 161,
      "column": 10,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "static defaultProps = {",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/FoodRecommender/IngredientRecommendations.tsx",
      "line": 12,
      "column": 41,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const IngredientRecommendations: React.FC<IngredientRecommendationsProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/FoodRecommender/NutritionalRecommender.tsx",
      "line": 29,
      "column": 31,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const NutritionalRecommender: React.FC<NutritionalRecommenderProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/FoodRecommender/NutritionalRecommender.tsx",
      "line": 498,
      "column": 19,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const RecipeCard: React.FC<{ recipe: RecipeRecommendation }> = ({ recipe }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/FoodRecommender/NutritionalRecommender.tsx",
      "line": 623,
      "column": 23,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const IngredientCard: React.FC<IngredientCardProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/FoodRecommender/components/FoodBalanceTracker.tsx",
      "line": 9,
      "column": 27,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const FoodBalanceTracker: React.FC<FoodBalanceTrackerProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/Header/FoodRecommender/IngredientRecommendations.tsx",
      "line": 18,
      "column": 41,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const IngredientRecommendations: React.FC<IngredientRecommendationsProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/Header/FoodRecommender/components/Cuisinegroup.tsx",
      "line": 334,
      "column": 50,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{Array.isArray(recipe.season) ? recipe.season.join(', ') : recipe.season}<",
      "context": "<span>{Array.isArray(recipe.season) ? recipe.season.join(', ') : recipe.season}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/Header/FoodRecommender/components/Cuisinegroup.tsx",
      "line": 338,
      "column": 50,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{Array.isArray(recipe.mealType) ? recipe.mealType.join(', ') : recipe.mealType}<",
      "context": "<span>{Array.isArray(recipe.mealType) ? recipe.mealType.join(', ') : recipe.mealType}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/Header/FoodRecommender/components/Cuisinegroup.tsx",
      "line": 342,
      "column": 50,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{recipe.timeToMake || \"\"}<",
      "context": "<span>{recipe.timeToMake || \"\"}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/Header/FoodRecommender/components/Cuisinegroup.tsx",
      "line": 26,
      "column": 21,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const CuisineGroup: React.FC<Props> = ({ recipes, elementalState }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/Header/FoodRecommender/components/IngredientRecommendations.tsx",
      "line": 80,
      "column": 19,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Planets: {ingredient.astrologicalProfile.rulingPlanets.join(', ')}<",
      "context": "<div>Planets: {ingredient.astrologicalProfile.rulingPlanets.join(', ')}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/Header/FoodRecommender/components/IngredientRecommendations.tsx",
      "line": 12,
      "column": 34,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const IngredientRecommendations: React.FC<IngredientRecommendationsProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/Header/FoodRecommender/components/NutritionDisplay.tsx",
      "line": 37,
      "column": 17,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Vitamins: {nutrition.vitamins.join(', ')}<",
      "context": "<div>Vitamins: {nutrition.vitamins.join(', ')}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/Header/FoodRecommender/components/NutritionDisplay.tsx",
      "line": 40,
      "column": 17,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Minerals: {nutrition.minerals.join(', ')}<",
      "context": "<div>Minerals: {nutrition.minerals.join(', ')}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/Header/FoodRecommender/index.tsx",
      "line": 576,
      "column": 70,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{isDaytime ? 'Daytime' : 'Nighttime'}<",
      "context": "<span className=\"text-purple-100\">{isDaytime ? 'Daytime' : 'Nighttime'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/Header/FoodRecommender/index.tsx",
      "line": 590,
      "column": 70,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{String(currentZodiac || '')}<",
      "context": "<span className=\"text-purple-100\">{String(currentZodiac || '')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/Header/FoodRecommender/index.tsx",
      "line": 608,
      "column": 132,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).name || '').replace('_', ' ')}<",
      "context": "<h4 className=\"font-medium text-white capitalize\">{String((ingredient as Record<string, unknown>).name || '').replace('_', ' ')}</h4>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/Header/FoodRecommender/index.tsx",
      "line": 670,
      "column": 181,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).calories || '')}<",
      "context": "<span className=\"text-white ml-1\">{String(((ingredient as Record<string, unknown>).nutritionalInfo as Record<string, unknown>).calories || '')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/Header/FoodRecommender/index.tsx",
      "line": 676,
      "column": 181,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).protein || '')}g<",
      "context": "<span className=\"text-white ml-1\">{String(((ingredient as Record<string, unknown>).nutritionalInfo as Record<string, unknown>).protein || '')}g</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/Header/FoodRecommender/index.tsx",
      "line": 682,
      "column": 181,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).carbs || '')}g<",
      "context": "<span className=\"text-white ml-1\">{String(((ingredient as Record<string, unknown>).nutritionalInfo as Record<string, unknown>).carbs || '')}g</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/Header/FoodRecommender/index.tsx",
      "line": 688,
      "column": 181,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).fat || '')}g<",
      "context": "<span className=\"text-white ml-1\">{String(((ingredient as Record<string, unknown>).nutritionalInfo as Record<string, unknown>).fat || '')}g</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/IngredientCard.tsx",
      "line": 22,
      "column": 30,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const IngredientCard: React.FC<IngredientCardProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/IngredientDisplay.tsx",
      "line": 59,
      "column": 46,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{ingredient.name || 'Unknown Ingredient'}<",
      "context": "<h3 className=\"font-semibold text-lg\">{ingredient.name || 'Unknown Ingredient'}</h3>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/IngredientMapper.tsx",
      "line": 116,
      "column": 57,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{result.recipe.cuisine || 'Unknown Cuisine'}<",
      "context": "<div className=\"text-sm text-gray-600\">{result.recipe.cuisine || 'Unknown Cuisine'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/IngredientMapper.tsx",
      "line": 179,
      "column": 59,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{alt.mapping.category || 'Unknown Category'}<",
      "context": "<div className=\"text-xs text-gray-600\">{alt.mapping.category || 'Unknown Category'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/IngredientMapper.tsx",
      "line": 230,
      "column": 74,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).type || '').charAt(0).toUpperCase() + String((compatibilityResult  as Record<",
      "context": "{String((compatibilityResult  as Record<string, unknown>).type || '').charAt(0).toUpperCase() + String((compatibilityResult  as Record<string, unknown>).type || '').slice(1)} Compatibility",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/IngredientRecommendations.tsx",
      "line": 183,
      "column": 51,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{getElementIcon('Fire')}<",
      "context": "<span className={styles.elementIcon}>{getElementIcon('Fire')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/IngredientRecommendations.tsx",
      "line": 193,
      "column": 51,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{getElementIcon('Water')}<",
      "context": "<span className={styles.elementIcon}>{getElementIcon('Water')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/IngredientRecommendations.tsx",
      "line": 203,
      "column": 51,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{getElementIcon('Earth')}<",
      "context": "<span className={styles.elementIcon}>{getElementIcon('Earth')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/IngredientRecommendations.tsx",
      "line": 213,
      "column": 51,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{getElementIcon('Air')}<",
      "context": "<span className={styles.elementIcon}>{getElementIcon('Air')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/IngredientRecommendations.tsx",
      "line": 328,
      "column": 49,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{getElementIcon('Fire')}<",
      "context": "<span className={styles.elementIcon}>{getElementIcon('Fire')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/IngredientRecommendations.tsx",
      "line": 337,
      "column": 49,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{getElementIcon('Water')}<",
      "context": "<span className={styles.elementIcon}>{getElementIcon('Water')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/IngredientRecommendations.tsx",
      "line": 346,
      "column": 49,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{getElementIcon('Earth')}<",
      "context": "<span className={styles.elementIcon}>{getElementIcon('Earth')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/IngredientRecommendations.tsx",
      "line": 355,
      "column": 49,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{getElementIcon('Air')}<",
      "context": "<span className={styles.elementIcon}>{getElementIcon('Air')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/MoonDisplay.tsx",
      "line": 386,
      "column": 48,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{moonPhase.phase.replace(/_/g, ' ')}<",
      "context": "<p className=\"font-medium capitalize\">{moonPhase.phase.replace(/_/g, ' ')}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/MoonDisplay.tsx",
      "line": 462,
      "column": 60,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Karma you're growing toward<",
      "context": "<div className=\"text-xs text-gray-400 mt-1\">Karma you're growing toward</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/OptimizedComponentWrapper.tsx",
      "line": 14,
      "column": 34,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const OptimizedComponentWrapper: React.FC<WrapperProps> = ({ children, name }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/PlanetInfoModal.tsx",
      "line": 135,
      "column": 70,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": "> 0 ? 'bg-green-500' : planetInfo.dignity.strength <",
      "context": "className={`h-full ${planetInfo.dignity.strength > 0 ? 'bg-green-500' : planetInfo.dignity.strength < 0 ? 'bg-red-500' : 'bg-gray-400'}`}",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/PlanetaryDisplay.tsx",
      "line": 71,
      "column": 33,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const PlanetaryPositionDisplay: React.FC<PlanetaryPositionDisplayProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/PlanetaryDisplay.tsx",
      "line": 93,
      "column": 29,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const PlanetaryTimeDisplay: React.FC<PlanetaryTimeDisplayProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/PlanetaryDisplay.tsx",
      "line": 156,
      "column": 25,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const PlanetaryDisplay: React.FC<PlanetaryDisplayProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/PlanetaryHours/PlanetaryHoursDisplay.tsx",
      "line": 184,
      "column": 39,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{currentHour || 'Unknown'}<",
      "context": "<span className=\"ml-1\">{currentHour || 'Unknown'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/PlanetaryHours/PlanetaryHoursDisplay.tsx",
      "line": 204,
      "column": 47,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{currentDay || 'Unknown'}<",
      "context": "<span className=\"ml-1 text-sm\">{currentDay || 'Unknown'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/PlanetaryHours/PlanetaryHoursDisplay.tsx",
      "line": 216,
      "column": 47,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{currentMinute || 'Unknown'}<",
      "context": "<span className=\"ml-1 text-sm\">{currentMinute || 'Unknown'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/PlanetaryHours/PlanetaryHoursDisplay.tsx",
      "line": 249,
      "column": 37,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{currentDay || 'Unknown'}<",
      "context": "<span className=\"ml-1\">{currentDay || 'Unknown'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/PlanetaryHours/PlanetaryHoursDisplay.tsx",
      "line": 263,
      "column": 37,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{currentHour || 'Unknown'}<",
      "context": "<span className=\"ml-1\">{currentHour || 'Unknown'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/PlanetaryHours/PlanetaryHoursDisplay.tsx",
      "line": 277,
      "column": 37,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{currentMinute || 'Unknown'}<",
      "context": "<span className=\"ml-1\">{currentMinute || 'Unknown'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/PlanetaryHours/PlanetaryHoursDisplay.tsx",
      "line": 44,
      "column": 30,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const PlanetaryHoursDisplay: React.FC<PlanetaryHoursDisplayProps> = ({ compact = false }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/PlanetaryPositionDisplay.migrated.tsx",
      "line": 14,
      "column": 48,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const PlanetaryPositionDisplayMigrated: React.FC<PlanetaryPositionDisplayProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/PlanetaryPositionDisplay.tsx",
      "line": 12,
      "column": 40,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const PlanetaryPositionDisplay: React.FC<PlanetaryPositionDisplayProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/PlanetaryTimeDisplay.tsx",
      "line": 10,
      "column": 29,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const PlanetaryTimeDisplay: React.FC<PlanetaryTimeDisplayProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/RealtimeAlchemicalCalculator.tsx",
      "line": 196,
      "column": 40,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{isConnected ? 'Connected' : 'Offline'}<",
      "context": "<span className=\"text-sm\">{isConnected ? 'Connected' : 'Offline'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/RealtimeAlchemicalCalculator.tsx",
      "line": 302,
      "column": 44,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Greg's Energy:<",
      "context": "<span className=\"font-medium\">Greg's Energy:</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/Recipe/RecipeRecommendations.migrated.tsx",
      "line": 91,
      "column": 19,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const RecipeCard: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/Recipe/RecipeRecommendations.migrated.tsx",
      "line": 272,
      "column": 38,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const RecipeRecommendationsMigrated: React.FC<RecipeRecommendationsProps> = ({ filters }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/Recipe/index.tsx",
      "line": 24,
      "column": 32,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{typeof ingredient === 'string' ? ingredient : ingredient.name || String(ingredient)}<",
      "context": "<li key={index}>{typeof ingredient === 'string' ? ingredient : ingredient.name || String(ingredient)}</li>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/RecipeList/RecipeList.migrated.tsx",
      "line": 75,
      "column": 19,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const RecipeCard: React.FC<RecipeCardProps> = ({ recipe, isExpanded, onToggle }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/RecipeRecommendations.tsx",
      "line": 136,
      "column": 19,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const RecipeCard: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/RecipeRecommendations.tsx",
      "line": 285,
      "column": 37,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const RecipeRecommendations: React.FC<RecipeRecommendationsProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/RecommendedRecipes.tsx",
      "line": 16,
      "column": 27,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const RecommendedRecipes: React.FC<RecommendedRecipesProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/SauceRecommendations.tsx",
      "line": 249,
      "column": 18,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const SauceCard: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/SauceRecommendations.tsx",
      "line": 428,
      "column": 36,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const SauceRecommendations: React.FC<SauceRecommendationsProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/SauceRecommender.tsx",
      "line": 819,
      "column": 34,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{typeof ing === 'string' ? ing : String(ing)}<",
      "context": "<span>{typeof ing === 'string' ? ing : String(ing)}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/SauceRecommender.tsx",
      "line": 877,
      "column": 58,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Chef's Notes:<",
      "context": "<span className=\"font-medium\">Chef's Notes:</span> {sauce.preparationNotes}",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/SunDisplay.tsx",
      "line": 162,
      "column": 78,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).sign || 'Unknown')}<",
      "context": "<p className=\"font-medium\">{String((sun as Record<string, unknown>).sign || 'Unknown')}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/TarotDisplay.tsx",
      "line": 277,
      "column": 74,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{tarotCards.majorCard.name || 'Major Arcana'}<",
      "context": "<h4 className=\"font-bold text-white text-lg drop-shadow-md\">{tarotCards.majorCard.name || 'Major Arcana'}</h4>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/TarotFoodDisplay.tsx",
      "line": 192,
      "column": 74,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{String(minorCardData.name || 'Minor Arcana')}<",
      "context": "<h4 className=\"font-bold text-white text-lg drop-shadow-md\">{String(minorCardData.name || 'Minor Arcana')}</h4>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/TarotFoodDisplay.tsx",
      "line": 214,
      "column": 131,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).name || 'Major Arcana')}<",
      "context": "<h4 className=\"font-bold text-white text-lg drop-shadow-md\">{String((tarotCards.majorCard  as Record<string, unknown>).name || 'Major Arcana')}</h4>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/TarotFoodDisplay.tsx",
      "line": 246,
      "column": 54,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{String(name || '')}<",
      "context": "<div className=\"text-gray-400 mt-1\">{String(name || '')}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/ZodiacSign.tsx",
      "line": 49,
      "column": 26,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const ZodiacSign: React.FC<ZodiacSignProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/__tests__/AdvancedSearchFilters.test.tsx",
      "line": 11,
      "column": 9,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "const defaultProps = {",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/__tests__/AdvancedSearchFilters.test.tsx",
      "line": 22,
      "column": 39,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "render(<AdvancedSearchFilters {...defaultProps} />);",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/__tests__/AdvancedSearchFilters.test.tsx",
      "line": 29,
      "column": 39,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "render(<AdvancedSearchFilters {...defaultProps} />);",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/__tests__/AdvancedSearchFilters.test.tsx",
      "line": 44,
      "column": 39,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "render(<AdvancedSearchFilters {...defaultProps} />);",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/__tests__/AdvancedSearchFilters.test.tsx",
      "line": 54,
      "column": 39,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "render(<AdvancedSearchFilters {...defaultProps} />);",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/__tests__/AdvancedSearchFilters.test.tsx",
      "line": 74,
      "column": 39,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "render(<AdvancedSearchFilters {...defaultProps} />);",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/__tests__/AdvancedSearchFilters.test.tsx",
      "line": 90,
      "column": 39,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "render(<AdvancedSearchFilters {...defaultProps} />);",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/__tests__/AdvancedSearchFilters.test.tsx",
      "line": 115,
      "column": 39,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "render(<AdvancedSearchFilters {...defaultProps} />);",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/__tests__/AdvancedSearchFilters.test.tsx",
      "line": 142,
      "column": 39,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "render(<AdvancedSearchFilters {...defaultProps} />);",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/__tests__/AdvancedSearchFilters.test.tsx",
      "line": 162,
      "column": 39,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "render(<AdvancedSearchFilters {...defaultProps} />);",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/analytics/PerformanceAnalyticsDashboard.tsx",
      "line": 46,
      "column": 19,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const MetricCard: React.FC<MetricCardProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/analytics/PerformanceAnalyticsDashboard.tsx",
      "line": 122,
      "column": 25,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const PerformanceChart: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/analytics/PerformanceAnalyticsDashboard.tsx",
      "line": 168,
      "column": 45,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const PerformanceAnalyticsDashboard: React.FC<PerformanceAnalyticsDashboardProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignControlPanel.tsx",
      "line": 25,
      "column": 36,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const CampaignControlPanel: React.FC<CampaignControlPanelProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignControlPanel.tsx",
      "line": 267,
      "column": 30,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const SystemHealthIndicator: React.FC<{ health: SystemHealthStatus }> = ({ health }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignControlPanel.tsx",
      "line": 305,
      "column": 24,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const QuickActionCard: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignControlPanel.tsx",
      "line": 346,
      "column": 27,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const CampaignStatusCard: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignControlPanel.tsx",
      "line": 426,
      "column": 27,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const CampaignResultCard: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignIntegrationDashboard.tsx",
      "line": 29,
      "column": 44,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const CampaignIntegrationDashboard: React.FC<CampaignIntegrationDashboardProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignIntegrationDashboard.tsx",
      "line": 276,
      "column": 22,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const OverviewPanel: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignIntegrationDashboard.tsx",
      "line": 410,
      "column": 23,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const DebuggingPanel: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignScheduler.tsx",
      "line": 209,
      "column": 18,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{editingSchedule ? 'Edit Schedule' : 'Create New Schedule'}<",
      "context": "<h3>{editingSchedule ? 'Edit Schedule' : 'Create New Schedule'}</h3>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/campaign/CampaignScheduler.tsx",
      "line": 351,
      "column": 41,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{schedule.phases.join(', ')}<",
      "context": "<span className=\"detail-value\">{schedule.phases.join(', ')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/campaign/CampaignScheduler.tsx",
      "line": 23,
      "column": 33,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const CampaignScheduler: React.FC<CampaignSchedulerProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignScheduler.tsx",
      "line": 331,
      "column": 21,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ScheduleCard: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignWorkflowBuilder.tsx",
      "line": 444,
      "column": 17,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Safety Level: {workflow.config.safetySettings?.automaticRollbackEnabled ? 'High' : 'Medium'}<",
      "context": "<div>Safety Level: {workflow.config.safetySettings?.automaticRollbackEnabled ? 'High' : 'Medium'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/campaign/CampaignWorkflowBuilder.tsx",
      "line": 539,
      "column": 16,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{validationResults?.success ? 'Passed' : 'Failed'}<",
      "context": "<span>{validationResults?.success ? 'Passed' : 'Failed'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/campaign/CampaignWorkflowBuilder.tsx",
      "line": 26,
      "column": 39,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const CampaignWorkflowBuilder: React.FC<CampaignWorkflowBuilderProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignWorkflowBuilder.tsx",
      "line": 355,
      "column": 21,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const TemplateCard: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignWorkflowBuilder.tsx",
      "line": 411,
      "column": 25,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const WorkflowStepCard: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignWorkflowBuilder.tsx",
      "line": 432,
      "column": 26,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ConfigurationStep: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignWorkflowBuilder.tsx",
      "line": 457,
      "column": 26,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ValidationResults: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignWorkflowBuilder.tsx",
      "line": 493,
      "column": 22,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const DryRunResults: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignWorkflowBuilder.tsx",
      "line": 526,
      "column": 21,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ApprovalStep: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/CampaignWorkflowBuilder.tsx",
      "line": 562,
      "column": 21,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const WorkflowCard: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/ConflictResolutionPanel.tsx",
      "line": 30,
      "column": 39,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const ConflictResolutionPanel: React.FC<ConflictResolutionPanelProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/ConflictResolutionPanel.tsx",
      "line": 341,
      "column": 21,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ConflictCard: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/ConflictResolutionPanel.tsx",
      "line": 410,
      "column": 24,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ConflictDetails: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/campaign/ConflictResolutionPanel.tsx",
      "line": 519,
      "column": 27,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ManualOverrideForm: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/common/DisplayComponents.tsx",
      "line": 40,
      "column": 13,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Context state available: {state ? 'Yes' : 'No'}<",
      "context": "<p>Context state available: {state ? 'Yes' : 'No'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/common/DisplayComponents.tsx",
      "line": 41,
      "column": 13,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Values defined: {alchemicalValues ? 'Yes' : 'No'}<",
      "context": "<p>Values defined: {alchemicalValues ? 'Yes' : 'No'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/common/DisplayComponents.tsx",
      "line": 129,
      "column": 64,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{chakra.replace('_', ' ')}<",
      "context": "{!compact && <span className=\"text-sm capitalize\">{chakra.replace('_', ' ')}</span>}",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/common/DisplayComponents.tsx",
      "line": 25,
      "column": 43,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const AlchemicalPropertiesDisplay: React.FC<AlchemicalPropertiesDisplayProps> = ({ showDebug = false }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/common/DisplayComponents.tsx",
      "line": 83,
      "column": 37,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const ChakraEnergiesDisplay: React.FC<ChakraEnergiesDisplayProps> = ({ compact = false }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/common/DisplayComponents.tsx",
      "line": 153,
      "column": 38,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const ElementalEnergyDisplay: React.FC<ElementalEnergyDisplayProps> = ({ showDebug = false }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/common/LoadingSpinner.tsx",
      "line": 8,
      "column": 23,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const LoadingSpinner: React.FC<LoadingSpinnerProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/common/Utilities.tsx",
      "line": 14,
      "column": 21,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const Clock: React.FC<ClockProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/common/Utilities.tsx",
      "line": 90,
      "column": 26,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const ClientOnly: React.FC<ClientOnlyProps> = ({ children, fallback = null }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/common/Utilities.tsx",
      "line": 111,
      "column": 30,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const LoadingSpinner: React.FC<LoadingSpinnerProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/common/Utilities.tsx",
      "line": 134,
      "column": 26,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const ZodiacSign: React.FC<ZodiacSignProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/common/Utilities.tsx",
      "line": 195,
      "column": 25,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const DebugInfo: React.FC<DebugInfoProps> = ({ data = {}, title = \"Debug Info\" }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/debug/AlchemicalDebugger.tsx",
      "line": 69,
      "column": 13,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{(alchemicalContext.state.astrologicalState.currentZodiacSign as string) || 'unknown'}<",
      "context": "<div>{(alchemicalContext.state.astrologicalState.currentZodiacSign as string) || 'unknown'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/AlchemicalDebugger.tsx",
      "line": 72,
      "column": 13,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{alchemicalContext.isDaytime ? 'Yes' : 'No'}<",
      "context": "<div>{alchemicalContext.isDaytime ? 'Yes' : 'No'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/ConsolidatedDebugInfo.tsx",
      "line": 210,
      "column": 21,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Sun Sign: {(planetaryPositions.sun as any)?.sign || 'Unknown'}<",
      "context": "<div>Sun Sign: {(planetaryPositions.sun as any)?.sign || 'Unknown'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/ConsolidatedDebugInfo.tsx",
      "line": 211,
      "column": 21,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Lunar Phase: {state.lunarPhase || 'Unknown'}<",
      "context": "<div>Lunar Phase: {state.lunarPhase || 'Unknown'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/ConsolidatedDebugInfo.tsx",
      "line": 212,
      "column": 21,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Planetary Hour: {state.planetaryHour || 'Unknown'}<",
      "context": "<div>Planetary Hour: {state.planetaryHour || 'Unknown'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/ConsolidatedDebugInfo.tsx",
      "line": 213,
      "column": 21,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Time of Day: {isDaytime ? 'Day' : 'Night'}<",
      "context": "<div>Time of Day: {isDaytime ? 'Day' : 'Night'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/ConsolidatedDebugInfo.tsx",
      "line": 214,
      "column": 21,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Dominant Element: {state.dominantElement || 'Unknown'}<",
      "context": "<div>Dominant Element: {state.dominantElement || 'Unknown'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/CuisineRecommenderDebug.tsx",
      "line": 38,
      "column": 17,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const StepCard: React.FC<StepProps> = ({ step, expanded, onToggle }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/debug/CuisineRecommenderDebug.tsx",
      "line": 80,
      "column": 32,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ElementalProfileDisplay: React.FC<{ profile: ElementalProperties, title?: string }> = ({ profile, title }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/debug/CuisineRecommenderDebug.tsx",
      "line": 106,
      "column": 22,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const MatchScoreBar: React.FC<{ score: number, label?: string }> = ({ score, label }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/debug/MoonInfoDisplay.tsx",
      "line": 9,
      "column": 31,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const MoonInfoDisplay: React.FC<MoonInfoDisplayProps> = ({ className = '' }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/debug/StateDebugger.tsx",
      "line": 140,
      "column": 47,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{alchemicalTokens.spirit.toFixed(4) || '0.0000'}<",
      "context": "<span className=\"text-red-300\">{alchemicalTokens.spirit.toFixed(4) || '0.0000'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/StateDebugger.tsx",
      "line": 144,
      "column": 48,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{alchemicalTokens.essence.toFixed(4) || '0.0000'}<",
      "context": "<span className=\"text-blue-300\">{alchemicalTokens.essence.toFixed(4) || '0.0000'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/StateDebugger.tsx",
      "line": 148,
      "column": 49,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{alchemicalTokens.matter.toFixed(4) || '0.0000'}<",
      "context": "<span className=\"text-green-300\">{alchemicalTokens.matter.toFixed(4) || '0.0000'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/StateDebugger.tsx",
      "line": 152,
      "column": 50,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{alchemicalTokens.substance.toFixed(4) || '0.0000'}<",
      "context": "<span className=\"text-purple-300\">{alchemicalTokens.substance.toFixed(4) || '0.0000'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/StateDebugger.tsx",
      "line": 163,
      "column": 47,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{thermodynamics?.heat.toFixed(4) || '0.0000'}<",
      "context": "<span className=\"text-red-300\">{thermodynamics?.heat.toFixed(4) || '0.0000'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/StateDebugger.tsx",
      "line": 167,
      "column": 48,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{thermodynamics?.entropy.toFixed(4) || '0.0000'}<",
      "context": "<span className=\"text-cyan-300\">{thermodynamics?.entropy.toFixed(4) || '0.0000'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/StateDebugger.tsx",
      "line": 171,
      "column": 50,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{thermodynamics?.reactivity.toFixed(4) || '0.0000'}<",
      "context": "<span className=\"text-yellow-300\">{thermodynamics?.reactivity.toFixed(4) || '0.0000'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/StateDebugger.tsx",
      "line": 174,
      "column": 22,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">💫 Greg's Energy:<",
      "context": "<span>💫 Greg's Energy:</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/StateDebugger.tsx",
      "line": 175,
      "column": 48,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{thermodynamics?.gregsEnergy.toFixed(4) || '0.0000'}<",
      "context": "<span className=\"text-pink-300\">{thermodynamics?.gregsEnergy.toFixed(4) || '0.0000'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/StateDebugger.tsx",
      "line": 186,
      "column": 50,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{kalchm?.toFixed(6) || '1.000000'}<",
      "context": "<span className=\"text-yellow-300\">{kalchm?.toFixed(6) || '1.000000'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/StateDebugger.tsx",
      "line": 190,
      "column": 48,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{isNaN(monica || 0) ? '1.000000' : (monica || 1).toFixed(6)}<",
      "context": "<span className=\"text-pink-300\">{isNaN(monica || 0) ? '1.000000' : (monica || 1).toFixed(6)}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/StateInspector.tsx",
      "line": 60,
      "column": 16,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{formatPosition(sunPosition) || currentZodiac || 'N/A'}<",
      "context": "<span>{formatPosition(sunPosition) || currentZodiac || 'N/A'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/StateInspector.tsx",
      "line": 72,
      "column": 16,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{lunarPhase || 'N/A'}<",
      "context": "<span>{lunarPhase || 'N/A'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/StateInspector.tsx",
      "line": 76,
      "column": 16,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{currentPlanetaryHour || 'N/A'}<",
      "context": "<span>{currentPlanetaryHour || 'N/A'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/StateInspector.tsx",
      "line": 80,
      "column": 16,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{isDaytime ? 'Day' : 'Night'}<",
      "context": "<span>{isDaytime ? 'Day' : 'Night'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/StateInspector.tsx",
      "line": 84,
      "column": 16,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{activePlanets.join(', ') || 'N/A'}<",
      "context": "<span>{activePlanets.join(', ') || 'N/A'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/UnifiedDebug.tsx",
      "line": 144,
      "column": 11,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Current Sign: {(state.astrologicalState.currentZodiacSign as string) || (state.astrologicalState.sunSign ) || 'unknown'}<",
      "context": "<p>Current Sign: {(state.astrologicalState.currentZodiacSign as string) || (state.astrologicalState.sunSign ) || 'unknown'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/debug/UnifiedDebug.tsx",
      "line": 193,
      "column": 35,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Element: {testResults.ingredient.dominantElement || 'Unknown'}<",
      "context": "<p className=\"text-xs\">Element: {testResults.ingredient.dominantElement || 'Unknown'}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/demo/UnifiedScoringDemo.tsx",
      "line": 238,
      "column": 59,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{item.planetaryRulers.join(', ')}<",
      "context": "<p className=\"text-sm text-gray-600\">{item.planetaryRulers.join(', ')}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/demo/UnifiedScoringDemo.tsx",
      "line": 245,
      "column": 59,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{item.seasonality.join(', ')}<",
      "context": "<p className=\"text-sm text-gray-600\">{item.seasonality.join(', ')}</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/demo/UnifiedScoringDemo.tsx",
      "line": 255,
      "column": 30,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">#{i + 1} {effect.replace(/([A-Z])/g, ' $1').trim()}<",
      "context": "<span>#{i + 1} {effect.replace(/([A-Z])/g, ' $1').trim()}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/demo/UnifiedScoringDemo.tsx",
      "line": 324,
      "column": 49,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": "> Current planetary movements affecting the item's ruling planets<",
      "context": "<li>• <strong>Transit Effects:</strong> Current planetary movements affecting the item's ruling planets</li>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/error-boundaries/ComponentErrorBoundary.tsx",
      "line": 42,
      "column": 10,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "static defaultProps = {",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/error-handling/ErrorBoundary.tsx",
      "line": 168,
      "column": 25,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const EnhancedFallback: React.FC<ErrorFallbackProps> = ({ error,",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/error-handling/ErrorBoundary.tsx",
      "line": 288,
      "column": 10,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "static defaultProps = {",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/error-handling/ErrorBoundary.tsx",
      "line": 455,
      "column": 65,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "export class GlobalErrorBoundary extends ErrorBoundary { static defaultProps = {",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/error-handling/ErrorBoundary.tsx",
      "line": 456,
      "column": 22,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "...ErrorBoundary.defaultProps,",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/errors/ErrorBoundary.tsx",
      "line": 29,
      "column": 10,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "static defaultProps = {",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/filters.tsx",
      "line": 14,
      "column": 16,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const Filters: React.FC<FiltersProps> = ({ onFilterChange }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/help/AstrologicalCodeSuggestions.tsx",
      "line": 246,
      "column": 43,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const AstrologicalCodeSuggestions: React.FC<AstrologicalCodeSuggestionsProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/help/CodeTemplates.tsx",
      "line": 31,
      "column": 34,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const {{COMPONENT_NAME}}: React.FC<{{COMPONENT_NAME}}Props> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/help/CodeTemplates.tsx",
      "line": 565,
      "column": 29,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const CodeTemplates: React.FC<CodeTemplatesProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/help/ContextualHelp.tsx",
      "line": 12,
      "column": 23,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const Tooltip: React.FC<TooltipProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/help/ContextualHelp.tsx",
      "line": 116,
      "column": 27,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const HelpOverlay: React.FC<HelpOverlayProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/help/GuidedWorkflows.tsx",
      "line": 112,
      "column": 31,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const GuidedWorkflows: React.FC<GuidedWorkflowsProps> = ({ className = '' }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/help/InteractiveHelpSystem.tsx",
      "line": 214,
      "column": 37,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const InteractiveHelpSystem: React.FC<HelpSystemProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/help/__tests__/InteractiveHelpSystem.test.tsx",
      "line": 123,
      "column": 24,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const TestComponent: React.FC<{ context: string }> = ({ context }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/layout/MainPageLayout.tsx",
      "line": 103,
      "column": 23,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const MainPageLayout: React.FC<MainPageLayoutProps> = memo(function MainPageLayout({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/layout/MainPageLayout.tsx",
      "line": 669,
      "column": 31,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const SectionErrorFallback: React.FC<{ error: Error; sectionId: string; onRetry: () => void }> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/layout/MainPageLayout.tsx",
      "line": 691,
      "column": 25,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const SectionWrapper: React.FC<{",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/recipes/RecipeBuilderSimple.tsx",
      "line": 175,
      "column": 56,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">No ingredients added yet. Click \"Add Ingredient\" to start.<",
      "context": "<p className=\"text-gray-500 text-center py-4\">No ingredients added yet. Click \"Add Ingredient\" to start.</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recipes/RecipeBuilderSimple.tsx",
      "line": 227,
      "column": 56,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">No steps added yet. Click \"Add Step\" to start.<",
      "context": "<p className=\"text-gray-500 text-center py-4\">No steps added yet. Click \"Add Step\" to start.</p>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recipes/RecipeBuilderSimple.tsx",
      "line": 26,
      "column": 28,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const RecipeBuilderSimple: React.FC<RecipeBuilderProps> = memo(function RecipeBuilderSimple({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/recipes/RecipeCard.tsx",
      "line": 214,
      "column": 53,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">({typeof recipe.rating === 'number' ? recipe.rating : 0})<",
      "context": "<span className=\"text-sm text-gray-600 ml-1\">({typeof recipe.rating === 'number' ? recipe.rating : 0})</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recipes/RecipeCard.tsx",
      "line": 292,
      "column": 20,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{typeof recipe.cuisine === 'string' ? recipe.cuisine : 'Unknown'}<",
      "context": "<span>{typeof recipe.cuisine === 'string' ? recipe.cuisine : 'Unknown'}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recipes/RecipeCard.tsx",
      "line": 414,
      "column": 56,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Calories: {Math.round(recipe.nutrition.calories * servings / (typeof recipe.numberOfServings === 'number' ? recipe.numberOfServings : servings))}<",
      "context": "{recipe.nutrition.calories && <span>Calories: {Math.round(recipe.nutrition.calories * servings / (typeof recipe.numberOfServings === 'number' ? recipe.numberOfServings : servings))}</span>}",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recipes/RecipeCard.tsx",
      "line": 425,
      "column": 44,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Protein: {(protein * servings / (typeof recipe.numberOfServings === 'number' ? recipe.numberOfServings : servings)).toFixed(1)}g<",
      "context": "{protein && <span>Protein: {(protein * servings / (typeof recipe.numberOfServings === 'number' ? recipe.numberOfServings : servings)).toFixed(1)}g</span>}",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recipes/RecipeCard.tsx",
      "line": 426,
      "column": 42,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Carbs: {(carbs * servings / (typeof recipe.numberOfServings === 'number' ? recipe.numberOfServings : servings)).toFixed(1)}g<",
      "context": "{carbs && <span>Carbs: {(carbs * servings / (typeof recipe.numberOfServings === 'number' ? recipe.numberOfServings : servings)).toFixed(1)}g</span>}",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recipes/RecipeCard.tsx",
      "line": 427,
      "column": 40,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Fat: {(fat * servings / (typeof recipe.numberOfServings === 'number' ? recipe.numberOfServings : servings)).toFixed(1)}g<",
      "context": "{fat && <span>Fat: {(fat * servings / (typeof recipe.numberOfServings === 'number' ? recipe.numberOfServings : servings)).toFixed(1)}g</span>}",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recipes/RecipeCard.tsx",
      "line": 33,
      "column": 19,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const RecipeCard: React.FC<RecipeCardProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/recipes/RecipeGrid.tsx",
      "line": 684,
      "column": 22,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{elementalFilter === 'all' ? 'All Elements' : elementalFilter}<",
      "context": "<span>{elementalFilter === 'all' ? 'All Elements' : elementalFilter}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recipes/RecipeGrid.tsx",
      "line": 796,
      "column": 59,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{diet.replace('-', ' ')}<",
      "context": "<span className=\"text-sm capitalize\">{diet.replace('-', ' ')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recipes/RecipeGrid.tsx",
      "line": 75,
      "column": 19,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const RecipeCard: React.FC<RecipeCardProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/recipes/RecipeGrid.tsx",
      "line": 251,
      "column": 26,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const RecipeGrid: React.FC<RecipeGridProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/recommendations/AlchemicalRecommendations.migrated.tsx",
      "line": 656,
      "column": 91,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).dominantElement || 'Fire')}<",
      "context": "<span className=\"value\">{String((recommendations as Record<string, unknown>).dominantElement || 'Fire')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recommendations/AlchemicalRecommendations.migrated.tsx",
      "line": 660,
      "column": 91,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).dominantAlchemicalProperty || 'Spirit')}<",
      "context": "<span className=\"value\">{String((recommendations as Record<string, unknown>).dominantAlchemicalProperty || 'Spirit')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recommendations/AlchemicalRecommendations.migrated.tsx",
      "line": 691,
      "column": 40,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Greg's Energy:<",
      "context": "<span className=\"label\">Greg's Energy:</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recommendations/AlchemicalRecommendations.migrated.tsx",
      "line": 753,
      "column": 28,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{String(itemData.name || 'Unknown')}<",
      "context": "<h4>{String(itemData.name || 'Unknown')}</h4>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recommendations/AlchemicalRecommendations.migrated.tsx",
      "line": 112,
      "column": 42,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const AlchemicalRecommendationsMigrated: React.FC<AlchemicalRecommendationsProps> = ({",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/recommendations/AlchemicalRecommendations.tsx",
      "line": 89,
      "column": 9,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "const defaultProps = { Fire: 0, Water: 0, Earth: 0, Air: 0 };",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/recommendations/AlchemicalRecommendations.tsx",
      "line": 91,
      "column": 51,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "defaultProps",
      "context": "if (!props || typeof props !== 'object') return defaultProps;",
      "suggestion": "Use default parameter values instead of defaultProps"
    },
    {
      "file": "src/components/recommendations/CuisineRecommender.tsx",
      "line": 894,
      "column": 131,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).parentCuisine || '')}<",
      "context": "<span className=\"text-sm text-gray-500\">Regional variant of {String((selectedCuisineData as Record<string, unknown>).parentCuisine || '')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recommendations/CuisineRecommender.tsx",
      "line": 1041,
      "column": 104,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).name || '')}<",
      "context": "<h5 className=\"font-medium text-sm\">{String((recipe as Record<string, unknown>).name || '')}</h5>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recommendations/CuisineRecommender.tsx",
      "line": 1157,
      "column": 80,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).cookingTime || '')}<",
      "context": "<span>{String((recipe as Record<string, unknown>).cookingTime || '')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recommendations/CuisineRecommender.tsx",
      "line": 1164,
      "column": 80,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).preparationTime || '')}<",
      "context": "<span>{String((recipe as Record<string, unknown>).preparationTime || '')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recommendations/CuisineRecommender.tsx",
      "line": 1171,
      "column": 80,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).servings || '')}<",
      "context": "<span>{String((recipe as Record<string, unknown>).servings || '')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recommendations/CuisineRecommender.tsx",
      "line": 1178,
      "column": 80,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).difficulty || '')}<",
      "context": "<span>{String((recipe as Record<string, unknown>).difficulty || '')}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recommendations/CuisineRecommender.tsx",
      "line": 1243,
      "column": 109,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">).name || \"Cuisine\")} Dish Inspiration<",
      "context": "<h5 className=\"text-sm font-medium\">{String((selectedCuisineData as Record<string, unknown>).name || \"Cuisine\")} Dish Inspiration</h5>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recommendations/IngredientRecommender.migrated.tsx",
      "line": 43,
      "column": 24,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ChakraIndicator: React.FC<ChakraIndicatorProps> = ({ chakra, energyLevel, balanceState }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/recommendations/IngredientRecommender.tsx",
      "line": 1678,
      "column": 23,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Zodiac: {currentZodiac || 'Aries'} ({getZodiacElement(currentZodiac || 'aries')} element)<",
      "context": "<div>Zodiac: {currentZodiac || 'Aries'} ({getZodiacElement(currentZodiac || 'aries')} element)</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recommendations/IngredientRecommender.tsx",
      "line": 1679,
      "column": 23,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">Time: {isDaytime ? 'Diurnal (Day)' : 'Nocturnal (Night)'}<",
      "context": "<div>Time: {isDaytime ? 'Diurnal (Day)' : 'Nocturnal (Night)'}</div>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/components/recommendations/IngredientRecommender.tsx",
      "line": 49,
      "column": 24,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "const ChakraIndicator: React.FC<ChakraIndicatorProps> = ({ chakra, energyLevel, balanceState }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/components/test/UnifiedScoringIntegrationTest.tsx",
      "line": 174,
      "column": 32,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">#{i + 1} {effect.replace(/([A-Z])/g, ' $1').trim()}<",
      "context": "<span>#{i + 1} {effect.replace(/([A-Z])/g, ' $1').trim()}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    },
    {
      "file": "src/context/CurrentChartContext.tsx",
      "line": 60,
      "column": 36,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const CurrentChartProvider: React.FC<{children: React.ReactNode}> = ({ children }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/contexts/AlchemicalContext/provider.tsx",
      "line": 94,
      "column": 34,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const AlchemicalProvider: React.FC<{children: React.ReactNode}> = ({ children }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/contexts/ChartContext/provider.tsx",
      "line": 28,
      "column": 29,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const ChartProvider: React.FC<{children: React.ReactNode}> = ({ children }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/contexts/UserContext/index.tsx",
      "line": 40,
      "column": 28,
      "type": "react19Compatibility",
      "severity": "info",
      "description": "React 19 compatibility concerns",
      "matchedText": "React.FC<",
      "context": "export const UserProvider: React.FC<UserProviderProps> = ({ children }) => {",
      "suggestion": "Consider using explicit function signature instead of React.FC"
    },
    {
      "file": "src/pages/cuisines/[id].tsx",
      "line": 143,
      "column": 11,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">The cuisine you&apos;re looking for doesn&apos;t exist.<",
      "context": "<p>The cuisine you&apos;re looking for doesn&apos;t exist.</p>",
      "suggestion": "Replace '&' with '&amp;'"
    },
    {
      "file": "src/pages/recipes/[id].tsx",
      "line": 81,
      "column": 36,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">The recipe you&apos;re looking for doesn&apos;t exist or may have been removed.<",
      "context": "<p className=\"text-lg mb-8\">The recipe you&apos;re looking for doesn&apos;t exist or may have been removed.</p>",
      "suggestion": "Replace '&' with '&amp;'"
    },
    {
      "file": "src/pages/recipes/[id].tsx",
      "line": 192,
      "column": 26,
      "type": "unescapedEntities",
      "severity": "error",
      "description": "Unescaped HTML entities in JSX content",
      "matchedText": ">{typeof ingredient === 'string' ? ingredient : ingredient.name}<",
      "context": "<span>{typeof ingredient === 'string' ? ingredient : ingredient.name}</span>",
      "suggestion": "Replace '<' with '&lt;'"
    }
  ],
  "recommendations": [
    {
      "type": "high-priority",
      "file": "src/__tests__/utils/testComponentHelpers.tsx",
      "message": "File has 8 React issues - prioritize for fixing",
      "actions": [
        "Replace '<' with '&lt;'",
        "Replace '<' with '&lt;'",
        "Consider using explicit function signature instead of React.FC"
      ]
    },
    {
      "type": "high-priority",
      "file": "src/components/CuisineSection/index.tsx",
      "message": "File has 6 React issues - prioritize for fixing",
      "actions": ["Replace '<' with '&lt;'", "Replace '<' with '&lt;'", "Replace '<' with '&lt;'"]
    },
    {
      "type": "high-priority",
      "file": "src/components/DebugInfo.tsx",
      "message": "File has 8 React issues - prioritize for fixing",
      "actions": ["Replace '<' with '&lt;'", "Replace '<' with '&lt;'", "Replace '<' with '&lt;'"]
    },
    {
      "type": "high-priority",
      "file": "src/components/ElementalExplorer.tsx",
      "message": "File has 7 React issues - prioritize for fixing",
      "actions": ["Replace '<' with '&lt;'", "Replace '<' with '&lt;'", "Replace '<' with '&lt;'"]
    },
    {
      "type": "high-priority",
      "file": "src/components/Header/FoodRecommender/index.tsx",
      "message": "File has 7 React issues - prioritize for fixing",
      "actions": ["Replace '<' with '&lt;'", "Replace '<' with '&lt;'", "Replace '<' with '&lt;'"]
    },
    {
      "type": "high-priority",
      "file": "src/components/IngredientRecommendations.tsx",
      "message": "File has 8 React issues - prioritize for fixing",
      "actions": ["Replace '<' with '&lt;'", "Replace '<' with '&lt;'", "Replace '<' with '&lt;'"]
    },
    {
      "type": "high-priority",
      "file": "src/components/PlanetaryHours/PlanetaryHoursDisplay.tsx",
      "message": "File has 7 React issues - prioritize for fixing",
      "actions": ["Replace '<' with '&lt;'", "Replace '<' with '&lt;'", "Replace '<' with '&lt;'"]
    },
    {
      "type": "high-priority",
      "file": "src/components/__tests__/AdvancedSearchFilters.test.tsx",
      "message": "File has 10 React issues - prioritize for fixing",
      "actions": [
        "Use default parameter values instead of defaultProps",
        "Use default parameter values instead of defaultProps",
        "Use default parameter values instead of defaultProps"
      ]
    },
    {
      "type": "high-priority",
      "file": "src/components/campaign/CampaignWorkflowBuilder.tsx",
      "message": "File has 10 React issues - prioritize for fixing",
      "actions": [
        "Replace '<' with '&lt;'",
        "Replace '<' with '&lt;'",
        "Consider using explicit function signature instead of React.FC"
      ]
    },
    {
      "type": "high-priority",
      "file": "src/components/common/DisplayComponents.tsx",
      "message": "File has 6 React issues - prioritize for fixing",
      "actions": ["Replace '<' with '&lt;'", "Replace '<' with '&lt;'", "Replace '<' with '&lt;'"]
    },
    {
      "type": "high-priority",
      "file": "src/components/debug/StateDebugger.tsx",
      "message": "File has 11 React issues - prioritize for fixing",
      "actions": ["Replace '<' with '&lt;'", "Replace '<' with '&lt;'", "Replace '<' with '&lt;'"]
    },
    {
      "type": "high-priority",
      "file": "src/components/recipes/RecipeCard.tsx",
      "message": "File has 7 React issues - prioritize for fixing",
      "actions": ["Replace '<' with '&lt;'", "Replace '<' with '&lt;'", "Replace '<' with '&lt;'"]
    },
    {
      "type": "high-priority",
      "file": "src/components/recommendations/CuisineRecommender.tsx",
      "message": "File has 7 React issues - prioritize for fixing",
      "actions": ["Replace '<' with '&lt;'", "Replace '<' with '&lt;'", "Replace '<' with '&lt;'"]
    },
    {
      "type": "automated-fix",
      "category": "unescapedEntities",
      "message": "Unescaped entities can be automatically fixed with string replacement",
      "script": "scripts/fix-unescaped-entities.cjs"
    }
  ]
}
