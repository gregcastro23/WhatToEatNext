{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/__tests__/validation/MainPageValidation.test.tsx","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/__tests__/validation/MainPageValidation.test.tsx"],"sourcesContent":["/**\n * Comprehensive Main Page Validation Tests\n * Task 11.2: Validate all requirements and perform final testing\n */\n\nimport { jest } from '@jest/globals';\nimport { render, screen, fireEvent, act } from '@testing-library/react';\nimport React from 'react';\n\nimport App from '../../../App';\nimport MainPageLayout from '../../components/layout/MainPageLayout';\nimport { AlchemicalProvider } from '../../contexts/AlchemicalContext';\nimport {\n  mockRouter,\n  mockLogger,\n  mockCreateLogger,\n  mockReliableAstronomy,\n  mockAgentHooks,\n  mockMCPServerIntegration,\n  mockDevelopmentExperienceOptimizations,\n  mockStatePreservationHooks,\n  mockErrorHandler,\n  mockSteeringFileIntelligence,\n  mockAlchemicalContext\n} from '../mocks/externalDependencies';\nimport type { MainPageLayoutProps, AlchemicalProviderProps } from '../types/testUtils.d';\nimport { \n  MockAlchemicalProvider, \n  MockMainPageLayout, \n  renderWithProviders,\n  AsyncTestWrapper,\n  TestErrorBoundary\n} from '../utils/testComponentHelpers';\n\n// Import comprehensive mocks\n\n// Mock external dependencies with proper type safety\njest.mock('next/navigation', () => ({\n  useRouter: () => mockRouter\n}));\n\njest.mock('../../utils/logger', () => ({\n  logger: mockLogger,\n  createLogger: mockCreateLogger\n}));\n\njest.mock('../../utils/reliableAstronomy', () => mockReliableAstronomy);\n\n// Mock hooks that might cause issues\njest.mock('../../hooks/useAgentHooks', () => mockAgentHooks);\n\njest.mock('../../utils/mcpServerIntegration', () => mockMCPServerIntegration);\n\njest.mock('../../utils/developmentExperienceOptimizations', () => mockDevelopmentExperienceOptimizations);\n\n// Mock state preservation hooks\njest.mock('../../hooks/useStatePreservation', () => mockStatePreservationHooks);\n\n// Mock error handling\njest.mock('../../utils/errorHandling', () => mockErrorHandler);\n\n// Mock steering file intelligence\njest.mock('../../utils/steeringFileIntelligence', () => mockSteeringFileIntelligence);\n\n// Mock alchemical context hooks\njest.mock('../../contexts/AlchemicalContext/hooks', () => mockAlchemicalContext);\n\n// Mock component fallbacks\njest.mock('../../components/fallbacks/ComponentFallbacks', () => ({\n  ComponentFallbacks: {\n    LoadingFallback: () => <div data-testid=\"loading-fallback\">Loading...</div>,\n    ErrorFallback: () => <div data-testid=\"error-fallback\">Error occurred</div>\n  }\n}));\n\ndescribe('Main Page Validation - Task 11.2', () => {\n  beforeEach(() => {\n    // Clear all mocks before each test\n    jest.clearAllMocks();\n    \n    // Mock window.scrollTo\n    Object.defineProperty(window, 'scrollTo', {\n      value: jest.fn(),\n      writable: true\n    });\n    \n    // Mock localStorage\n    const localStorageMock = {\n      getItem: jest.fn(),\n      setItem: jest.fn(),\n      removeItem: jest.fn(),\n      clear: jest.fn()\n    };\n    Object.defineProperty(window, 'localStorage', {\n      value: localStorageMock\n    });\n  });\n\n  describe('1. Component Interactions and Data Flow', () => {\n    test('App renders without crashing', async () => {\n      await act(async () => {\n        render(<App />);\n      });\n      \n      // Should render without throwing errors\n      expect(screen.getByText(/Loading Astrological Data/i)).toBeInTheDocument();\n    });\n\n    test('MainPageLayout renders with AlchemicalProvider', async () => {\n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout debugMode={false} loading={false} />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // Should render the main layout\n      expect(screen.getByTestId('mock-alchemical-provider')).toBeInTheDocument();\n      expect(screen.getByTestId('mock-main-page-layout')).toBeInTheDocument();\n    });\n\n    test('Error boundary handles errors gracefully', async () => {\n      const ThrowError = () => {\n        throw new Error('Test error');\n      };\n\n      await act(async () => {\n        render(\n          <TestErrorBoundary>\n            <MockAlchemicalProvider>\n              <MockMainPageLayout debugMode={false} loading={false}>\n                <ThrowError />\n              </MockMainPageLayout>\n            </MockAlchemicalProvider>\n          </TestErrorBoundary>\n        );\n      });\n      \n      // Should handle error without crashing\n      expect(screen.getByTestId('test-error-boundary')).toBeInTheDocument();\n    });\n  });\n\n  describe('2. Navigation Functionality', () => {\n    test('Navigation state is preserved', async () => {\n      const mockOnSectionNavigate = jest.fn();\n      \n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout \n              debugMode={false} \n              loading={false} \n              onSectionNavigate={mockOnSectionNavigate}\n            />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // Navigation should be functional\n      expect(screen.getByTestId('mock-main-page-layout')).toBeInTheDocument();\n      expect(mockOnSectionNavigate).toBeDefined();\n    });\n\n    test('Scroll position is preserved', async () => {\n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout debugMode={false} loading={false} />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // Simulate scroll\n      fireEvent.scroll(window, { target: { scrollY: 100 } });\n      \n      // Should handle scroll events\n      expect(window.scrollTo).toBeDefined();\n    });\n  });\n\n  describe('3. Debug Panel Functionality', () => {\n    test('Debug panel renders in development mode', async () => {\n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout debugMode={true} loading={false} />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // Should render without errors in debug mode\n      expect(screen.getByTestId('debug-mode')).toHaveTextContent('debug');\n    });\n\n    test('Debug panel is hidden in production mode', async () => {\n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout debugMode={false} loading={false} />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // Should render without errors in production mode\n      expect(screen.getByTestId('debug-mode')).toHaveTextContent('production');\n    });\n  });\n\n  describe('4. Loading States', () => {\n    test('Loading state displays correctly', async () => {\n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout debugMode={false} loading={true} />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // Should handle loading state\n      expect(screen.getByTestId('loading-state')).toHaveTextContent('loading');\n    });\n\n    test('Connected state displays when not loading', async () => {\n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout debugMode={false} loading={false} />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // Should handle connected state\n      expect(screen.getByTestId('loading-state')).toHaveTextContent('loaded');\n    });\n  });\n\n  describe('5. Context and State Management', () => {\n    test('AlchemicalProvider provides context', async () => {\n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout debugMode={false} loading={false} />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // Context should be provided\n      expect(screen.getByTestId('mock-alchemical-provider')).toBeInTheDocument();\n    });\n\n    test('State preservation works correctly', async () => {\n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout debugMode={false} loading={false} />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // State preservation should work\n      expect(localStorage.setItem).toBeDefined();\n    });\n  });\n\n  describe('6. Error Handling', () => {\n    test('Global error boundary catches errors', async () => {\n      // Mock console.error to prevent test output noise\n      const consoleSpy = jest.spyOn(console, 'error').mockImplementation(() => {});\n      \n      // Test that the App component renders without crashing\n      // The App component has its own error boundary\n      await act(async () => {\n        render(<App />);\n      });\n      \n      // Should handle errors gracefully\n      expect(screen.getByText(/Loading Astrological Data/i)).toBeInTheDocument();\n      \n      consoleSpy.mockRestore();\n    });\n\n    test('Component-level error boundaries work', async () => {\n      const consoleSpy = jest.spyOn(console, 'error').mockImplementation(() => {});\n      \n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout debugMode={false} loading={false} />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // Should render without errors\n      expect(screen.getByTestId('mock-main-page-layout')).toBeInTheDocument();\n      \n      consoleSpy.mockRestore();\n    });\n  });\n\n  describe('7. Performance and Accessibility', () => {\n    test('Components are memoized for performance', async () => {\n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout debugMode={false} loading={false} />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // Should render efficiently\n      expect(screen.getByTestId('mock-main-page-layout')).toBeInTheDocument();\n    });\n\n    test('Lazy loading works for non-critical components', async () => {\n      await act(async () => {\n        render(\n          <AsyncTestWrapper>\n            <MockAlchemicalProvider>\n              <MockMainPageLayout debugMode={true} loading={false} />\n            </MockAlchemicalProvider>\n          </AsyncTestWrapper>\n        );\n      });\n      \n      // Should handle lazy loading\n      expect(screen.getByTestId('mock-main-page-layout')).toBeInTheDocument();\n    });\n  });\n\n  describe('8. Integration with External Systems', () => {\n    test('Astrological calculations integrate correctly', async () => {\n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout debugMode={false} loading={false} />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // Should integrate with astrological systems\n      expect(screen.getByTestId('mock-alchemical-provider')).toBeInTheDocument();\n      expect(mockReliableAstronomy.getReliablePlanetaryPositions).toBeDefined();\n    });\n\n    test('Agent hooks integrate correctly', async () => {\n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout debugMode={false} loading={false} />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // Should integrate with agent hooks\n      expect(screen.getByTestId('mock-main-page-layout')).toBeInTheDocument();\n      expect(mockAgentHooks.useAgentHooks).toBeDefined();\n    });\n  });\n\n  describe('9. Mobile Responsiveness', () => {\n    test('Layout adapts to mobile viewport', async () => {\n      // Mock mobile viewport\n      Object.defineProperty(window, 'innerWidth', {\n        writable: true,\n        configurable: true,\n        value: 375,\n      });\n      \n      Object.defineProperty(window, 'innerHeight', {\n        writable: true,\n        configurable: true,\n        value: 667,\n      });\n\n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout debugMode={false} loading={false} />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // Should handle mobile viewport\n      expect(screen.getByTestId('mock-main-page-layout')).toBeInTheDocument();\n    });\n\n    test('Touch interactions work correctly', async () => {\n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout debugMode={false} loading={false} />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // Should handle touch interactions\n      expect(screen.getByTestId('mock-main-page-layout')).toBeInTheDocument();\n    });\n  });\n\n  describe('10. System Integration Validation', () => {\n    test('All required systems are integrated', async () => {\n      await act(async () => {\n        render(<App />);\n      });\n      \n      // Should integrate all systems\n      expect(screen.getByText(/Loading Astrological Data/i)).toBeInTheDocument();\n    });\n\n    test('Fallback mechanisms work correctly', async () => {\n      // Mock API failure\n      mockReliableAstronomy.getReliablePlanetaryPositions\n        .mockRejectedValueOnce(new Error('API Error'));\n\n      await act(async () => {\n        render(\n          <MockAlchemicalProvider>\n            <MockMainPageLayout debugMode={false} loading={false} />\n          </MockAlchemicalProvider>\n        );\n      });\n      \n      // Should handle API failures gracefully\n      expect(screen.getByTestId('mock-main-page-layout')).toBeInTheDocument();\n    });\n  });\n});"],"version":3}