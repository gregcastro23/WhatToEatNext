9f348f249dbc0acd2b88ba6be3e9a1eb
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const AlchemicalContext_1 = require("./src/contexts/AlchemicalContext");
const ErrorBoundary_1 = __importDefault(require("./src/components/error-boundaries/ErrorBoundary"));
const MainPageLayout_1 = __importDefault(require("./src/components/layout/MainPageLayout"));
const logger_1 = require("./src/utils/logger");
// Loading fallback component for the main page
const MainPageLoadingFallback = () => ((0, jsx_runtime_1.jsx)("div", { className: "min-h-screen bg-gradient-to-b from-indigo-50 via-blue-50 to-gray-100 flex items-center justify-center", children: (0, jsx_runtime_1.jsxs)("div", { className: "text-center", children: [(0, jsx_runtime_1.jsx)("div", { className: "animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto mb-4" }), (0, jsx_runtime_1.jsx)("h2", { className: "text-xl font-semibold text-indigo-900 mb-2", children: "Loading Astrological Data" }), (0, jsx_runtime_1.jsx)("p", { className: "text-indigo-600", children: "Calculating current celestial energies..." })] }) }));
// Global error fallback for the entire app
const AppErrorFallback = ({ error, onRetry }) => ((0, jsx_runtime_1.jsx)("div", { className: "min-h-screen bg-red-50 flex items-center justify-center p-4", children: (0, jsx_runtime_1.jsxs)("div", { className: "bg-white rounded-lg shadow-lg p-8 max-w-md w-full text-center", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-red-500 mb-4", children: (0, jsx_runtime_1.jsx)("svg", { className: "h-12 w-12 mx-auto", fill: "none", viewBox: "0 0 24 24", stroke: "currentColor", children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 16.5c-.77.833.192 2.5 1.732 2.5z" }) }) }), (0, jsx_runtime_1.jsx)("h1", { className: "text-2xl font-bold text-gray-900 mb-4", children: "Application Error" }), (0, jsx_runtime_1.jsx)("p", { className: "text-gray-600 mb-6", children: "We encountered an unexpected error while loading the application. This has been logged and we're working to fix it." }), (0, jsx_runtime_1.jsxs)("div", { className: "space-y-3", children: [(0, jsx_runtime_1.jsx)("button", { onClick: onRetry, className: "w-full bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700 transition-colors", children: "Try Again" }), (0, jsx_runtime_1.jsx)("button", { onClick: () => window.location.reload(), className: "w-full bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700 transition-colors", children: "Reload Page" })] }), process.env.NODE_ENV === 'development' && ((0, jsx_runtime_1.jsxs)("details", { className: "mt-4 text-left", children: [(0, jsx_runtime_1.jsx)("summary", { className: "cursor-pointer text-red-600 font-medium", children: "Error Details (Development)" }), (0, jsx_runtime_1.jsxs)("pre", { className: "mt-2 text-xs bg-red-100 p-2 rounded overflow-auto", children: [error.message, '\n\n', error.stack] })] }))] }) }));
function App() {
    // Log app initialization
    react_1.default.useEffect(() => {
        logger_1.logger.info('App initialized with MainPageLayout integration');
    }, []);
    return ((0, jsx_runtime_1.jsx)(ErrorBoundary_1.default, { fallback: (error) => ((0, jsx_runtime_1.jsx)(AppErrorFallback, { error: error, onRetry: () => window.location.reload() })), onError: (error, errorInfo) => {
            logger_1.logger.error('Global app error:', {
                error: error.message,
                stack: error.stack,
                componentStack: errorInfo.componentStack
            });
        }, children: (0, jsx_runtime_1.jsx)(AlchemicalContext_1.AlchemicalProvider, { children: (0, jsx_runtime_1.jsx)(react_1.Suspense, { fallback: (0, jsx_runtime_1.jsx)(MainPageLoadingFallback, {}), children: (0, jsx_runtime_1.jsx)(MainPageLayout_1.default, { debugMode: process.env.NODE_ENV === 'development', loading: false, onSectionNavigate: (sectionId) => {
                        logger_1.logger.debug('Section navigation:', sectionId);
                    } }) }) }) }));
}
exports.default = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,