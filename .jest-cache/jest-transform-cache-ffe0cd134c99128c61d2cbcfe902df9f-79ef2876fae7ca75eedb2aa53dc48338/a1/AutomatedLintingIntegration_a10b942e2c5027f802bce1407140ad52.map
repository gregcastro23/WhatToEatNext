{"file":"/Users/GregCastro/Desktop/WhatToEatNext/backups/first-wave-2025-08-11T05-19-26-813Z/src/services/linting/AutomatedLintingIntegration.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/backups/first-wave-2025-08-11T05-19-26-813Z/src/services/linting/AutomatedLintingIntegration.ts"],"sourcesContent":["/**\n * AutomatedLintingIntegration - Integration service for automated linting with safety protocols\n *\n * This service orchestrates the complete automated linting workflow, integrating\n * error analysis, resolution strategy generation, and automated fixing with comprehensive\n * safety protocols and validation mechanisms.\n */\n\nimport { log } from '@/services/LoggingService';\n\nimport {\n  AutomatedLintingFixer,\n  AutomatedFixResult,\n  BatchProcessingOptions,\n  SafetyProtocols,\n} from './AutomatedLintingFixer';\nimport { LintingAnalysisService, ComprehensiveAnalysisResult } from './LintingAnalysisService';\nimport { LintingIssue, CategorizedErrors } from './LintingErrorAnalyzer';\nimport { ResolutionStrategy } from './ResolutionStrategyGenerator';\n\nexport interface AutomatedLintingWorkflowOptions {\n  analysisOptions?: {\n    includeFileAnalysis?: boolean;\n    generateStrategies?: boolean;\n    focusAreas?: ('import' | 'typescript' | 'react' | 'style' | 'domain')[];\n    riskTolerance?: 'conservative' | 'moderate' | 'aggressive';\n  };\n  batchProcessingOptions?: Partial<BatchProcessingOptions>;\n  safetyProtocols?: Partial<SafetyProtocols>;\n  automationLevel?: 'conservative' | 'moderate' | 'aggressive';\n  dryRun?: boolean;\n}\n\nexport interface AutomatedLintingWorkflowResult {\n  analysis: ComprehensiveAnalysisResult;\n  fixResults: {\n    automated: AutomatedFixResult;\n    unusedVariables?: AutomatedFixResult;\n    imports?: AutomatedFixResult;\n    typeAnnotations?: AutomatedFixResult;\n  };\n  summary: WorkflowSummary;\n  recommendations: WorkflowRecommendation[];\n  metrics: WorkflowMetrics;\n}\n\nexport interface WorkflowSummary {\n  totalIssuesAnalyzed: number;\n  totalIssuesFixed: number;\n  totalIssuesFailed: number;\n  automationSuccessRate: number;\n  timeToCompletion: number;\n  safetyEventsTriggered: number;\n  rollbacksPerformed: number;\n  overallSuccess: boolean;\n}\n\nexport interface WorkflowRecommendation {\n  type: 'immediate' | 'short-term' | 'long-term' | 'process-improvement';\n  priority: 'critical' | 'high' | 'medium' | 'low';\n  title: string;\n  description: string;\n  actionItems: string[];\n  estimatedImpact: 'high' | 'medium' | 'low';\n  automatable: boolean;\n}\n\nexport interface WorkflowMetrics {\n  analysisTime: number;\n  fixingTime: number;\n  validationTime: number;\n  totalWorkflowTime: number;\n  issuesPerMinute: number;\n  automationEfficiency: number;\n  safetyProtocolEffectiveness: number;\n  qualityImprovement: number;\n}\n\n/**\n * Main AutomatedLintingIntegration class\n */\nexport class AutomatedLintingIntegration {\n  private analysisService: LintingAnalysisService;\n  private automatedFixer: AutomatedLintingFixer;\n  private workspaceRoot: string;\n\n  constructor(workspaceRoot: string = process.cwd()) {\n    this.workspaceRoot = workspaceRoot;\n    this.analysisService = new LintingAnalysisService(workspaceRoot);\n    this.automatedFixer = new AutomatedLintingFixer(workspaceRoot);\n  }\n\n  /**\n   * Execute complete automated linting workflow\n   */\n  async executeAutomatedWorkflow(\n    options: AutomatedLintingWorkflowOptions = {},\n  ): Promise<AutomatedLintingWorkflowResult> {\n    const workflowStart = Date.now();\n    log.info('🚀 Starting automated linting workflow...');\n\n    try {\n      // Step 1: Comprehensive Analysis\n      log.info('📊 Phase 1: Comprehensive Linting Analysis');\n      const analysisStart = Date.now();\n\n      const analysis = await this.analysisService.performComprehensiveAnalysis({\n        includeFileAnalysis: true,\n        generateStrategies: true,\n        ...options.analysisOptions,\n      });\n\n      const analysisTime = Date.now() - analysisStart;\n      log.info(`✅ Analysis complete in ${analysisTime}ms`);\n\n      // Step 2: Configure Safety Protocols\n      log.info('🛡️ Phase 2: Configuring Safety Protocols');\n      const safetyProtocols = this.configureSafetyProtocols(analysis, options);\n\n      // Reinitialize fixer with configured safety protocols\n      this.automatedFixer = new AutomatedLintingFixer(this.workspaceRoot, safetyProtocols);\n\n      // Step 3: Automated Fixing\n      log.info('🔧 Phase 3: Automated Error Resolution');\n      const fixingStart = Date.now();\n\n      const fixResults = await this.executeAutomatedFixes(analysis, options);\n\n      const fixingTime = Date.now() - fixingStart;\n      log.info(`✅ Automated fixes complete in ${fixingTime}ms`);\n\n      // Step 4: Generate Summary and Recommendations\n      log.info('📋 Phase 4: Generating Summary and Recommendations');\n      const summary = this.generateWorkflowSummary(analysis, fixResults, workflowStart);\n      const recommendations = this.generateWorkflowRecommendations(analysis, fixResults, summary);\n\n      // Step 5: Calculate Metrics\n      const metrics = this.calculateWorkflowMetrics(\n        analysisTime,\n        fixingTime,\n        workflowStart,\n        analysis,\n        fixResults,\n      );\n\n      const result: AutomatedLintingWorkflowResult = {\n        analysis,\n        fixResults,\n        summary,\n        recommendations,\n        metrics,\n      };\n\n      log.info('🎉 Automated linting workflow complete!');\n      this.logWorkflowResults(result);\n\n      return result;\n    } catch (error) {\n      console.error('❌ Automated linting workflow failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Execute quick automated fixes for immediate wins\n   */\n  async executeQuickFixes(\n    options: Partial<AutomatedLintingWorkflowOptions> = {},\n  ): Promise<AutomatedFixResult> {\n    log.info('⚡ Executing quick automated fixes...');\n\n    try {\n      // Quick analysis to identify auto-fixable issues\n      const quickAnalysis = await this.analysisService.performQuickAnalysis();\n\n      // Configure conservative safety protocols for quick fixes\n      const safetyProtocols: SafetyProtocols = {\n        enableRollback: true,\n        validateBeforeFix: true,\n        validateAfterFix: true,\n        maxFailuresBeforeStop: 3,\n        requireManualApproval: false,\n        preservePatterns: [\n          '**/calculations/**',\n          '**/data/planets/**',\n          '**/*astrological*',\n          '**/*campaign*',\n        ],\n      };\n\n      const quickFixer = new AutomatedLintingFixer(this.workspaceRoot, safetyProtocols);\n\n      // Focus only on quick wins (auto-fixable, low risk)\n      const quickWinIssues = quickAnalysis.quickWins;\n      const categorizedQuickWins: CategorizedErrors = {\n        total: quickWinIssues.length,\n        errors: quickWinIssues.filter(i => i.severity === 'error').length,\n        warnings: quickWinIssues.filter(i => i.severity === 'warning').length,\n        byCategory: this.groupIssuesByCategory(quickWinIssues),\n        byPriority: this.groupIssuesByPriority(quickWinIssues),\n        byFile: this.groupIssuesByFile(quickWinIssues),\n        autoFixable: quickWinIssues,\n        requiresManualReview: [],\n      };\n\n      const batchOptions: BatchProcessingOptions = {\n        batchSize: 5,\n        maxConcurrentBatches: 1,\n        validateAfterEachBatch: true,\n        continueOnError: false,\n        createBackups: true,\n        dryRun: options.dryRun || false,\n      };\n\n      const result = await quickFixer.applyAutomatedFixes(categorizedQuickWins, batchOptions);\n\n      log.info(`⚡ Quick fixes complete: ${result.fixedIssues} issues fixed`);\n      return result;\n    } catch (error) {\n      console.error('❌ Quick fixes failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Execute specialized unused variable cleanup\n   */\n  async executeUnusedVariableCleanup(\n    options: {\n      prefixWithUnderscore?: boolean;\n      removeCompletely?: boolean;\n      skipDomainFiles?: boolean;\n      skipTestFiles?: boolean;\n      dryRun?: boolean;\n    } = {},\n  ): Promise<AutomatedFixResult> {\n    log.info('🧹 Executing unused variable cleanup...');\n\n    try {\n      // Analyze for unused variable issues\n      const analysis = await this.analysisService.performComprehensiveAnalysis({\n        focusAreas: ['typescript'],\n        generateStrategies: false,\n      });\n\n      const unusedVarIssues = Object.values(analysis.categorizedErrors.byCategory)\n        .flat()\n        .filter(\n          issue => issue.rule.includes('no-unused-vars') || issue.rule.includes('unused-vars'),\n        );\n\n      if (unusedVarIssues.length === 0) {\n        log.info('✅ No unused variable issues found');\n        return {\n          success: true,\n          fixedIssues: 0,\n          failedIssues: 0,\n          processedFiles: [],\n          errors: [],\n          validationResults: [],\n          metrics: {\n            startTime: new Date(),\n            endTime: new Date(),\n            totalTime: 0,\n            filesProcessed: 0,\n            issuesAttempted: 0,\n            issuesFixed: 0,\n            issuesFailed: 0,\n            validationTime: 0,\n            rollbacksPerformed: 0,\n          },\n        };\n      }\n\n      const safetyProtocols: SafetyProtocols = {\n        enableRollback: true,\n        validateBeforeFix: true,\n        validateAfterFix: true,\n        maxFailuresBeforeStop: 5,\n        requireManualApproval: false,\n        preservePatterns: ['**/calculations/**', '**/data/planets/**', '**/*astrological*'],\n      };\n\n      const fixer = new AutomatedLintingFixer(this.workspaceRoot, safetyProtocols);\n\n      const result = await fixer.handleUnusedVariables(unusedVarIssues, {\n        prefixWithUnderscore: options.prefixWithUnderscore ?? true,\n        removeCompletely: options.removeCompletely ?? false,\n        skipDomainFiles: options.skipDomainFiles ?? true,\n        skipTestFiles: options.skipTestFiles ?? false,\n        preservePatterns: ['**/calculations/**', '**/data/planets/**', '**/*astrological*'],\n      });\n\n      log.info(`🧹 Unused variable cleanup complete: ${result.fixedIssues} variables handled`);\n      return result;\n    } catch (error) {\n      console.error('❌ Unused variable cleanup failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Execute import optimization workflow\n   */\n  async executeImportOptimization(\n    options: {\n      removeDuplicates?: boolean;\n      organizeImports?: boolean;\n      removeUnused?: boolean;\n      sortImports?: boolean;\n      dryRun?: boolean;\n    } = {},\n  ): Promise<AutomatedFixResult> {\n    log.info('📦 Executing import optimization...');\n\n    try {\n      // Analyze for import-related issues\n      const analysis = await this.analysisService.performComprehensiveAnalysis({\n        focusAreas: ['import'],\n        generateStrategies: false,\n      });\n\n      const importIssues = analysis.categorizedErrors.byCategory['import'] || [];\n\n      if (importIssues.length === 0) {\n        log.info('✅ No import issues found');\n        return this.createEmptyFixResult();\n      }\n\n      const safetyProtocols: SafetyProtocols = {\n        enableRollback: true,\n        validateBeforeFix: true,\n        validateAfterFix: true,\n        maxFailuresBeforeStop: 5,\n        requireManualApproval: false,\n        preservePatterns: ['**/calculations/**', '**/data/planets/**'],\n      };\n\n      const fixer = new AutomatedLintingFixer(this.workspaceRoot, safetyProtocols);\n\n      const result = await fixer.optimizeImports(importIssues, {\n        removeDuplicates: options.removeDuplicates ?? true,\n        organizeImports: options.organizeImports ?? true,\n        removeUnused: options.removeUnused ?? true,\n        preserveComments: true,\n        sortImports: options.sortImports ?? true,\n      });\n\n      log.info(`📦 Import optimization complete: ${result.fixedIssues} imports optimized`);\n      return result;\n    } catch (error) {\n      console.error('❌ Import optimization failed:', error);\n      throw error;\n    }\n  }\n\n  // Private helper methods\n\n  private configureSafetyProtocols(\n    analysis: ComprehensiveAnalysisResult,\n    options: AutomatedLintingWorkflowOptions,\n  ): SafetyProtocols {\n    const automationLevel = options.automationLevel || 'moderate';\n    const riskTolerance = options.analysisOptions?.riskTolerance || 'moderate';\n\n    let maxFailures = 5;\n    let requireManualApproval = false;\n\n    // Adjust based on automation level\n    switch (automationLevel) {\n      case 'conservative':\n        maxFailures = 2;\n        requireManualApproval = analysis.summary.criticalIssuesCount > 0;\n        break;\n      case 'aggressive':\n        maxFailures = 10;\n        requireManualApproval = false;\n        break;\n      default: // moderate\n        maxFailures = 5;\n        requireManualApproval = analysis.summary.criticalIssuesCount > 5;\n    }\n\n    // Adjust based on risk assessment\n    if (analysis.summary.overallRiskLevel === 'critical') {\n      maxFailures = Math.min(maxFailures, 2);\n      requireManualApproval = true;\n    } else if (analysis.summary.overallRiskLevel === 'high') {\n      maxFailures = Math.min(maxFailures, 3);\n    }\n\n    return {\n      enableRollback: true,\n      validateBeforeFix: true,\n      validateAfterFix: true,\n      maxFailuresBeforeStop: maxFailures,\n      requireManualApproval,\n      preservePatterns: [\n        '**/calculations/**',\n        '**/data/planets/**',\n        '**/*astrological*',\n        '**/*campaign*',\n        '**/test*/**',\n      ],\n      ...options.safetyProtocols,\n    };\n  }\n\n  private async executeAutomatedFixes(\n    analysis: ComprehensiveAnalysisResult,\n    options: AutomatedLintingWorkflowOptions,\n  ): Promise<AutomatedLintingWorkflowResult['fixResults']> {\n    const batchOptions: BatchProcessingOptions = {\n      batchSize: 10,\n      maxConcurrentBatches: 1,\n      validateAfterEachBatch: true,\n      continueOnError: false,\n      createBackups: true,\n      dryRun: options.dryRun || false,\n      ...options.batchProcessingOptions,\n    };\n\n    // Main automated fixes\n    const automated = await this.automatedFixer.applyAutomatedFixes(\n      analysis.categorizedErrors,\n      batchOptions,\n    );\n\n    const fixResults: AutomatedLintingWorkflowResult['fixResults'] = {\n      automated,\n    };\n\n    // Specialized fixes if main automation was successful\n    if (automated.success && !options.dryRun) {\n      // Unused variables cleanup\n      const unusedVarIssues = Object.values(analysis.categorizedErrors.byCategory)\n        .flat()\n        .filter(issue => issue.rule.includes('no-unused-vars'));\n\n      if (unusedVarIssues.length > 0) {\n        log.info('🧹 Running specialized unused variable cleanup...');\n        fixResults.unusedVariables = await this.automatedFixer.handleUnusedVariables(\n          unusedVarIssues,\n          {\n            prefixWithUnderscore: true,\n            skipDomainFiles: true,\n            skipTestFiles: false,\n          },\n        );\n      }\n\n      // Import optimization\n      const importIssues = analysis.categorizedErrors.byCategory['import'] || [];\n      if (importIssues.length > 0) {\n        log.info('📦 Running specialized import optimization...');\n        fixResults.imports = await this.automatedFixer.optimizeImports(importIssues, {\n          removeDuplicates: true,\n          organizeImports: true,\n          sortImports: true,\n        });\n      }\n\n      // Type annotation improvements (conservative approach)\n      const typeIssues = Object.values(analysis.categorizedErrors.byCategory)\n        .flat()\n        .filter(issue => issue.rule.includes('no-explicit-any'));\n\n      if (typeIssues.length > 0 && options.automationLevel !== 'conservative') {\n        log.info('🏷️ Running type annotation improvements...');\n        fixResults.typeAnnotations = await this.automatedFixer.improveTypeAnnotations(typeIssues, {\n          maxComplexity: 'simple',\n          preserveExplicitAny: ['**/calculations/**', '**/data/planets/**'],\n        });\n      }\n    }\n\n    return fixResults;\n  }\n\n  private generateWorkflowSummary(\n    analysis: ComprehensiveAnalysisResult,\n    fixResults: AutomatedLintingWorkflowResult['fixResults'],\n    workflowStart: number,\n  ): WorkflowSummary {\n    const totalFixed =\n      fixResults.automated.fixedIssues +\n      (fixResults.unusedVariables?.fixedIssues || 0) +\n      (fixResults.imports?.fixedIssues || 0) +\n      (fixResults.typeAnnotations?.fixedIssues || 0);\n\n    const totalFailed =\n      fixResults.automated.failedIssues +\n      (fixResults.unusedVariables?.failedIssues || 0) +\n      (fixResults.imports?.failedIssues || 0) +\n      (fixResults.typeAnnotations?.failedIssues || 0);\n\n    const totalAttempted = totalFixed + totalFailed;\n    const automationSuccessRate = totalAttempted > 0 ? totalFixed / totalAttempted : 0;\n\n    const safetyEventsTriggered =\n      fixResults.automated.errors.length +\n      (fixResults.unusedVariables?.errors.length || 0) +\n      (fixResults.imports?.errors.length || 0) +\n      (fixResults.typeAnnotations?.errors.length || 0);\n\n    const rollbacksPerformed =\n      fixResults.automated.metrics.rollbacksPerformed +\n      (fixResults.unusedVariables?.metrics.rollbacksPerformed || 0) +\n      (fixResults.imports?.metrics.rollbacksPerformed || 0) +\n      (fixResults.typeAnnotations?.metrics.rollbacksPerformed || 0);\n\n    return {\n      totalIssuesAnalyzed: analysis.summary.totalIssues,\n      totalIssuesFixed: totalFixed,\n      totalIssuesFailed: totalFailed,\n      automationSuccessRate,\n      timeToCompletion: Date.now() - workflowStart,\n      safetyEventsTriggered,\n      rollbacksPerformed,\n      overallSuccess: fixResults.automated.success && automationSuccessRate > 0.7,\n    };\n  }\n\n  private generateWorkflowRecommendations(\n    analysis: ComprehensiveAnalysisResult,\n    fixResults: AutomatedLintingWorkflowResult['fixResults'],\n    summary: WorkflowSummary,\n  ): WorkflowRecommendation[] {\n    const recommendations: WorkflowRecommendation[] = [];\n\n    // Immediate actions based on results\n    if (summary.rollbacksPerformed > 0) {\n      recommendations.push({\n        type: 'immediate',\n        priority: 'high',\n        title: 'Review Rollback Events',\n        description: `${summary.rollbacksPerformed} rollbacks occurred during automation`,\n        actionItems: [\n          'Review rollback logs for patterns',\n          'Identify problematic rules or files',\n          'Adjust safety protocols if needed',\n        ],\n        estimatedImpact: 'high',\n        automatable: false,\n      });\n    }\n\n    if (summary.automationSuccessRate < 0.5) {\n      recommendations.push({\n        type: 'immediate',\n        priority: 'critical',\n        title: 'Low Automation Success Rate',\n        description: `Only ${Math.round(summary.automationSuccessRate * 100)}% of fixes succeeded`,\n        actionItems: [\n          'Review failed fixes for common patterns',\n          'Adjust automation confidence thresholds',\n          'Consider manual review for complex issues',\n        ],\n        estimatedImpact: 'high',\n        automatable: false,\n      });\n    }\n\n    // Short-term improvements\n    if (analysis.summary.domainSpecificCount > 0) {\n      recommendations.push({\n        type: 'short-term',\n        priority: 'medium',\n        title: 'Domain-Specific Rule Configuration',\n        description: `${analysis.summary.domainSpecificCount} domain-specific issues need attention`,\n        actionItems: [\n          'Create domain-specific ESLint rule configurations',\n          'Document domain-specific patterns and exceptions',\n          'Train team on domain-specific linting practices',\n        ],\n        estimatedImpact: 'medium',\n        automatable: true,\n      });\n    }\n\n    // Long-term process improvements\n    if (summary.totalIssuesAnalyzed > 100) {\n      recommendations.push({\n        type: 'long-term',\n        priority: 'medium',\n        title: 'Implement Continuous Linting',\n        description: 'Large number of issues suggests need for continuous quality monitoring',\n        actionItems: [\n          'Set up pre-commit hooks for linting',\n          'Implement CI/CD linting gates',\n          'Schedule regular automated linting campaigns',\n          'Create quality metrics dashboard',\n        ],\n        estimatedImpact: 'high',\n        automatable: true,\n      });\n    }\n\n    // Process improvement recommendations\n    if (summary.automationSuccessRate > 0.8) {\n      recommendations.push({\n        type: 'process-improvement',\n        priority: 'low',\n        title: 'Increase Automation Aggressiveness',\n        description: 'High success rate suggests automation can be more aggressive',\n        actionItems: [\n          'Increase batch sizes for faster processing',\n          'Reduce validation frequency for low-risk changes',\n          'Enable more auto-fix rules',\n          'Consider automated deployment of fixes',\n        ],\n        estimatedImpact: 'medium',\n        automatable: true,\n      });\n    }\n\n    return recommendations;\n  }\n\n  private calculateWorkflowMetrics(\n    analysisTime: number,\n    fixingTime: number,\n    workflowStart: number,\n    analysis: ComprehensiveAnalysisResult,\n    fixResults: AutomatedLintingWorkflowResult['fixResults'],\n  ): WorkflowMetrics {\n    const totalWorkflowTime = Date.now() - workflowStart;\n    const validationTime = fixResults.automated.metrics.validationTime;\n\n    const totalFixed =\n      fixResults.automated.fixedIssues +\n      (fixResults.unusedVariables?.fixedIssues || 0) +\n      (fixResults.imports?.fixedIssues || 0) +\n      (fixResults.typeAnnotations?.fixedIssues || 0);\n\n    const issuesPerMinute = totalFixed / (totalWorkflowTime / 60000);\n    const automationEfficiency = totalFixed / analysis.summary.totalIssues;\n\n    const safetyEvents = fixResults.automated.errors.length;\n    const safetyProtocolEffectiveness =\n      safetyEvents > 0 ? fixResults.automated.metrics.rollbacksPerformed / safetyEvents : 1;\n\n    const qualityImprovement = (totalFixed / analysis.summary.totalIssues) * 100;\n\n    return {\n      analysisTime,\n      fixingTime,\n      validationTime,\n      totalWorkflowTime,\n      issuesPerMinute,\n      automationEfficiency,\n      safetyProtocolEffectiveness,\n      qualityImprovement,\n    };\n  }\n\n  private logWorkflowResults(result: AutomatedLintingWorkflowResult): void {\n    log.info('\\n🎯 AUTOMATED LINTING WORKFLOW RESULTS');\n    log.info('=====================================');\n    log.info(`📊 Issues Analyzed: ${result.summary.totalIssuesAnalyzed}`);\n    log.info(`✅ Issues Fixed: ${result.summary.totalIssuesFixed}`);\n    log.info(`❌ Issues Failed: ${result.summary.totalIssuesFailed}`);\n    log.info(`📈 Success Rate: ${Math.round(result.summary.automationSuccessRate * 100)}%`);\n    log.info(`⏱️ Total Time: ${Math.round(result.summary.timeToCompletion / 1000)}s`);\n    log.info(`🛡️ Safety Events: ${result.summary.safetyEventsTriggered}`);\n    log.info(`🔄 Rollbacks: ${result.summary.rollbacksPerformed}`);\n    log.info(`🎚️ Overall Success: ${result.summary.overallSuccess ? 'YES' : 'NO'}`);\n\n    log.info('\\n📋 TOP RECOMMENDATIONS:');\n    result.recommendations\n      .filter(r => r.priority === 'critical' || r.priority === 'high')\n      .slice(0, 3)\n      .forEach((rec, index) => {\n        log.info(`${index + 1}. ${rec.title} (${rec.priority.toUpperCase()})`);\n        log.info(`   ${rec.description}`);\n      });\n\n    log.info('\\n📈 WORKFLOW METRICS:');\n    log.info(`⚡ Issues/Minute: ${Math.round(result.metrics.issuesPerMinute * 100) / 100}`);\n    log.info(`🎯 Automation Efficiency: ${Math.round(result.metrics.automationEfficiency * 100)}%`);\n    log.info(\n      `🛡️ Safety Effectiveness: ${Math.round(result.metrics.safetyProtocolEffectiveness * 100)}%`,\n    );\n    log.info(`📊 Quality Improvement: ${Math.round(result.metrics.qualityImprovement)}%`);\n    log.info('=====================================\\n');\n  }\n\n  private groupIssuesByCategory(issues: LintingIssue[]): Record<string, LintingIssue[]> {\n    const grouped: Record<string, LintingIssue[]> = {};\n    for (const issue of issues) {\n      const category = issue.category.primary;\n      if (!grouped[category]) grouped[category] = [];\n      grouped[category].push(issue);\n    }\n    return grouped;\n  }\n\n  private groupIssuesByPriority(issues: LintingIssue[]): Record<number, LintingIssue[]> {\n    const grouped: Record<number, LintingIssue[]> = {};\n    for (const issue of issues) {\n      const priority = issue.category.priority;\n      if (!grouped[priority]) grouped[priority] = [];\n      grouped[priority].push(issue);\n    }\n    return grouped;\n  }\n\n  private groupIssuesByFile(issues: LintingIssue[]): Record<string, LintingIssue[]> {\n    const grouped: Record<string, LintingIssue[]> = {};\n    for (const issue of issues) {\n      if (!grouped[issue.file]) grouped[issue.file] = [];\n      grouped[issue.file].push(issue);\n    }\n    return grouped;\n  }\n\n  private createEmptyFixResult(): AutomatedFixResult {\n    return {\n      success: true,\n      fixedIssues: 0,\n      failedIssues: 0,\n      processedFiles: [],\n      errors: [],\n      validationResults: [],\n      metrics: {\n        startTime: new Date(),\n        endTime: new Date(),\n        totalTime: 0,\n        filesProcessed: 0,\n        issuesAttempted: 0,\n        issuesFixed: 0,\n        issuesFailed: 0,\n        validationTime: 0,\n        rollbacksPerformed: 0,\n      },\n    };\n  }\n}\n"],"version":3}