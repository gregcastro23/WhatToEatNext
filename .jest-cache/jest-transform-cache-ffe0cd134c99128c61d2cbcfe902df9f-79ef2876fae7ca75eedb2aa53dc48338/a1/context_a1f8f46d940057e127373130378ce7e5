261b7215275a17a0b56f59693824948b
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.AlchemicalContext = exports.defaultState = void 0;
const react_1 = require("react");
// Define default state
exports.defaultState = {
    currentSeason: 'spring',
    timeOfDay: 'morning',
    astrologicalState: {
        currentZodiac: 'aries',
        sunSign: 'aries',
        lunarPhase: 'new moon',
        moonPhase: 'new moon',
        activePlanets: ['sun', 'moon']
    },
    currentEnergy: {
        zodiacEnergy: '',
        lunarEnergy: '',
        planetaryEnergy: ''
    },
    elementalPreference: {
        Fire: 0.32,
        Water: 0.28,
        Earth: 0.18,
        Air: 0.22
    },
    elementalState: {
        Fire: 0.32,
        Water: 0.28,
        Earth: 0.18,
        Air: 0.22
    },
    celestialPositions: {
        sun: {
            sign: 'aries',
            degree: 0
        },
        moon: {
            sign: 'taurus',
            degree: 0
        }
    },
    error: false,
    errorMessage: '',
    errors: [],
    zodiacEnergy: '',
    lunarEnergy: '',
    planetaryEnergy: [],
    alchemicalValues: {
        Spirit: 0.29,
        Essence: 0.28,
        Matter: 0.21,
        Substance: 0.22
    },
    lunarPhase: 'new moon',
    currentTime: new Date(),
    lastUpdated: new Date(),
    planetaryPositions: {},
    normalizedPositions: {},
    dominantElement: 'Fire',
    planetaryHour: 'Sun',
    svgRepresentation: null
};
// Create the context with default values
exports.AlchemicalContext = (0, react_1.createContext)({
    state: exports.defaultState,
    dispatch: () => { },
    planetaryPositions: {},
    isDaytime: true,
    updatePlanetaryPositions: () => { },
    refreshPlanetaryPositions: async () => ({}),
    setDaytime: () => { },
    updateState: () => { }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL0dyZWdDYXN0cm8vRGVza3RvcC9XaGF0VG9FYXROZXh0L3NyYy9jb250ZXh0cy9BbGNoZW1pY2FsQ29udGV4dC9jb250ZXh0LnRzeCIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxDQUFDOzs7QUFFYixpQ0FBc0M7QUFHdEMsdUJBQXVCO0FBQ1YsUUFBQSxZQUFZLEdBQW9CO0lBQzNDLGFBQWEsRUFBRSxRQUFRO0lBQ3ZCLFNBQVMsRUFBRSxTQUFTO0lBQ3BCLGlCQUFpQixFQUFFO1FBQ2pCLGFBQWEsRUFBRSxPQUFPO1FBQ3RCLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLFVBQVUsRUFBRSxVQUFVO1FBQ3RCLFNBQVMsRUFBRSxVQUFVO1FBQ3JCLGFBQWEsRUFBRSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUM7S0FDL0I7SUFDRCxhQUFhLEVBQUU7UUFDYixZQUFZLEVBQUUsRUFBRTtRQUNoQixXQUFXLEVBQUUsRUFBRTtRQUNmLGVBQWUsRUFBRSxFQUFFO0tBQ3BCO0lBQ0QsbUJBQW1CLEVBQUU7UUFDbkIsSUFBSSxFQUFFLElBQUk7UUFDVixLQUFLLEVBQUUsSUFBSTtRQUNYLEtBQUssRUFBRSxJQUFJO1FBQ1gsR0FBRyxFQUFFLElBQUk7S0FDVjtJQUNELGNBQWMsRUFBRTtRQUNkLElBQUksRUFBRSxJQUFJO1FBQ1YsS0FBSyxFQUFFLElBQUk7UUFDWCxLQUFLLEVBQUUsSUFBSTtRQUNYLEdBQUcsRUFBRSxJQUFJO0tBQ1Y7SUFDRCxrQkFBa0IsRUFBRTtRQUNsQixHQUFHLEVBQUU7WUFDSCxJQUFJLEVBQUUsT0FBTztZQUNiLE1BQU0sRUFBRSxDQUFDO1NBQ1Y7UUFDRCxJQUFJLEVBQUU7WUFDSixJQUFJLEVBQUUsUUFBUTtZQUNkLE1BQU0sRUFBRSxDQUFDO1NBQ1Y7S0FDRjtJQUNELEtBQUssRUFBRSxLQUFLO0lBQ1osWUFBWSxFQUFFLEVBQUU7SUFDaEIsTUFBTSxFQUFFLEVBQUU7SUFDVixZQUFZLEVBQUUsRUFBRTtJQUNoQixXQUFXLEVBQUUsRUFBRTtJQUNmLGVBQWUsRUFBRSxFQUFFO0lBQ25CLGdCQUFnQixFQUFFO1FBQ2hCLE1BQU0sRUFBRSxJQUFJO1FBQ1osT0FBTyxFQUFFLElBQUk7UUFDYixNQUFNLEVBQUUsSUFBSTtRQUNaLFNBQVMsRUFBRSxJQUFJO0tBQ2hCO0lBQ0QsVUFBVSxFQUFFLFVBQVU7SUFDdEIsV0FBVyxFQUFFLElBQUksSUFBSSxFQUFFO0lBQ3ZCLFdBQVcsRUFBRSxJQUFJLElBQUksRUFBRTtJQUN2QixrQkFBa0IsRUFBRSxFQUFFO0lBQ3RCLG1CQUFtQixFQUFFLEVBQUU7SUFDdkIsZUFBZSxFQUFFLE1BQU07SUFDdkIsYUFBYSxFQUFFLEtBQUs7SUFDcEIsaUJBQWlCLEVBQUUsSUFBSTtDQUN4QixDQUFDO0FBRUYseUNBQXlDO0FBQzVCLFFBQUEsaUJBQWlCLEdBQUcsSUFBQSxxQkFBYSxFQUF3QjtJQUNwRSxLQUFLLEVBQUUsb0JBQVk7SUFDbkIsUUFBUSxFQUFFLEdBQUcsRUFBRSxHQUFFLENBQUM7SUFDbEIsa0JBQWtCLEVBQUUsRUFBRTtJQUN0QixTQUFTLEVBQUUsSUFBSTtJQUNmLHdCQUF3QixFQUFFLEdBQUcsRUFBRSxHQUFFLENBQUM7SUFDbEMseUJBQXlCLEVBQUUsS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUMzQyxVQUFVLEVBQUUsR0FBRyxFQUFFLEdBQUUsQ0FBQztJQUNwQixXQUFXLEVBQUUsR0FBRyxFQUFFLEdBQUUsQ0FBQztDQUN0QixDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL0dyZWdDYXN0cm8vRGVza3RvcC9XaGF0VG9FYXROZXh0L3NyYy9jb250ZXh0cy9BbGNoZW1pY2FsQ29udGV4dC9jb250ZXh0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBBbGNoZW1pY2FsU3RhdGUsIEFsY2hlbWljYWxDb250ZXh0VHlwZSwgUGxhbmV0YXJ5UG9zaXRpb25zVHlwZSB9IGZyb20gJy4vdHlwZXMnO1xuXG4vLyBEZWZpbmUgZGVmYXVsdCBzdGF0ZVxuZXhwb3J0IGNvbnN0IGRlZmF1bHRTdGF0ZTogQWxjaGVtaWNhbFN0YXRlID0ge1xuICBjdXJyZW50U2Vhc29uOiAnc3ByaW5nJyxcbiAgdGltZU9mRGF5OiAnbW9ybmluZycsXG4gIGFzdHJvbG9naWNhbFN0YXRlOiB7XG4gICAgY3VycmVudFpvZGlhYzogJ2FyaWVzJyxcbiAgICBzdW5TaWduOiAnYXJpZXMnLFxuICAgIGx1bmFyUGhhc2U6ICduZXcgbW9vbicsXG4gICAgbW9vblBoYXNlOiAnbmV3IG1vb24nLFxuICAgIGFjdGl2ZVBsYW5ldHM6IFsnc3VuJywgJ21vb24nXVxuICB9LFxuICBjdXJyZW50RW5lcmd5OiB7XG4gICAgem9kaWFjRW5lcmd5OiAnJyxcbiAgICBsdW5hckVuZXJneTogJycsXG4gICAgcGxhbmV0YXJ5RW5lcmd5OiAnJ1xuICB9LFxuICBlbGVtZW50YWxQcmVmZXJlbmNlOiB7XG4gICAgRmlyZTogMC4zMixcbiAgICBXYXRlcjogMC4yOCwgXG4gICAgRWFydGg6IDAuMTgsXG4gICAgQWlyOiAwLjIyXG4gIH0sXG4gIGVsZW1lbnRhbFN0YXRlOiB7XG4gICAgRmlyZTogMC4zMixcbiAgICBXYXRlcjogMC4yOCwgXG4gICAgRWFydGg6IDAuMTgsXG4gICAgQWlyOiAwLjIyXG4gIH0sXG4gIGNlbGVzdGlhbFBvc2l0aW9uczoge1xuICAgIHN1bjoge1xuICAgICAgc2lnbjogJ2FyaWVzJyxcbiAgICAgIGRlZ3JlZTogMFxuICAgIH0sXG4gICAgbW9vbjoge1xuICAgICAgc2lnbjogJ3RhdXJ1cycsXG4gICAgICBkZWdyZWU6IDBcbiAgICB9XG4gIH0sXG4gIGVycm9yOiBmYWxzZSxcbiAgZXJyb3JNZXNzYWdlOiAnJyxcbiAgZXJyb3JzOiBbXSxcbiAgem9kaWFjRW5lcmd5OiAnJyxcbiAgbHVuYXJFbmVyZ3k6ICcnLFxuICBwbGFuZXRhcnlFbmVyZ3k6IFtdLFxuICBhbGNoZW1pY2FsVmFsdWVzOiB7XG4gICAgU3Bpcml0OiAwLjI5LFxuICAgIEVzc2VuY2U6IDAuMjgsXG4gICAgTWF0dGVyOiAwLjIxLFxuICAgIFN1YnN0YW5jZTogMC4yMlxuICB9LFxuICBsdW5hclBoYXNlOiAnbmV3IG1vb24nLFxuICBjdXJyZW50VGltZTogbmV3IERhdGUoKSxcbiAgbGFzdFVwZGF0ZWQ6IG5ldyBEYXRlKCksXG4gIHBsYW5ldGFyeVBvc2l0aW9uczoge30sXG4gIG5vcm1hbGl6ZWRQb3NpdGlvbnM6IHt9LFxuICBkb21pbmFudEVsZW1lbnQ6ICdGaXJlJyxcbiAgcGxhbmV0YXJ5SG91cjogJ1N1bicsXG4gIHN2Z1JlcHJlc2VudGF0aW9uOiBudWxsXG59O1xuXG4vLyBDcmVhdGUgdGhlIGNvbnRleHQgd2l0aCBkZWZhdWx0IHZhbHVlc1xuZXhwb3J0IGNvbnN0IEFsY2hlbWljYWxDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxBbGNoZW1pY2FsQ29udGV4dFR5cGU+KHtcbiAgc3RhdGU6IGRlZmF1bHRTdGF0ZSxcbiAgZGlzcGF0Y2g6ICgpID0+IHt9LFxuICBwbGFuZXRhcnlQb3NpdGlvbnM6IHt9LFxuICBpc0RheXRpbWU6IHRydWUsXG4gIHVwZGF0ZVBsYW5ldGFyeVBvc2l0aW9uczogKCkgPT4ge30sXG4gIHJlZnJlc2hQbGFuZXRhcnlQb3NpdGlvbnM6IGFzeW5jICgpID0+ICh7fSksXG4gIHNldERheXRpbWU6ICgpID0+IHt9LFxuICB1cGRhdGVTdGF0ZTogKCkgPT4ge31cbn0pO1xuXG4vLyBFeHBvcnQgdGhlIEFsY2hlbWljYWxDb250ZXh0VHlwZSBmb3IgZGlyZWN0IGltcG9ydHNcbmV4cG9ydCB0eXBlIHsgQWxjaGVtaWNhbENvbnRleHRUeXBlIH0gZnJvbSAnLi90eXBlcyc7ICJdLCJ2ZXJzaW9uIjozfQ==