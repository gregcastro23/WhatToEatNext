{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/utils/astrology/__tests__/astrologicalRules.test.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/utils/astrology/__tests__/astrologicalRules.test.ts"],"sourcesContent":["/**\n * Test file for custom astrological ESLint rules\n * \n * This file tests the domain-specific linting rules to ensure they properly\n * validate astrological calculations, planetary positions, and elemental properties.\n */\n\nimport { validateElementalProperties, normalizeElementalProperties } from '../elementalValidation';\nimport { validateTransitDate, getCurrentTransitSign } from '../transitValidation';\nimport { validatePlanetaryPositions, quickValidate } from '../astrologicalValidation';\n\ndescribe('Astrological ESLint Rules Integration', () => {\n  describe('Elemental Properties Validation', () => {\n    test('validates correct elemental properties structure', () => {\n      const validProperties = {\n        Fire: 0.4,\n        Water: 0.3,\n        Earth: 0.2,\n        Air: 0.1\n      };\n      \n      expect(validateElementalProperties(validProperties)).toBe(true);\n    });\n    \n    test('rejects invalid elemental properties', () => {\n      const invalidProperties = {\n        Fire: 1.5, // Invalid: > 1\n        Water: -0.1, // Invalid: < 0\n        Earth: 0.2\n        // Missing Air\n      };\n      \n      expect(validateElementalProperties(invalidProperties)).toBe(false);\n    });\n    \n    test('normalizes partial elemental properties', () => {\n      const partialProperties = {\n        Fire: 0.8,\n        Water: 0.2\n      };\n      \n      const normalized = normalizeElementalProperties(partialProperties);\n      expect(normalized).toHaveProperty('Fire', 0.8);\n      expect(normalized).toHaveProperty('Water', 0.2);\n      expect(normalized).toHaveProperty('Earth', 0.25); // Default\n      expect(normalized).toHaveProperty('Air', 0.25); // Default\n    });\n  });\n  \n  describe('Planetary Position Validation', () => {\n    test('validates correct planetary positions structure', () => {\n      const validPositions = {\n        sun: { sign: 'aries', degree: 15.5, exactLongitude: 15.5, isRetrograde: false },\n        moon: { sign: 'taurus', degree: 22.3, exactLongitude: 52.3, isRetrograde: false },\n        mercury: { sign: 'gemini', degree: 8.7, exactLongitude: 68.7, isRetrograde: true },\n        venus: { sign: 'cancer', degree: 5.2, exactLongitude: 95.2, isRetrograde: false },\n        mars: { sign: 'leo', degree: 12.8, exactLongitude: 132.8, isRetrograde: false },\n        jupiter: { sign: 'virgo', degree: 28.1, exactLongitude: 178.1, isRetrograde: false },\n        saturn: { sign: 'libra', degree: 3.4, exactLongitude: 183.4, isRetrograde: false }\n      };\n      \n      const result = validatePlanetaryPositions(validPositions);\n      if (!result.isValid) {\n        console.log('Validation errors:', result.errors);\n        console.log('Validation warnings:', result.warnings);\n      }\n      expect(result.isValid).toBe(true);\n      expect(result.errors).toHaveLength(0);\n    });\n    \n    test('detects missing required properties', () => {\n      const invalidPositions = {\n        sun: { sign: 'aries', degree: 15.5 }, // Missing exactLongitude and isRetrograde\n        moon: { degree: 22.3, exactLongitude: 52.3, isRetrograde: false } // Missing sign\n      };\n      \n      const result = validatePlanetaryPositions(invalidPositions);\n      expect(result.isValid).toBe(false);\n      expect(result.errors.length).toBeGreaterThan(0);\n    });\n    \n    test('validates degree ranges', () => {\n      const invalidPositions = {\n        sun: { sign: 'aries', degree: 35.0, exactLongitude: 35.0, isRetrograde: false }, // Invalid degree > 30\n        moon: { sign: 'taurus', degree: -5.0, exactLongitude: 325.0, isRetrograde: false }, // Invalid degree < 0\n        mercury: { sign: 'gemini', degree: 8.7, exactLongitude: 68.7, isRetrograde: true },\n        venus: { sign: 'cancer', degree: 5.2, exactLongitude: 95.2, isRetrograde: false },\n        mars: { sign: 'leo', degree: 12.8, exactLongitude: 132.8, isRetrograde: false },\n        jupiter: { sign: 'virgo', degree: 28.1, exactLongitude: 178.1, isRetrograde: false },\n        saturn: { sign: 'libra', degree: 3.4, exactLongitude: 183.4, isRetrograde: false }\n      };\n      \n      const result = validatePlanetaryPositions(invalidPositions, { strictMode: true });\n      // In strict mode, invalid degrees should be errors\n      expect(result.isValid).toBe(false);\n      expect(result.errors.length).toBeGreaterThan(0);\n      \n      // Test non-strict mode for warnings\n      const resultNonStrict = validatePlanetaryPositions(invalidPositions, { strictMode: false });\n      expect(resultNonStrict.warnings.length).toBeGreaterThan(0);\n    });\n  });\n  \n  describe('Quick Validation Functions', () => {\n    test('quick validate planetary positions', () => {\n      const validPositions = {\n        sun: { sign: 'aries', degree: 15.5, exactLongitude: 15.5, isRetrograde: false },\n        moon: { sign: 'taurus', degree: 22.3, exactLongitude: 52.3, isRetrograde: false },\n        mercury: { sign: 'gemini', degree: 8.7, exactLongitude: 68.7, isRetrograde: true },\n        venus: { sign: 'cancer', degree: 5.2, exactLongitude: 95.2, isRetrograde: false },\n        mars: { sign: 'leo', degree: 12.8, exactLongitude: 132.8, isRetrograde: false },\n        jupiter: { sign: 'virgo', degree: 28.1, exactLongitude: 178.1, isRetrograde: false },\n        saturn: { sign: 'libra', degree: 3.4, exactLongitude: 183.4, isRetrograde: false }\n      };\n      \n      const result = quickValidate(validPositions, 'planetary');\n      if (!result) {\n        console.log('Quick validation failed for:', validPositions);\n      }\n      expect(result).toBe(true);\n    });\n    \n    test('quick validate elemental properties', () => {\n      const validProperties = {\n        Fire: 0.4,\n        Water: 0.3,\n        Earth: 0.2,\n        Air: 0.1\n      };\n      \n      expect(quickValidate(validProperties, 'elemental')).toBe(true);\n    });\n    \n    test('quick validate mathematical constants', () => {\n      const validConstants = {\n        DEGREES_PER_SIGN: 30,\n        SIGNS_PER_CIRCLE: 12,\n        MAX_LONGITUDE: 360\n      };\n      \n      expect(quickValidate(validConstants, 'constants')).toBe(true);\n    });\n  });\n  \n  describe('Mathematical Constants Preservation', () => {\n    // These constants should be preserved by the ESLint rules\n    const DEGREES_PER_SIGN = 30;\n    const SIGNS_PER_CIRCLE = 12;\n    const MAX_LONGITUDE = 360;\n    const FALLBACK_POSITIONS = {\n      sun: { sign: 'aries', degree: 8.5, exactLongitude: 8.5, isRetrograde: false }\n    };\n    \n    test('mathematical constants maintain correct values', () => {\n      expect(DEGREES_PER_SIGN).toBe(30);\n      expect(SIGNS_PER_CIRCLE).toBe(12);\n      expect(MAX_LONGITUDE).toBe(360);\n    });\n    \n    test('fallback positions structure is preserved', () => {\n      expect(FALLBACK_POSITIONS.sun).toHaveProperty('sign');\n      expect(FALLBACK_POSITIONS.sun).toHaveProperty('degree');\n      expect(FALLBACK_POSITIONS.sun).toHaveProperty('exactLongitude');\n      expect(FALLBACK_POSITIONS.sun).toHaveProperty('isRetrograde');\n    });\n  });\n  \n  describe('Domain-Specific Variable Patterns', () => {\n    test('preserves astrological variable naming patterns', () => {\n      // These variables should be allowed by the custom rules\n      const planetPosition = { sign: 'aries', degree: 15.0, exactLongitude: 15.0, isRetrograde: false };\n      const degreeValue = 15.5;\n      const signName = 'aries';\n      const longitudeCalculation = 45.7;\n      \n      expect(planetPosition).toBeDefined();\n      expect(degreeValue).toBeDefined();\n      expect(signName).toBeDefined();\n      expect(longitudeCalculation).toBeDefined();\n    });\n    \n    test('preserves fallback and reliability patterns', () => {\n      // These variables should be allowed by the custom rules\n      const FALLBACK_DATA = { sun: { sign: 'aries', degree: 0, exactLongitude: 0, isRetrograde: false } };\n      const RELIABLE_POSITIONS = { moon: { sign: 'taurus', degree: 15, exactLongitude: 45, isRetrograde: false } };\n      const TRANSIT_DATES = { aries: { Start: '2024-03-20', End: '2024-04-19' } };\n      const DEFAULT_VALUES = { Fire: 0.25, Water: 0.25, Earth: 0.25, Air: 0.25 };\n      \n      expect(FALLBACK_DATA).toBeDefined();\n      expect(RELIABLE_POSITIONS).toBeDefined();\n      expect(TRANSIT_DATES).toBeDefined();\n      expect(DEFAULT_VALUES).toBeDefined();\n    });\n  });\n});"],"version":3}