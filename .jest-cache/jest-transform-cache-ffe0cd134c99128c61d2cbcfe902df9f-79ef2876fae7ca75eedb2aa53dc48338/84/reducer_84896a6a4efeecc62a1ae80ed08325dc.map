{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/contexts/AlchemicalContext/reducer.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/contexts/AlchemicalContext/reducer.ts"],"sourcesContent":["'use client';\n\nimport { AlchemicalState, AstrologicalState } from './types';\n\n// Define action types\nexport type AlchemicalAction = \n  | { type: 'SET_SEASONAL_STATE'; payload: { season: string } }\n  | { type: 'SET_ELEMENTAL_PREFERENCE'; payload: { element: string; value: number } }\n  | { type: 'SET_ELEMENTAL_STATE'; payload: { Fire: number; Water: number; Earth: number; Air: number } }\n  | { type: 'SET_ZODIAC_ENERGY'; payload: string }\n  | { type: 'SET_LUNAR_ENERGY'; payload: string }\n  | { type: 'SET_PLANETARY_ENERGY'; payload: string[] }\n  | { type: 'SET_ASTROLOGICAL_STATE'; payload: unknown }\n  | { type: 'SET_ERROR'; payload: { message: string } }\n  | { type: 'CLEAR_ERROR'; }\n  | { type: 'ADD_ERROR'; payload: string }\n  | { type: 'UPDATE_STATE'; payload: Partial<AlchemicalState> }\n  | { type: 'SET_ALCHEMICAL_VALUES'; payload: { Spirit: number; Essence: number; Matter: number; Substance: number } }\n  | { type: 'SET_LUNAR_PHASE'; payload: string };\n\n/**\n * Reducer for the AlchemicalContext\n */\nexport const alchemicalReducer = (state: AlchemicalState, action: AlchemicalAction): AlchemicalState => {\n  switch (action.type) {\n    case 'SET_SEASONAL_STATE':\n      return {\n        ...state,\n        currentSeason: action.payload.season,\n        lastUpdated: new Date()\n      };\n      \n    case 'SET_ELEMENTAL_PREFERENCE':\n      return {\n        ...state,\n        elementalPreference: {\n          Fire: 0,\n          Water: 0,\n          Earth: 0,\n          Air: 0,\n          ...state.elementalPreference,\n          [action.payload.element]: action.payload.value\n        },\n        lastUpdated: new Date()\n      };\n      \n    case 'SET_ELEMENTAL_STATE':\n      return {\n        ...state,\n        elementalState: action.payload,\n        lastUpdated: new Date()\n      };\n      \n    case 'SET_ZODIAC_ENERGY':\n      return {\n        ...state,\n        zodiacEnergy: action.payload,\n        currentEnergy: {\n          zodiacEnergy: action.payload,\n          lunarEnergy: state.currentEnergy?.lunarEnergy || '',\n          planetaryEnergy: state.currentEnergy?.planetaryEnergy || []\n        },\n        lastUpdated: new Date()\n      };\n      \n    case 'SET_LUNAR_ENERGY':\n      return {\n        ...state,\n        lunarEnergy: action.payload,\n        currentEnergy: {\n          zodiacEnergy: state.currentEnergy?.zodiacEnergy || '',\n          lunarEnergy: action.payload,\n          planetaryEnergy: state.currentEnergy?.planetaryEnergy || []\n        },\n        lastUpdated: new Date()\n      };\n      \n    case 'SET_PLANETARY_ENERGY':\n      return {\n        ...state,\n        planetaryEnergy: action.payload,\n        currentEnergy: {\n          zodiacEnergy: state.currentEnergy?.zodiacEnergy || '',\n          lunarEnergy: state.currentEnergy?.lunarEnergy || '',\n          planetaryEnergy: action.payload\n        },\n        lastUpdated: new Date()\n      };\n      \n    case 'SET_ASTROLOGICAL_STATE':\n      return {\n        ...state,\n        astrologicalState: {\n          currentZodiac: 'aries',\n          sunSign: 'aries',\n          lunarPhase: 'new moon',\n          moonPhase: 'new moon',\n          activePlanets: ['sun', 'moon'],\n          ...(action.payload && typeof action.payload === 'object' ? action.payload : {})\n        } as AstrologicalState,\n        lastUpdated: new Date()\n      };\n      \n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: true,\n        errorMessage: action.payload.message,\n        errors: [...state.errors, action.payload.message],\n        lastUpdated: new Date()\n      };\n      \n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: false,\n        errorMessage: '',\n        lastUpdated: new Date()\n      };\n      \n    case 'ADD_ERROR':\n      return {\n        ...state,\n        errors: [...state.errors, action.payload],\n        lastUpdated: new Date()\n      };\n      \n    case 'UPDATE_STATE':\n      return {\n        ...state,\n        ...action.payload,\n        lastUpdated: new Date()\n      };\n      \n    case 'SET_ALCHEMICAL_VALUES':\n      return {\n        ...state,\n        alchemicalValues: action.payload,\n        lastUpdated: new Date()\n      };\n      \n    case 'SET_LUNAR_PHASE':\n      return {\n        ...state,\n        lunarPhase: action.payload,\n        lastUpdated: new Date()\n      };\n      \n    default:\n      return state;\n  }\n}; "],"version":3}