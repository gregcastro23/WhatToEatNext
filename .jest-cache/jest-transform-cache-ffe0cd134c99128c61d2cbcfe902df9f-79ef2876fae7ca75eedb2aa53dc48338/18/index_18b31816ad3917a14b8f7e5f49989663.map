{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/hooks/index.ts","mappings":";;;AAAA,kCAAkC;AAClC,+DAA8D;AAArD,4HAAA,oBAAoB,OAAA;AAE7B,8DAA8D;AAE9D,8DAA8D;AAC9D,yDAAwD;AAA/C,sHAAA,iBAAiB,OAAA;AAE1B,wEAAwE;AACxE,uDAAuD;AACvD,iCAA4C;AAE5C,2DAAwD;AAExD,SAAgB,2BAA2B;IACzC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG,IAAA,qCAAiB,GAAE,CAAC;IACjF,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,IAAA,gBAAQ,EAAsB;QACxE,IAAI,EAAE,IAAI;QACV,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,IAAI;QACX,GAAG,EAAE,IAAI;KACV,CAAC,CAAC;IACH,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,IAAA,gBAAQ,EAAC,IAAI,CAAC,CAAC;IAEjD,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,6EAA6E;QAC7E,MAAM,sBAAsB,GAAG,GAAG,EAAE;YAClC,6EAA6E;YAC7E,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;YAC7B,IAAI,MAAM,GAAG,IAAI,EAAE;gBACjB,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aACxD;iBAAM,IAAI,MAAM,GAAG,GAAG,EAAE;gBACvB,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aACxD;iBAAM,IAAI,MAAM,GAAG,IAAI,EAAE;gBACxB,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aACxD;iBAAM;gBACL,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aACxD;QACH,CAAC,CAAC;QAEF,iBAAiB,CAAC,sBAAsB,EAAE,CAAC,CAAC;QAC5C,YAAY,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,4CAA4C;IAC5C,MAAM,aAAa,GAAwB;QACzC,IAAI,EAAE,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,GAAG,GAAG,CAAC;QAChD,KAAK,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,KAAK,GAAG,GAAG,CAAC;QACnD,KAAK,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,KAAK,GAAG,GAAG,CAAC;QACnD,GAAG,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,GAAG,GAAG,CAAC;KAC9C,CAAC;IAEF,OAAO;QACL,GAAG,aAAa;QAChB,cAAc;QACd,iBAAiB,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,SAAS,EAAE,YAAY,IAAI,SAAS;KACrC,CAAC;AACJ,CAAC;AA5CD,kEA4CC","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/hooks/index.ts"],"sourcesContent":["// Export hooks for easy importing\nexport { useIngredientMapping } from './useIngredientMapping'; \n\n// ========== MISSING HOOK EXPORTS FOR TS2305 FIXES ==========\n\n// useElementalState (causing error in CuisineRecommender.tsx)\nexport { useElementalState } from './useElementalState';\n\n// useAstroTarotElementalState (causing error in CuisineRecommender.tsx)\n// Combined astrological and tarot elemental state hook\nimport { useState, useEffect } from 'react';\nimport { ElementalProperties } from '@/types/alchemy';\nimport { useElementalState } from './useElementalState';\n\nexport function useAstroTarotElementalState() {\n  const { Fire, Water, Earth, Air, isLoading: astroLoading } = useElementalState();\n  const [tarotInfluence, setTarotInfluence] = useState<ElementalProperties>({\n    Fire: 0.25,\n    Water: 0.25,\n    Earth: 0.25,\n    Air: 0.25\n  });\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Simulate tarot reading influence (could be replaced with actual tarot API)\n    const generateTarotInfluence = () => {\n      // Simple randomization for tarot influence (replace with actual tarot logic)\n      const random = Math.random();\n      if (random < 0.25) {\n        return { Fire: 0.4, Water: 0.2, Earth: 0.2, Air: 0.2 };\n      } else if (random < 0.5) {\n        return { Fire: 0.2, Water: 0.4, Earth: 0.2, Air: 0.2 };\n      } else if (random < 0.75) {\n        return { Fire: 0.2, Water: 0.2, Earth: 0.4, Air: 0.2 };\n      } else {\n        return { Fire: 0.2, Water: 0.2, Earth: 0.2, Air: 0.4 };\n      }\n    };\n\n    setTarotInfluence(generateTarotInfluence());\n    setIsLoading(false);\n  }, []);\n\n  // Combine astrological and tarot influences\n  const combinedState: ElementalProperties = {\n    Fire: (Fire * 0.7) + (tarotInfluence.Fire * 0.3),\n    Water: (Water * 0.7) + (tarotInfluence.Water * 0.3),\n    Earth: (Earth * 0.7) + (tarotInfluence.Earth * 0.3),\n    Air: (Air * 0.7) + (tarotInfluence.Air * 0.3)\n  };\n\n  return {\n    ...combinedState,\n    tarotInfluence,\n    astrologicalState: { Fire, Water, Earth, Air },\n    isLoading: astroLoading || isLoading\n  };\n} "],"version":3}