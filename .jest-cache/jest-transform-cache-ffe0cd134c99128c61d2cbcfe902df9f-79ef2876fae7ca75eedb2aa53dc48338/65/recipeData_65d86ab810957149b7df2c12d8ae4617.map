{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/services/recipeData.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/services/recipeData.ts"],"sourcesContent":["// Enhanced Recipe interfaces for Phase 11\nexport interface RecipeDataEnhanced {\n  id?: string;\n  name?: string;\n  description?: string;\n  cuisine?: string;\n  flavorProfile?: Record<string, number>;\n  astrologicalProfile?: Record<string, any>;\n  season?: string | string[];\n  mealType?: string | string[];\n}\nimport type { Recipe } from '../types/recipe'\nimport { logger } from '../utils/logger'\nimport { errorHandler } from './errorHandler'\nimport { recipeElementalMappings } from '../data/recipes/elementalMappings'\nimport { spices } from '../data/ingredients/spices'\nimport { herbs } from '../data/ingredients/herbs'\nimport { fruits } from '../data/ingredients/fruits'\nimport { vegetables } from '../data/ingredients/vegetables'\nimport { seasonings } from '../data/ingredients/seasonings'\nimport { cache } from '../utils/cache'\nimport { validateElementalProperties } from '../types/recipe'\nimport { RecipeIngredient } from '../types/recipeIngredient'\nimport { recipeElementalService } from './RecipeElementalService'\n\n// Define interface for nutrition data\nexport interface NutritionData {\n  calories?: number;\n  protein?: number;\n  carbs?: number;\n  fat?: number;\n  vitamins?: string[];\n  minerals?: string[];\n  [key: string]: unknown; // Allow other properties\n}\n\n// Sample cuisines for initial data\nconst CUISINES = [\n  'Italian',\n  'Japanese',\n  'Mexican',\n  'Indian',\n  'Chinese',\n  'French',\n  'Greek',\n  'Thai'\n]\n\n// Cache key for recipes\nconst RECIPE_CACHE_KEY = 'all_recipes'\n\n// Helper function for safe string extraction\nfunction safeGetString(value: unknown): string | undefined {\n  if (typeof value === 'string') {\n    return value;\n  }\n  return undefined;\n}\n\n/**\n * Ensures a recipe has all required properties with defaults as needed\n * This is the single source of truth for recipe validation and normalization\n */\nfunction ensureRecipeProperties(recipe: Partial<Recipe>): Recipe {\n  if (!recipe) {\n    throw new Error('Recipe cannot be null or undefined');\n  }\n\n  // Validate name format\n  const recipeName = (recipe as Record<string, unknown>)?.name;\n  if (recipeName && typeof recipeName === 'string') {\n    if (recipeName.length < 3 || recipeName.length > 100) {\n      throw new Error('Recipe name must be between 3 and 100 characters');\n    }\n  }\n\n  // Core required properties with enhanced validation\n  const safeRecipe: Recipe = {\n    id: safeGetString((recipe as Record<string, unknown>)?.id) || `recipe-${Date.now()}`,\n    name: safeGetString((recipe as Record<string, unknown>)?.name) || 'Unnamed Recipe',\n    description: safeGetString((recipe as Record<string, unknown>)?.description) || '',\n    cuisine: safeGetString((recipe as Record<string, unknown>)?.cuisine) || '',\n    ingredients: validateAndNormalizeIngredients(Array.isArray(recipe.ingredients) ? recipe.ingredients as Partial<RecipeIngredient>[] : []),\n    instructions: validateAndNormalizeInstructions(recipe.instructions || []),\n    timeToMake: validateAndNormalizeTime(recipe.timeToMake) || '30 minutes',\n    numberOfServings: validateServings(recipe.numberOfServings) || 2,\n    // Use the new recipe elemental service to ensure proper elemental properties\n    elementalProperties: recipeElementalService.standardizeRecipe(recipe).elementalProperties\n  };\n\n  // Optional properties with validation\n  if ((recipe as Record<string, unknown>)?.mealType) {\n    safeRecipe.mealType = validateMealType((recipe as Record<string, unknown>)?.mealType);\n  }\n  if ((recipe as Record<string, unknown>)?.season) {\n    safeRecipe.season = validateSeason((recipe as Record<string, unknown>)?.season);\n  }\n  \n  // Boolean properties\n  safeRecipe.isVegetarian = recipe.isVegetarian ?? false;\n  safeRecipe.isVegan = recipe.isVegan ?? false;\n  safeRecipe.isGlutenFree = recipe.isGlutenFree ?? false;\n  safeRecipe.isDairyFree = recipe.isDairyFree ?? false;\n\n  // Optional complex properties\n  if (recipe.astrologicalInfluences) {\n    safeRecipe.astrologicalInfluences = validateAstrologicalInfluences(recipe.astrologicalInfluences);\n  }\n  if ((recipe as Record<string, unknown>)?.nutrition) {\n    safeRecipe.nutrition = validateAndNormalizeNutrition((recipe as Record<string, unknown>)?.nutrition as NutritionData);\n  }\n\n  // Timestamp handling\n  safeRecipe.createdAt = recipe.createdAt || new Date().toISOString();\n  safeRecipe.updatedAt = new Date().toISOString();\n\n  return safeRecipe;\n}\n\n// Helper validation functions\nfunction validateAndNormalizeIngredients(ingredients: Array<Partial<RecipeIngredient>>): RecipeIngredient[] {\n  if (!Array.isArray(ingredients)) {\n    throw new Error('Ingredients must be an array');\n  }\n  \n  if (ingredients.length === 0) {\n    throw new Error('Recipe must have at least one ingredient');\n  }\n\n  return ingredients.map(ing => ({\n    name: safeGetString((ing as Record<string, unknown>)?.name) || 'Unknown Ingredient',\n    amount: typeof ing.amount === 'number' ? ing.amount : 1,\n    unit: ing.unit || 'piece',\n    category: ing.category || 'other',\n    optional: ing.optional || false,\n    preparation: ing.preparation || '',\n    notes: ing.notes || '',\n    // Standardize ingredient elemental properties too\n    elementalProperties: (ing as Record<string, unknown>)?.elementalProperties ? \n      (recipeElementalService.standardizeRecipe({elementalProperties: (ing as Record<string, unknown>)?.elementalProperties}).elementalProperties as ElementalProperties) || { Fire: 0.25, Water: 0.25, Earth: 0.25, Air: 0.25 } : \n      { Fire: 0.25, Water: 0.25, Earth: 0.25, Air: 0.25 }\n  }));\n}\n\nfunction validateAndNormalizeInstructions(instructions: string[] | unknown[]): string[] {\n  if (!Array.isArray(instructions)) {\n    return ['Prepare ingredients', 'Cook until done'];\n  }\n  \n  if (instructions.length === 0) {\n    return ['Prepare ingredients', 'Cook until done'];\n  }\n  \n  return instructions.map(step => \n    typeof step === 'string' ? step : 'Prepare according to preference'\n  );\n}\n\nfunction validateAndNormalizeTime(time: string | number | unknown): string {\n  if (!time) return '30 minutes';\n  \n  if (typeof time === 'number') {\n    return `${time} minutes`;\n  }\n  \n  if (typeof time === 'string') {\n    // Check if already has time units\n    if (/minutes|mins|hours|hrs/i.test(time)) {\n      return time;\n    }\n    \n    // Try to parse as number\n    const timeNum = parseInt(time, 10);\n    if (!isNaN(timeNum)) {\n      return `${timeNum} minutes`;\n    }\n  }\n  \n  return '30 minutes';\n}\n\nfunction validateServings(servings: number | string | unknown): number {\n  if (typeof servings === 'number') {\n    return Math.max(1, Math.min(12, Math.round(servings)));\n  }\n  \n  if (typeof servings === 'string') {\n    const num = parseInt(servings, 10);\n    if (!isNaN(num)) {\n      return Math.max(1, Math.min(12, num));\n    }\n  }\n  \n  return 2;\n}\n\nfunction validateMealType(mealType: string | string[] | unknown): string[] {\n  const validMealTypes = ['breakfast', 'lunch', 'dinner', 'snack', 'dessert', 'drink', 'appetizer', 'side'];\n  \n  if (typeof mealType === 'string') {\n    if (validMealTypes.includes(mealType.toLowerCase())) {\n      return [mealType.toLowerCase()];\n    }\n    return ['dinner'];\n  }\n  \n  if (Array.isArray(mealType)) {\n    const validEntries = mealType\n      .filter(type => typeof type === 'string')\n      .map(type => (type as string).toLowerCase())\n      .filter(type => validMealTypes.includes(type));\n    \n    return validEntries.length > 0 ? validEntries : ['dinner'];\n  }\n  \n  return ['dinner'];\n}\n\nfunction validateSeason(season: string | string[] | unknown): string[] {\n  const validSeasons = ['spring', 'summer', 'fall', 'winter', 'all'];\n  \n  if (typeof season === 'string') {\n    if (validSeasons.includes(season.toLowerCase())) {\n      return [season.toLowerCase()];\n    }\n    return ['all'];\n  }\n  \n  if (Array.isArray(season)) {\n    const validEntries = season\n      .filter(s => typeof s === 'string')\n      .map(s => (s as string).toLowerCase())\n      .filter(s => validSeasons.includes(s));\n    \n    return validEntries.length > 0 ? validEntries : ['all'];\n  }\n  \n  return ['all'];\n}\n\nfunction validateAstrologicalInfluences(influences: string | string[] | unknown): string[] {\n  if (typeof influences === 'string') {\n    return [influences];\n  }\n  \n  if (Array.isArray(influences)) {\n    const validEntries = influences\n      .filter(i => typeof i === 'string')\n      .filter(i => i.length > 0);\n    \n    return validEntries.length > 0 ? validEntries : ['all'];\n  }\n  \n  return ['all'];\n}\n\nfunction validateAndNormalizeNutrition(nutrition: NutritionData): NutritionData {\n  if (!nutrition || typeof nutrition !== 'object') {\n    return {};\n  }\n\n  const safeNutrition: NutritionData = {};\n\n  // Validate numeric fields\n  ['calories', 'protein', 'carbs', 'fat'].forEach(field => {\n    if (typeof nutrition[field] === 'number') {\n      safeNutrition[field] = nutrition[field];\n    }\n  });\n\n  // Validate array fields (vitamins, minerals)\n  if (Array.isArray(nutrition.vitamins)) {\n    safeNutrition.vitamins = nutrition.vitamins\n      .filter((v: unknown) => typeof v === 'string')\n      .slice(0, 10);  // Limit to 10 items\n  }\n  \n  if (Array.isArray(nutrition.minerals)) {\n    safeNutrition.minerals = nutrition.minerals\n      .filter((m: unknown) => typeof m === 'string')\n      .slice(0, 10);  // Limit to 10 items\n  }\n\n  return safeNutrition;\n}\n\nclass RecipeData {\n  private recipes: Recipe[] = []\n  private initialized = false\n  private initPromise: Promise<void> | null = null\n\n  constructor() {\n    // Start loading data immediately\n    this.initPromise = this.loadRecipeData()\n  }\n\n  private async loadRecipeData(): Promise<void> {\n    try {\n      logger.info('Loading recipe data...')\n      \n      // Create recipes from mappings safely\n      if (!recipeElementalMappings) {\n        logger.error('recipeElementalMappings not found or invalid');\n        this.recipes = [];\n        this.initialized = true;\n        return;\n      }\n      \n      // Handle different formats of recipeElementalMappings\n      const mappingsEntries = Array.isArray(recipeElementalMappings) \n        ? recipeElementalMappings \n        : Object.entries(recipeElementalMappings).map(([id, mapping]) => ({\n            id,\n            ...mapping\n          }));\n      \n      this.recipes = mappingsEntries.map((mapping: unknown) => {\n        let elementalProps = (mapping as Record<string, unknown>)?.elementalProperties || (mapping as Record<string, unknown>)?.elementalProfile;\n        \n        // If no elemental properties, derive them from cuisine or other attributes\n        if (!elementalProps) {\n          const mappingData = mapping as Record<string, unknown>;\n          elementalProps = recipeElementalService.deriveElementalProperties({\n            cuisine: String((mappingData?.cuisine as Record<string, unknown>)?.name || mappingData?.cuisine || ''),\n            cookingMethod: String(mappingData?.cookingMethod || '')\n          });\n        }\n        \n        // Create a partial recipe object with safe defaults\n        const mappingData = mapping as Record<string, unknown>;\n        const partialRecipe: Partial<Recipe> = {\n          id: safeGetString(mappingData?.id) || `recipe-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`,\n          name: safeGetString(mappingData?.name) || safeGetString(mappingData?.id) || 'Unknown Recipe',\n          cuisine: safeGetString((mappingData?.cuisine as Record<string, unknown>)?.name) || safeGetString(mappingData?.cuisine) || 'Unknown',\n          description: safeGetString(mappingData?.description) || safeGetString((mappingData?.cuisine as Record<string, unknown>)?.description) || '',\n          elementalProperties: elementalProps as ElementalProperties,\n          ingredients: Array.isArray(mappingData?.ingredients) \n            ? (mappingData.ingredients as unknown[]).map((ing: unknown) => {\n                const ingData = ing as Record<string, unknown>;\n                return {\n                  name: String(ingData?.name || 'Unknown Ingredient'),\n                  amount: typeof ingData?.amount === 'number' ? ingData.amount : 1,\n                  unit: String(ingData?.unit || 'piece'),\n                  category: String(ingData?.category || 'other')\n                };\n              })\n            : [],\n          instructions: Array.isArray(mappingData?.instructions) ? mappingData.instructions : [],\n          timeToMake: mappingData?.timeToMake || '30 minutes',\n          energyProfile: mappingData?.energyProfile || {},\n          // Critical field: always ensure astrologicalInfluences is set\n          astrologicalInfluences: (mappingData?.astrologicalInfluences ? \n                                  (Array.isArray(mappingData.astrologicalInfluences) ? \n                                    (mappingData.astrologicalInfluences as string[]) : \n                                    [String(mappingData.astrologicalInfluences)]) : \n                                  ((mappingData?.astrologicalProfile as Record<string, unknown>)?.rulingPlanets ? \n                                    (Array.isArray((mappingData.astrologicalProfile as Record<string, unknown>).rulingPlanets) ? \n                                      ((mappingData.astrologicalProfile as Record<string, unknown>).rulingPlanets as string[]) : \n                                      [String((mappingData.astrologicalProfile as Record<string, unknown>).rulingPlanets)]) : \n                                    [\"all\"])),\n          season: Array.isArray(mappingData?.seasonalProperties) ? (mappingData.seasonalProperties as string[]) : \n                  Array.isArray(mappingData?.season) ? (mappingData.season as string[]) : ['all'],\n          mealType: Array.isArray(mappingData?.mealType) ? (mappingData.mealType as string[]) : ['dinner'],\n          numberOfServings: typeof mappingData?.servings === 'number' ? mappingData.servings : 2,\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        }\n        \n        // Ensure all properties are properly set with defaults as needed\n        return ensureRecipeProperties(partialRecipe)\n      })\n      \n      // Mark as initialized\n      this.initialized = true\n      logger.info(`Loaded ${this.recipes.length} recipes successfully`)\n      \n      // Cache the recipes\n      cache.set(RECIPE_CACHE_KEY, this.recipes)\n      \n    } catch (error) {\n      logger.error('Error loading recipes:', error)\n      // Initialize with an empty array to prevent further errors\n      this.recipes = []\n      this.initialized = true\n    }\n  }\n\n  // Add a method to standardize recipes after they've been loaded from anywhere\n  private standardizeRecipes(recipes: Recipe[]): Recipe[] {\n    return recipes.map(recipe => {\n      // First ensure elemental properties are properly set\n      const withElementalProps = recipeElementalService.standardizeRecipe(recipe);\n      \n      // Then ensure all other properties are valid\n      return ensureRecipeProperties({\n        ...recipe,\n        elementalProperties: ((withElementalProps as Record<string, unknown>)?.elementalProperties as ElementalProperties) || { Fire: 0.25, Water: 0.25, Earth: 0.25, Air: 0.25 }\n      });\n    });\n  }\n\n  async getAllRecipes(): Promise<Recipe[]> {\n    try {\n      // Check cache first\n      const cachedRecipes = cache.get(RECIPE_CACHE_KEY) as Recipe[] | undefined;\n      if (cachedRecipes) {\n        // Standardize all cached recipes\n        return this.standardizeRecipes(cachedRecipes);\n      }\n      \n      // If not initialized, wait for initialization\n      if (!this.initialized) {\n        logger.info('Waiting for recipe data to initialize...');\n        if (this.initPromise) {\n          await this.initPromise;\n        } else {\n          await this.loadRecipeData();\n        }\n      }\n      \n      // If we still have no recipes, return at least a fallback recipe\n      if (!this.recipes.length) {\n        const fallbackRecipe = this.getFallbackRecipe();\n        return [fallbackRecipe];\n      }\n      \n      // Standardize all recipes\n      const safeRecipes = this.standardizeRecipes(this.recipes);\n      \n      // Update cache\n      cache.set(RECIPE_CACHE_KEY, safeRecipes);\n      \n      return safeRecipes;\n    } catch (error) {\n      errorHandler.handleError(error, {\n        context: 'RecipeData',\n        action: 'getAllRecipes'\n      });\n      \n      // Return at least one fallback recipe to prevent application errors\n      return [this.getFallbackRecipe()];\n    }\n  }\n  \n  private getFallbackRecipe(): Recipe {\n    return ensureRecipeProperties({\n      id: 'universal-balance',\n      name: \"Universal Balance Bowl\",\n      description: \"A harmonious blend for any occasion\",\n      ingredients: [\n        { name: \"Mixed Greens\", amount: 2, unit: \"cups\", category: \"vegetables\" },\n        { name: \"Quinoa\", amount: 1, unit: \"cup\", category: \"grains\" },\n        { name: \"Mixed Seeds\", amount: 0.25, unit: \"cup\", category: \"garnish\" }\n      ],\n      instructions: [\n        \"Combine all ingredients in a bowl\",\n        \"Season to taste\",\n        \"Enjoy mindfully\"\n      ],\n      timeToMake: \"15 minutes\",\n      numberOfServings: 2,\n      elementalProperties: {\n        Fire: 0.25, Earth: 0.25, Air: 0.25, Water: 0.25\n      },\n      season: [\"all\"],\n      mealType: [\"lunch\", \"dinner\"],\n      cuisine: \"international\",\n      isVegetarian: true,\n      isVegan: true,\n      isGlutenFree: true,\n      isDairyFree: true,\n      score: 1,\n      astrologicalInfluences: [\"all\"]\n    });\n  }\n\n  async getRecipeByCuisine(cuisine: string): Promise<Recipe[]> {\n    try {\n      if (this.initPromise) {\n        await this.initPromise;\n      }\n      \n      const allRecipes = await this.getAllRecipes();\n      return allRecipes.filter(recipe => {\n        const recipeData = recipe as unknown as Record<string, unknown>;\n        const recipeCuisine = String(recipeData?.cuisine || '').toLowerCase();\n        const targetCuisine = String(cuisine || '').toLowerCase();\n        return recipeCuisine === targetCuisine;\n      });\n    } catch (error) {\n      errorHandler.handleError(error, {\n        context: 'RecipeData',\n        action: 'getRecipeByCuisine',\n        cuisine\n      });\n      return [this.getFallbackRecipe()];\n    }\n  }\n\n  async searchRecipes(query: string): Promise<Recipe[]> {\n    try {\n      if (this.initPromise) {\n        await this.initPromise;\n      }\n      const lowercaseQuery = (query as string)?.toLowerCase?.();\n      const recipes = await this.getAllRecipes();\n      return recipes.filter(recipe => {\n        const recipeData = recipe as unknown as Record<string, unknown>;\n        const recipeName = String(recipeData?.name || '').toLowerCase();\n        const recipeCuisine = String(recipeData?.cuisine || '').toLowerCase();\n        return recipeName.includes(lowercaseQuery) || recipeCuisine.includes(lowercaseQuery);\n      });\n    } catch (error) {\n      errorHandler.handleError(error, {\n        context: 'RecipeData',\n        action: 'searchRecipes',\n        query\n      });\n      return [this.getFallbackRecipe()];\n    }\n  }\n\n  async getRecommendedRecipes(count = 3): Promise<Recipe[]> {\n    try {\n      if (this.initPromise) {\n        await this.initPromise;\n      }\n      const recipes = await this.getAllRecipes();\n      \n      // For now, just return random recipes\n      return recipes\n        .sort(() => Math.random() - 0.5)\n        .slice(0, count);\n    } catch (error) {\n      errorHandler.handleError(error, {\n        context: 'RecipeData',\n        action: 'getRecommendedRecipes'\n      });\n      return [this.getFallbackRecipe()];\n    }\n  }\n\n  async addRecipe(recipe: Partial<Recipe>): Promise<Recipe> {\n    // Ensure the recipe has all required properties\n    const newRecipe = ensureRecipeProperties(recipe);\n    \n    // Add to recipes array\n    this.recipes.push(newRecipe);\n    \n    // Clear cache\n    cache.delete(RECIPE_CACHE_KEY);\n    \n    return newRecipe;\n  }\n\n  async getRecipeById(id: string): Promise<Recipe | null> {\n    try {\n      const recipes = await this.getAllRecipes();\n      const recipe = recipes.find(r => r.id === id);\n      \n      return recipe || null;\n    } catch (error) {\n      errorHandler.handleError(error, {\n        context: 'RecipeData',\n        action: 'getRecipeById',\n        id\n      });\n      return null;\n    }\n  }\n\n  async filterRecipes(filters: {\n    cuisine?: string;\n    mealType?: string[];\n    season?: string[];\n    astrologicalInfluences?: string[];\n    isVegetarian?: boolean;\n    isVegan?: boolean;\n    isGlutenFree?: boolean;\n    isDairyFree?: boolean;\n  }): Promise<Recipe[]> {\n    try {\n      if (this.initPromise) {\n        await this.initPromise;\n      }\n      \n      const recipes = await this.getAllRecipes();\n      \n      const filteredRecipes = recipes.filter(recipe => {\n        // Filter by cuisine\n        if (filters.cuisine && recipe.cuisine) {\n          const recipeCuisine = String(recipe.cuisine || '').toLowerCase();\n          const targetCuisine = String(filters.cuisine || '').toLowerCase();\n          \n          if (!recipeCuisine.includes(targetCuisine)) {\n            return false;\n          }\n        }\n        \n        // Filter by meal type\n        if (filters.mealType && filters.mealType.length > 0 && recipe.mealType) {\n          const mealTypes = Array.isArray(recipe.mealType) \n            ? recipe.mealType.map(mt => String(mt || '').toLowerCase())\n            : [String(recipe.mealType || '').toLowerCase()];\n          \n          const targetMealTypes = filters.mealType.map(mt => String(mt || '').toLowerCase());\n          \n          if (!targetMealTypes.some(target => mealTypes.includes(target))) {\n            return false;\n          }\n        }\n        \n        // Filter by season\n        if (filters.season && filters.season.length > 0 && recipe.season) {\n          const seasons = Array.isArray(recipe.season)\n            ? recipe.season.map(s => String(s || '').toLowerCase())\n            : [String(recipe.season || '').toLowerCase()];\n          \n          // Special case: if 'all' is included in recipe seasons, it matches any season\n          if (!seasons.includes('all')) {\n            const targetSeasons = filters.season.map(s => String(s || '').toLowerCase());\n            \n            if (!targetSeasons.some(target => seasons.includes(target))) {\n              return false;\n            }\n          }\n        }\n        \n        // Filter by astrological influences\n        if (filters.astrologicalInfluences && filters.astrologicalInfluences.length > 0) {\n          const influences = recipe.astrologicalInfluences || [];\n          \n          // Special case: if 'all' is included, it matches any influence\n          if (!influences.includes('all')) {\n            const hasMatch = filters.astrologicalInfluences.some(influence => \n              influences.some(recipeInfluence => \n                String(recipeInfluence || '').toLowerCase() === String(influence || '').toLowerCase()\n              )\n            );\n            \n            if (!hasMatch) {\n              return false;\n            }\n          }\n        }\n        \n        // Filter by dietary restrictions\n        if (filters.isVegetarian && recipe.isVegetarian === false) {\n          return false;\n        }\n        \n        if (filters.isVegan && recipe.isVegan === false) {\n          return false;\n        }\n        \n        if (filters.isGlutenFree && recipe.isGlutenFree === false) {\n          return false;\n        }\n        \n        if (filters.isDairyFree && recipe.isDairyFree === false) {\n          return false;\n        }\n        \n        return true;\n      });\n      \n      return filteredRecipes;\n    } catch (error) {\n      errorHandler.handleError(error, {\n        context: 'RecipeData',\n        action: 'filterRecipes'\n      });\n      return [this.getFallbackRecipe()];\n    }\n  }\n}\n\n// Export the singleton instance\nexport const recipeDataService = new RecipeData(); \n\n// Export alias for compatibility\nexport const recipeData = recipeDataService; "],"version":3}