{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/utils/apiCircuitBreaker.ts","mappings":";AAAA;;;GAGG;;;AAQH,IAAK,YAIJ;AAJD,WAAK,YAAY;IACf,iCAAiB,CAAA;IACjB,6BAAa,CAAA;IACb,uCAAuB,CAAA;AACzB,CAAC,EAJI,YAAY,KAAZ,YAAY,QAIhB;AAED,MAAa,cAAc;IAMzB,YAAY,UAA0C,EAAE;QALhD,UAAK,GAAiB,YAAY,CAAC,MAAM,CAAC;QAC1C,iBAAY,GAAG,CAAC,CAAC;QACjB,oBAAe,GAAG,CAAC,CAAC;QAI1B,IAAI,CAAC,OAAO,GAAG;YACb,gBAAgB,EAAE,CAAC;YACnB,YAAY,EAAE,KAAK;YACnB,gBAAgB,EAAE,MAAM;YACxB,GAAG,OAAO;SACX,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,IAAI,CAAI,EAAoB,EAAE,QAAkB;QACpD,IAAI,IAAI,CAAC,KAAK,KAAK,YAAY,CAAC,IAAI,EAAE;YACpC,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;gBACjE,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,SAAS,CAAC;gBACpC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;aACvB;iBAAM;gBACL,IAAI,QAAQ,EAAE;oBACZ,OAAO,QAAQ,EAAE,CAAC;iBACnB;gBACD,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;aAC5C;SACF;QAED,IAAI;YACF,MAAM,MAAM,GAAG,MAAM,EAAE,EAAE,CAAC;YAC1B,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,OAAO,MAAM,CAAC;SACf;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,SAAS,EAAE,CAAC;YAEjB,IAAI,QAAQ,EAAE;gBACZ,OAAO,QAAQ,EAAE,CAAC;aACnB;YAED,MAAM,KAAK,CAAC;SACb;IACH,CAAC;IAEO,SAAS;QACf,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,MAAM,CAAC;IACnC,CAAC;IAEO,SAAS;QACf,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAElC,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;YACtD,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC;SAChC;IACH,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,KAAK;QACH,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;IAC3B,CAAC;CACF;AAlED,wCAkEC;AAED,6CAA6C;AAChC,QAAA,4BAA4B,GAAG,IAAI,cAAc,CAAC;IAC7D,gBAAgB,EAAE,CAAC;IACnB,YAAY,EAAE,KAAK;IACnB,gBAAgB,EAAE,MAAM,CAAC,YAAY;CACtC,CAAC,CAAC","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/utils/apiCircuitBreaker.ts"],"sourcesContent":["/**\n * Circuit Breaker for API calls\n * Prevents overwhelming a failing API with repeated requests\n */\n\ninterface CircuitBreakerOptions {\n  failureThreshold: number;\n  resetTimeout: number;\n  monitoringWindow: number;\n}\n\nenum CircuitState {\n  CLOSED = 'CLOSED',\n  OPEN = 'OPEN',\n  HALF_OPEN = 'HALF_OPEN'\n}\n\nexport class CircuitBreaker {\n  private state: CircuitState = CircuitState.CLOSED;\n  private failureCount = 0;\n  private lastFailureTime = 0;\n  private options: CircuitBreakerOptions;\n\n  constructor(options: Partial<CircuitBreakerOptions> = {}) {\n    this.options = {\n      failureThreshold: 3,\n      resetTimeout: 60000, // 1 minute\n      monitoringWindow: 300000, // 5 minutes\n      ...options\n    };\n  }\n\n  async call<T>(fn: () => Promise<T>, fallback?: () => T): Promise<T> {\n    if (this.state === CircuitState.OPEN) {\n      if (Date.now() - this.lastFailureTime > this.options.resetTimeout) {\n        this.state = CircuitState.HALF_OPEN;\n        this.failureCount = 0;\n      } else {\n        if (fallback) {\n          return fallback();\n        }\n        throw new Error('Circuit breaker is OPEN');\n      }\n    }\n\n    try {\n      const result = await fn();\n      this.onSuccess();\n      return result;\n    } catch (error) {\n      this.onFailure();\n      \n      if (fallback) {\n        return fallback();\n      }\n      \n      throw error;\n    }\n  }\n\n  private onSuccess() {\n    this.failureCount = 0;\n    this.state = CircuitState.CLOSED;\n  }\n\n  private onFailure() {\n    this.failureCount++;\n    this.lastFailureTime = Date.now();\n\n    if (this.failureCount >= this.options.failureThreshold) {\n      this.state = CircuitState.OPEN;\n    }\n  }\n\n  getState(): CircuitState {\n    return this.state;\n  }\n\n  reset() {\n    this.state = CircuitState.CLOSED;\n    this.failureCount = 0;\n    this.lastFailureTime = 0;\n  }\n}\n\n// Global circuit breaker for astrologize API\nexport const astrologizeApiCircuitBreaker = new CircuitBreaker({\n  failureThreshold: 1, // Fail fast after 1 attempt for immediate fallback\n  resetTimeout: 60000, // 1 minute before retry (faster recovery)\n  monitoringWindow: 300000 // 5 minutes\n});\n"],"version":3}