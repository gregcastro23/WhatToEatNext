{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/components/recipes/RecipeBuilderSimple.tsx","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/components/recipes/RecipeBuilderSimple.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useCallback, useMemo, memo } from 'react';\n\nimport { logger } from '@/utils/logger';\n\ninterface RecipeBuilderProps {\n  initialIngredients?: string[];\n  initialMethods?: string[];\n  onRecipeComplete?: (recipe: any) => void;\n  onSave?: (recipe: any) => void;\n}\n\ninterface RecipeIngredient {\n  name: string;\n  quantity: string;\n  preparation: string;\n}\n\ninterface RecipeStep {\n  step: number;\n  instruction: string;\n  timing?: string;\n}\n\nconst RecipeBuilderSimple: React.FC<RecipeBuilderProps> = memo(function RecipeBuilderSimple({\n  initialIngredients = [],\n  initialMethods = [],\n  onRecipeComplete,\n  onSave\n}) {\n  const [recipeName, setRecipeName] = useState('');\n  const [ingredients, setIngredients] = useState<RecipeIngredient[]>([]);\n  const [steps, setSteps] = useState<RecipeStep[]>([]);\n  const [servings, setServings] = useState(4);\n  const [prepTime, setPrepTime] = useState(15);\n  const [cookTime, setCookTime] = useState(30);\n\n  const addIngredient = useCallback(() => {\n    setIngredients(prev => [...prev, { name: '', quantity: '', preparation: '' }]);\n  }, []);\n\n  const updateIngredient = useCallback((index: number, field: keyof RecipeIngredient, value: string) => {\n    setIngredients(prev => prev.map((ing, i) => \n      i === index ? { ...ing, [field]: value } : ing\n    ));\n  }, []);\n\n  const removeIngredient = useCallback((index: number) => {\n    setIngredients(prev => prev.filter((_, i) => i !== index));\n  }, []);\n\n  const addStep = useCallback(() => {\n    setSteps(prev => [...prev, { step: prev.length + 1, instruction: '', timing: '' }]);\n  }, []);\n\n  const updateStep = useCallback((index: number, field: keyof RecipeStep, value: string | number) => {\n    setSteps(prev => prev.map((step, i) => \n      i === index ? { ...step, [field]: value } : step\n    ));\n  }, []);\n\n  const removeStep = useCallback((index: number) => {\n    setSteps(prev => prev.filter((_, i) => i !== index).map((step, i) => ({ ...step, step: i + 1 })));\n  }, []);\n\n  // Memoize expensive calculations\n  const totalTime = useMemo(() => prepTime + cookTime, [prepTime, cookTime]);\n  \n  const isRecipeValid = useMemo(() => \n    recipeName.trim() && ingredients.length > 0 && steps.length > 0,\n    [recipeName, ingredients.length, steps.length]\n  );\n\n  const recipeSummary = useMemo(() => ({\n    name: recipeName,\n    servings,\n    totalTime,\n    ingredientCount: ingredients.length,\n    stepCount: steps.length\n  }), [recipeName, servings, totalTime, ingredients.length, steps.length]);\n\n  const saveRecipe = useCallback(() => {\n    const recipe = {\n      id: `recipe_${Date.now()}`,\n      name: recipeName || 'Untitled Recipe',\n      ingredients,\n      steps,\n      servings,\n      prepTime,\n      cookTime,\n      totalTime,\n      createdAt: new Date().toISOString()\n    };\n\n    logger.info('Saving recipe:', recipe);\n    onSave?.(recipe);\n    onRecipeComplete?.(recipe);\n  }, [recipeName, ingredients, steps, servings, prepTime, cookTime, totalTime, onSave, onRecipeComplete]);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\n      <div className=\"mb-6\">\n        <h3 className=\"text-xl font-semibold mb-4 text-gray-800\">Create Your Recipe</h3>\n        \n        {/* Recipe Name */}\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Recipe Name\n          </label>\n          <input\n            type=\"text\"\n            value={recipeName}\n            onChange={(e) => setRecipeName(e.target.value)}\n            placeholder=\"Enter recipe name...\"\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          />\n        </div>\n\n        {/* Recipe Details */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Servings\n            </label>\n            <input\n              type=\"number\"\n              value={servings}\n              onChange={(e) => setServings(parseInt(e.target.value) || 1)}\n              min=\"1\"\n              max=\"20\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Prep Time (min)\n            </label>\n            <input\n              type=\"number\"\n              value={prepTime}\n              onChange={(e) => setPrepTime(parseInt(e.target.value) || 0)}\n              min=\"0\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Cook Time (min)\n            </label>\n            <input\n              type=\"number\"\n              value={cookTime}\n              onChange={(e) => setCookTime(parseInt(e.target.value) || 0)}\n              min=\"0\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Ingredients Section */}\n      <div className=\"mb-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h4 className=\"text-lg font-medium text-gray-800\">Ingredients</h4>\n          <button\n            onClick={addIngredient}\n            className=\"bg-indigo-600 text-white px-3 py-1 rounded text-sm hover:bg-indigo-700 transition-colors\"\n          >\n            Add Ingredient\n          </button>\n        </div>\n        \n        {ingredients.length === 0 ? (\n          <p className=\"text-gray-500 text-center py-4\">No ingredients added yet. Click \"Add Ingredient\" to start.</p>\n        ) : (\n          <div className=\"space-y-3\">\n            {ingredients.map((ingredient, index) => (\n              <div key={index} className=\"flex gap-3 items-center bg-gray-50 p-3 rounded\">\n                <input\n                  type=\"text\"\n                  value={ingredient.quantity}\n                  onChange={(e) => updateIngredient(index, 'quantity', e.target.value)}\n                  placeholder=\"1 cup\"\n                  className=\"w-24 px-2 py-1 border border-gray-300 rounded text-sm focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n                />\n                <input\n                  type=\"text\"\n                  value={ingredient.name}\n                  onChange={(e) => updateIngredient(index, 'name', e.target.value)}\n                  placeholder=\"Ingredient name\"\n                  className=\"flex-1 px-2 py-1 border border-gray-300 rounded text-sm focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n                />\n                <input\n                  type=\"text\"\n                  value={ingredient.preparation}\n                  onChange={(e) => updateIngredient(index, 'preparation', e.target.value)}\n                  placeholder=\"diced, chopped...\"\n                  className=\"w-32 px-2 py-1 border border-gray-300 rounded text-sm focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n                />\n                <button\n                  onClick={() => removeIngredient(index)}\n                  className=\"text-red-600 hover:text-red-800 p-1\"\n                  title=\"Remove ingredient\"\n                >\n                  ×\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Instructions Section */}\n      <div className=\"mb-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h4 className=\"text-lg font-medium text-gray-800\">Instructions</h4>\n          <button\n            onClick={addStep}\n            className=\"bg-indigo-600 text-white px-3 py-1 rounded text-sm hover:bg-indigo-700 transition-colors\"\n          >\n            Add Step\n          </button>\n        </div>\n        \n        {steps.length === 0 ? (\n          <p className=\"text-gray-500 text-center py-4\">No steps added yet. Click \"Add Step\" to start.</p>\n        ) : (\n          <div className=\"space-y-3\">\n            {steps.map((step, index) => (\n              <div key={index} className=\"flex gap-3 items-start bg-gray-50 p-3 rounded\">\n                <span className=\"bg-indigo-600 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm font-medium mt-1\">\n                  {step.step}\n                </span>\n                <textarea\n                  value={step.instruction}\n                  onChange={(e) => updateStep(index, 'instruction', e.target.value)}\n                  placeholder=\"Describe this step...\"\n                  rows={2}\n                  className=\"flex-1 px-2 py-1 border border-gray-300 rounded text-sm focus:outline-none focus:ring-1 focus:ring-indigo-500 resize-none\"\n                />\n                <input\n                  type=\"text\"\n                  value={step.timing || ''}\n                  onChange={(e) => updateStep(index, 'timing', e.target.value)}\n                  placeholder=\"5 min\"\n                  className=\"w-20 px-2 py-1 border border-gray-300 rounded text-sm focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n                />\n                <button\n                  onClick={() => removeStep(index)}\n                  className=\"text-red-600 hover:text-red-800 p-1\"\n                  title=\"Remove step\"\n                >\n                  ×\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Save Button */}\n      <div className=\"flex justify-end\">\n        <button\n          onClick={saveRecipe}\n          disabled={!isRecipeValid}\n          className=\"bg-green-600 text-white px-6 py-2 rounded font-medium hover:bg-green-700 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed\"\n        >\n          Save Recipe\n        </button>\n      </div>\n\n      {/* Recipe Summary */}\n      {recipeSummary.name && recipeSummary.ingredientCount > 0 && (\n        <div className=\"mt-6 p-4 bg-indigo-50 rounded-lg\">\n          <h5 className=\"font-medium text-indigo-800 mb-2\">Recipe Summary</h5>\n          <div className=\"text-sm text-indigo-700\">\n            <p><strong>{recipeSummary.name}</strong></p>\n            <p>Serves {recipeSummary.servings} • Total time: {recipeSummary.totalTime} minutes</p>\n            <p>{recipeSummary.ingredientCount} ingredients • {recipeSummary.stepCount} steps</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default RecipeBuilderSimple;"],"version":3}