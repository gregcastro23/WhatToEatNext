{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/components/fallbacks/ComponentFallbacks.tsx","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/components/fallbacks/ComponentFallbacks.tsx"],"sourcesContent":["'use client';\n\nimport React, { memo } from 'react';\nimport {\n  RefreshCw,\n  AlertCircle,\n  Wifi,\n  Database,\n  Utensils,\n  ChefHat,\n  BookOpen,\n} from 'lucide-react';\n\ninterface FallbackProps {\n  onRetry?: () => void;\n  error?: Error;\n  componentName?: string;\n  showRetry?: boolean;\n  showDetails?: boolean;\n}\n\n// Generic fallback component\nexport const GenericFallback = memo(function GenericFallback({\n  onRetry,\n  error,\n  componentName = 'Component',\n  showRetry = true,\n  showDetails = false,\n}: FallbackProps) {\n  return (\n    <div className='bg-gray-50 border border-gray-200 rounded-lg p-6 text-center'>\n      <AlertCircle className='mx-auto h-12 w-12 text-gray-400 mb-4' />\n      <h3 className='text-lg font-medium text-gray-900 mb-2'>\n        {componentName} Unavailable\n      </h3>\n      <p className='text-gray-600 mb-4'>\n        We're having trouble loading this section. Please try again.\n      </p>\n\n      {showDetails && error && (\n        <details className='mb-4 text-left'>\n          <summary className='cursor-pointer text-gray-500 text-sm mb-2'>\n            Technical Details\n          </summary>\n          <div className='bg-gray-100 p-3 rounded text-xs font-mono text-gray-700'>\n            {error.message}\n          </div>\n        </details>\n      )}\n\n      {showRetry && onRetry && (\n        <button\n          onClick={onRetry}\n          className='inline-flex items-center px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700 transition-colors'\n        >\n          <RefreshCw className='w-4 h-4 mr-2' />\n          Try Again\n        </button>\n      )}\n    </div>\n  );\n});\n\n// Cuisine Recommender fallback\nexport const CuisineRecommenderFallback = memo(\n  function CuisineRecommenderFallback({\n    onRetry,\n    showRetry = true,\n  }: Omit<FallbackProps, 'componentName'>) {\n    return (\n      <div className='bg-orange-50 border border-orange-200 rounded-lg p-6'>\n        <div className='flex items-center justify-center mb-4'>\n          <Utensils className='h-12 w-12 text-orange-400' />\n        </div>\n        <h3 className='text-lg font-medium text-orange-900 text-center mb-2'>\n          Cuisine Recommendations Unavailable\n        </h3>\n        <p className='text-orange-700 text-center mb-4'>\n          We're having trouble connecting to our culinary database. Here are\n          some popular options while we fix this:\n        </p>\n\n        {/* Fallback cuisine suggestions */}\n        <div className='grid grid-cols-2 md:grid-cols-3 gap-3 mb-4'>\n          {[\n            'Italian',\n            'Chinese',\n            'Mexican',\n            'Indian',\n            'Thai',\n            'Mediterranean',\n          ].map(cuisine => (\n            <div\n              key={cuisine}\n              className='bg-white p-3 rounded border text-center'\n            >\n              <span className='text-sm font-medium text-gray-700'>\n                {cuisine}\n              </span>\n            </div>\n          ))}\n        </div>\n\n        {showRetry && onRetry && (\n          <div className='text-center'>\n            <button\n              onClick={onRetry}\n              className='inline-flex items-center px-4 py-2 bg-orange-600 text-white rounded hover:bg-orange-700 transition-colors'\n            >\n              <RefreshCw className='w-4 h-4 mr-2' />\n              Reload Recommendations\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\n// Ingredient Recommender fallback\nexport const IngredientRecommenderFallback = memo(\n  function IngredientRecommenderFallback({\n    onRetry,\n    showRetry = true,\n  }: Omit<FallbackProps, 'componentName'>) {\n    return (\n      <div className='bg-green-50 border border-green-200 rounded-lg p-6'>\n        <div className='flex items-center justify-center mb-4'>\n          <Database className='h-12 w-12 text-green-400' />\n        </div>\n        <h3 className='text-lg font-medium text-green-900 text-center mb-2'>\n          Ingredient Recommendations Unavailable\n        </h3>\n        <p className='text-green-700 text-center mb-4'>\n          Our ingredient database is temporarily unavailable. Here are some\n          versatile ingredients to consider:\n        </p>\n\n        {/* Fallback ingredient suggestions */}\n        <div className='grid grid-cols-2 md:grid-cols-4 gap-2 mb-4'>\n          {[\n            'Onions',\n            'Garlic',\n            'Tomatoes',\n            'Bell Peppers',\n            'Olive Oil',\n            'Salt',\n            'Black Pepper',\n            'Herbs',\n          ].map(ingredient => (\n            <div\n              key={ingredient}\n              className='bg-white p-2 rounded border text-center'\n            >\n              <span className='text-xs font-medium text-gray-700'>\n                {ingredient}\n              </span>\n            </div>\n          ))}\n        </div>\n\n        {showRetry && onRetry && (\n          <div className='text-center'>\n            <button\n              onClick={onRetry}\n              className='inline-flex items-center px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors'\n            >\n              <RefreshCw className='w-4 h-4 mr-2' />\n              Reload Ingredients\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\n// Cooking Methods fallback\nexport const CookingMethodsFallback = memo(function CookingMethodsFallback({\n  onRetry,\n  showRetry = true,\n}: Omit<FallbackProps, 'componentName'>) {\n  return (\n    <div className='bg-blue-50 border border-blue-200 rounded-lg p-6'>\n      <div className='flex items-center justify-center mb-4'>\n        <ChefHat className='h-12 w-12 text-blue-400' />\n      </div>\n      <h3 className='text-lg font-medium text-blue-900 text-center mb-2'>\n        Cooking Methods Unavailable\n      </h3>\n      <p className='text-blue-700 text-center mb-4'>\n        We're having trouble loading cooking methods. Here are some fundamental\n        techniques:\n      </p>\n\n      {/* Fallback cooking methods */}\n      <div className='grid grid-cols-2 md:grid-cols-3 gap-3 mb-4'>\n        {[\n          'Sautéing',\n          'Roasting',\n          'Steaming',\n          'Grilling',\n          'Braising',\n          'Stir-frying',\n        ].map(method => (\n          <div key={method} className='bg-white p-3 rounded border text-center'>\n            <span className='text-sm font-medium text-gray-700'>{method}</span>\n          </div>\n        ))}\n      </div>\n\n      {showRetry && onRetry && (\n        <div className='text-center'>\n          <button\n            onClick={onRetry}\n            className='inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors'\n          >\n            <RefreshCw className='w-4 h-4 mr-2' />\n            Reload Methods\n          </button>\n        </div>\n      )}\n    </div>\n  );\n});\n\n// Recipe Builder fallback\nexport const RecipeBuilderFallback = memo(function RecipeBuilderFallback({\n  onRetry,\n  showRetry = true,\n}: Omit<FallbackProps, 'componentName'>) {\n  return (\n    <div className='bg-purple-50 border border-purple-200 rounded-lg p-6'>\n      <div className='flex items-center justify-center mb-4'>\n        <BookOpen className='h-12 w-12 text-purple-400' />\n      </div>\n      <h3 className='text-lg font-medium text-purple-900 text-center mb-2'>\n        Recipe Builder Unavailable\n      </h3>\n      <p className='text-purple-700 text-center mb-4'>\n        The recipe builder is temporarily unavailable. You can still plan your\n        cooking manually:\n      </p>\n\n      {/* Fallback recipe planning tips */}\n      <div className='bg-white p-4 rounded border mb-4'>\n        <h4 className='font-medium text-gray-900 mb-2'>\n          Quick Recipe Planning Tips:\n        </h4>\n        <ul className='text-sm text-gray-700 space-y-1'>\n          <li>• Choose your main protein or vegetable</li>\n          <li>• Select complementary seasonings</li>\n          <li>• Pick a cooking method that suits your ingredients</li>\n          <li>• Consider timing for each component</li>\n        </ul>\n      </div>\n\n      {showRetry && onRetry && (\n        <div className='text-center'>\n          <button\n            onClick={onRetry}\n            className='inline-flex items-center px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700 transition-colors'\n          >\n            <RefreshCw className='w-4 h-4 mr-2' />\n            Reload Recipe Builder\n          </button>\n        </div>\n      )}\n    </div>\n  );\n});\n\n// Network error fallback\nexport const NetworkErrorFallback = memo(function NetworkErrorFallback({\n  onRetry,\n  componentName = 'Content',\n  showRetry = true,\n}: FallbackProps) {\n  return (\n    <div className='bg-red-50 border border-red-200 rounded-lg p-6 text-center'>\n      <Wifi className='mx-auto h-12 w-12 text-red-400 mb-4' />\n      <h3 className='text-lg font-medium text-red-900 mb-2'>\n        Connection Problem\n      </h3>\n      <p className='text-red-700 mb-4'>\n        We're having trouble connecting to our servers. Please check your\n        internet connection and try again.\n      </p>\n\n      <div className='bg-white p-3 rounded border mb-4'>\n        <p className='text-sm text-gray-600'>\n          <strong>Troubleshooting:</strong>\n        </p>\n        <ul className='text-xs text-gray-500 mt-1 text-left'>\n          <li>• Check your internet connection</li>\n          <li>• Try refreshing the page</li>\n          <li>• Disable any ad blockers temporarily</li>\n          <li>• Try again in a few minutes</li>\n        </ul>\n      </div>\n\n      {showRetry && onRetry && (\n        <button\n          onClick={onRetry}\n          className='inline-flex items-center px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors'\n        >\n          <RefreshCw className='w-4 h-4 mr-2' />\n          Try Again\n        </button>\n      )}\n    </div>\n  );\n});\n\n// Loading fallback with skeleton\nexport const LoadingFallback = memo(function LoadingFallback({\n  componentName = 'Content',\n}: Pick<FallbackProps, 'componentName'>) {\n  return (\n    <div className='bg-gray-50 rounded-lg p-6'>\n      <div className='animate-pulse'>\n        <div className='flex items-center mb-4'>\n          <div className='rounded-full bg-gray-300 h-8 w-8 mr-3'></div>\n          <div className='h-4 bg-gray-300 rounded w-1/4'></div>\n        </div>\n\n        <div className='space-y-3'>\n          <div className='h-4 bg-gray-300 rounded w-3/4'></div>\n          <div className='h-4 bg-gray-300 rounded w-1/2'></div>\n          <div className='h-4 bg-gray-300 rounded w-5/6'></div>\n        </div>\n\n        <div className='mt-6 grid grid-cols-2 md:grid-cols-3 gap-4'>\n          {[1, 2, 3, 4, 5, 6].map(i => (\n            <div key={i} className='h-20 bg-gray-300 rounded'></div>\n          ))}\n        </div>\n      </div>\n\n      <div className='text-center mt-4'>\n        <p className='text-gray-500 text-sm'>Loading {componentName}...</p>\n      </div>\n    </div>\n  );\n});\n\n// Maintenance mode fallback\nexport const MaintenanceFallback = memo(function MaintenanceFallback({\n  componentName = 'Service',\n}: Pick<FallbackProps, 'componentName'>) {\n  return (\n    <div className='bg-yellow-50 border border-yellow-200 rounded-lg p-6 text-center'>\n      <div className='mx-auto h-12 w-12 text-yellow-400 mb-4'>🔧</div>\n      <h3 className='text-lg font-medium text-yellow-900 mb-2'>\n        Temporary Maintenance\n      </h3>\n      <p className='text-yellow-700 mb-4'>\n        {componentName} is currently undergoing maintenance. We'll be back\n        shortly!\n      </p>\n\n      <div className='bg-white p-3 rounded border'>\n        <p className='text-sm text-gray-600'>\n          Expected completion: <strong>Within 15 minutes</strong>\n        </p>\n      </div>\n    </div>\n  );\n});\n\n// Export all fallbacks\nexport const ComponentFallbacks = {\n  Generic: GenericFallback,\n  CuisineRecommender: CuisineRecommenderFallback,\n  IngredientRecommender: IngredientRecommenderFallback,\n  CookingMethods: CookingMethodsFallback,\n  RecipeBuilder: RecipeBuilderFallback,\n  NetworkError: NetworkErrorFallback,\n  Loading: LoadingFallback,\n  Maintenance: MaintenanceFallback,\n};\n\nexport default ComponentFallbacks;\n"],"version":3}