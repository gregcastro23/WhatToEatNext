{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/utils/elementalUtils.test.ts","mappings":";AAAA,6CAA6C;;AAE7C,2DAAwD;AAGxD,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,MAAM,UAAU,GAAwB;QACtC,IAAI,EAAE,IAAI;QACV,KAAK,EAAE,IAAI;QACX,GAAG,EAAE,IAAI;QACT,KAAK,EAAE,IAAI;KACZ,CAAC;IAEF,MAAM,YAAY,GAAwB;QACxC,IAAI,EAAE,GAAG;QACT,KAAK,EAAE,GAAG;QACV,GAAG,EAAE,GAAG;QACR,KAAK,EAAE,GAAG,CAAE,UAAU;KACvB,CAAC;IAEF,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAClC,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;YACtD,MAAM,CAAC,+BAAc,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACpD,MAAM,CAAC,+BAAc,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACnC,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;YACjD,MAAM,UAAU,GAAG,+BAAc,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;YACpE,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAI,GAAc,EAAE,CAAC,CAAC,CAAC;YACrF,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wCAAwC,EAAE,GAAG,EAAE;YAChD,MAAM,UAAU,GAAG;gBACjB,IAAI,EAAE,CAAC;gBACP,KAAK,EAAE,CAAC;gBACR,GAAG,EAAE,CAAC;gBACN,KAAK,EAAE,CAAC;aACT,CAAC;YACF,MAAM,UAAU,GAAG,+BAAc,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;YAClE,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/utils/elementalUtils.test.ts"],"sourcesContent":["// src/__tests__/utils/elementalUtils.test.ts\n\nimport { elementalUtils } from '@/utils/elementalUtils';\nimport type { ElementalProperties } from '@/types/alchemy';\n\ndescribe('elementalUtils', () => {\n  const validProps: ElementalProperties = {\n    Fire: 0.25,\n    Water: 0.25,\n    Air: 0.25,\n    Earth: 0.25\n  };\n\n  const invalidProps: ElementalProperties = {\n    Fire: 0.5,\n    Water: 0.5,\n    Air: 0.5,\n    Earth: 0.5  // Sum > 1\n  };\n\n  describe('validateProperties', () => {\n    it('should validate correct elemental properties', () => {\n      expect(elementalUtils.validateProperties(validProps)).toBe(true);\n    });\n\n    it('should reject invalid elemental properties', () => {\n      expect(elementalUtils.validateProperties(invalidProps)).toBe(false);\n    });\n  });\n\n  describe('normalizeProperties', () => {\n    it('should normalize properties to sum to 1', () => {\n      const normalized = elementalUtils.normalizeProperties(invalidProps);\n      const sum = Object.values(normalized).reduce((acc, val) => acc + (val as number), 0);\n      expect(Math.abs(sum - 1)).toBeLessThan(0.000001);\n    });\n\n    it('should handle empty or zero properties', () => {\n      const emptyProps = {\n        Fire: 0,\n        Water: 0,\n        Air: 0,\n        Earth: 0\n      };\n      const normalized = elementalUtils.normalizeProperties(emptyProps);\n      expect(normalized.Fire).toBe(0.25);\n      expect(normalized.Water).toBe(0.25);\n      expect(normalized.Air).toBe(0.25);\n      expect(normalized.Earth).toBe(0.25);\n    });\n  });\n});"],"version":3}