{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/data/zodiacSeasons.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/data/zodiacSeasons.ts"],"sourcesContent":["import { ZodiacSign, Element } from '@/types/alchemy';\n\n// Define the interface for zodiac season data\ninterface ZodiacSeasonData {\n  name: ZodiacSign;\n  element: Element;\n  startMonth: number; // 1-based month (1 = January)\n  startDay: number;\n  endMonth: number; \n  endDay: number;\n  ruling_planet: string;\n  polarity: 'positive' | 'negative';\n  modality: 'cardinal' | 'fixed' | 'mutable';\n  // Culinary properties specific to this zodiac period\n  culinaryProperties: {\n    flavorProfile: string[];\n    enhancedTechniques: string[];\n    foodGroups: string[];\n    herbs: string[];\n    spices: string[];\n  };\n}\n\n// Define the zodiac seasons with their properties\nexport const zodiacSeasons: Record<ZodiacSign, ZodiacSeasonData> = {\n  'aries': {\n    name: 'aries',\n    element: 'Fire',\n    startMonth: 3,\n    startDay: 21,\n    endMonth: 4,\n    endDay: 19,\n    ruling_planet: 'Mars',\n    polarity: 'positive',\n    modality: 'cardinal',\n    culinaryProperties: {\n      flavorProfile: ['spicy', 'bold', 'intense'],\n      enhancedTechniques: ['grilling', 'broiling', 'searing'],\n      foodGroups: ['proteins', 'red meats', 'red vegetables'],\n      herbs: ['cayenne', 'chili', 'pepper'],\n      spices: ['paprika', 'hot pepper', 'cumin']\n    }\n  },\n  'taurus': {\n    name: 'taurus',\n    element: 'Earth',\n    startMonth: 4,\n    startDay: 20,\n    endMonth: 5,\n    endDay: 20,\n    ruling_planet: 'Venus',\n    polarity: 'negative',\n    modality: 'fixed',\n    culinaryProperties: {\n      flavorProfile: ['rich', 'indulgent', 'sweet'],\n      enhancedTechniques: ['slow-cooking', 'baking', 'roasting'],\n      foodGroups: ['root vegetables', 'dairy', 'grains'],\n      herbs: ['thyme', 'rosemary', 'sage'],\n      spices: ['nutmeg', 'cinnamon', 'vanilla']\n    }\n  },\n  'gemini': {\n    name: 'gemini',\n    element: 'Air',\n    startMonth: 5,\n    startDay: 21,\n    endMonth: 6,\n    endDay: 20,\n    ruling_planet: 'Mercury',\n    polarity: 'positive',\n    modality: 'mutable',\n    culinaryProperties: {\n      flavorProfile: ['light', 'varied', 'aromatic'],\n      enhancedTechniques: ['stir-frying', 'fusion cooking', 'layering flavors'],\n      foodGroups: ['leafy greens', 'berries', 'diverse ingredients'],\n      herbs: ['mint', 'dill', 'parsley'],\n      spices: ['ginger', 'lemongrass', 'cardamom']\n    }\n  },\n  'cancer': {\n    name: 'cancer',\n    element: 'Water',\n    startMonth: 6,\n    startDay: 21,\n    endMonth: 7,\n    endDay: 22,\n    ruling_planet: 'Moon',\n    polarity: 'negative',\n    modality: 'cardinal',\n    culinaryProperties: {\n      flavorProfile: ['creamy', 'comforting', 'moist'],\n      enhancedTechniques: ['steaming', 'poaching', 'braising'],\n      foodGroups: ['seafood', 'dairy', 'squash'],\n      herbs: ['basil', 'tarragon', 'dill'],\n      spices: ['saffron', 'turmeric', 'clove']\n    }\n  },\n  'leo': {\n    name: 'leo',\n    element: 'Fire',\n    startMonth: 7,\n    startDay: 23,\n    endMonth: 8,\n    endDay: 22,\n    ruling_planet: 'Sun',\n    polarity: 'positive',\n    modality: 'fixed',\n    culinaryProperties: {\n      flavorProfile: ['rich', 'dramatic', 'bold'],\n      enhancedTechniques: ['open-flame cooking', 'caramelizing', 'roasting'],\n      foodGroups: ['yellow/orange fruits', 'hearty proteins', 'golden foods'],\n      herbs: ['bay leaf', 'oregano', 'saffron'],\n      spices: ['turmeric', 'curry', 'cinnamon']\n    }\n  },\n  'virgo': {\n    name: 'virgo',\n    element: 'Earth',\n    startMonth: 8,\n    startDay: 23,\n    endMonth: 9,\n    endDay: 22,\n    ruling_planet: 'Mercury',\n    polarity: 'negative',\n    modality: 'mutable',\n    culinaryProperties: {\n      flavorProfile: ['precise', 'fresh', 'pure'],\n      enhancedTechniques: ['fermentation', 'precision cooking', 'meal prep'],\n      foodGroups: ['whole grains', 'vegetables', 'legumes'],\n      herbs: ['cilantro', 'fennel', 'marjoram'],\n      spices: ['cumin', 'coriander', 'caraway']\n    }\n  },\n  'libra': {\n    name: 'libra',\n    element: 'Air',\n    startMonth: 9,\n    startDay: 23,\n    endMonth: 10,\n    endDay: 22,\n    ruling_planet: 'Venus',\n    polarity: 'positive',\n    modality: 'cardinal',\n    culinaryProperties: {\n      flavorProfile: ['balanced', 'harmonious', 'elegant'],\n      enhancedTechniques: ['plating', 'pairing', 'mixing'],\n      foodGroups: ['white/pastel foods', 'artisan ingredients', 'balanced meals'],\n      herbs: ['lavender', 'lemon balm', 'mint'],\n      spices: ['rose', 'star anise', 'allspice']\n    }\n  },\n  'scorpio': {\n    name: 'scorpio',\n    element: 'Water',\n    startMonth: 10,\n    startDay: 23,\n    endMonth: 11,\n    endDay: 21,\n    ruling_planet: 'Pluto',\n    polarity: 'negative',\n    modality: 'fixed',\n    culinaryProperties: {\n      flavorProfile: ['intense', 'complex', 'deep'],\n      enhancedTechniques: ['fermenting', 'slow-cooking', 'smoking'],\n      foodGroups: ['dark foods', 'mollusks', 'nightshades'],\n      herbs: ['nettle', 'basil', 'black cumin'],\n      spices: ['black pepper', 'fenugreek', 'star anise']\n    }\n  },\n  'sagittarius': {\n    name: 'sagittarius',\n    element: 'Fire',\n    startMonth: 11,\n    startDay: 22,\n    endMonth: 12,\n    endDay: 21,\n    ruling_planet: 'Jupiter',\n    polarity: 'positive',\n    modality: 'mutable',\n    culinaryProperties: {\n      flavorProfile: ['adventurous', 'expansive', 'exotic'],\n      enhancedTechniques: ['international cooking', 'fusion', 'experimental'],\n      foodGroups: ['wild game', 'tropical fruits', 'international cuisine'],\n      herbs: ['sage', 'lemongrass', 'cilantro'],\n      spices: ['saffron', 'cardamom', 'exotic blends']\n    }\n  },\n  'capricorn': {\n    name: 'capricorn',\n    element: 'Earth',\n    startMonth: 12,\n    startDay: 22,\n    endMonth: 1,\n    endDay: 19,\n    ruling_planet: 'Saturn',\n    polarity: 'negative',\n    modality: 'cardinal',\n    culinaryProperties: {\n      flavorProfile: ['traditional', 'structured', 'earthy'],\n      enhancedTechniques: ['aging', 'preservation', 'traditional methods'],\n      foodGroups: ['root vegetables', 'aged cheeses', 'preserved foods'],\n      herbs: ['rosemary', 'thyme', 'winter herbs'],\n      spices: ['allspice', 'cloves', 'black pepper']\n    }\n  },\n  'aquarius': {\n    name: 'aquarius',\n    element: 'Air',\n    startMonth: 1,\n    startDay: 20,\n    endMonth: 2,\n    endDay: 18,\n    ruling_planet: 'Uranus',\n    polarity: 'positive',\n    modality: 'fixed',\n    culinaryProperties: {\n      flavorProfile: ['unexpected', 'innovative', 'unique'],\n      enhancedTechniques: ['molecular gastronomy', 'avant-garde', 'unexpected pairings'],\n      foodGroups: ['unusual vegetables', 'meat alternatives', 'fusion ingredients'],\n      herbs: ['lemon verbena', 'sorrel', 'uncommon herbs'],\n      spices: ['szechuan pepper', 'sumac', 'unusual spice blends']\n    }\n  },\n  'pisces': {\n    name: 'pisces',\n    element: 'Water',\n    startMonth: 2,\n    startDay: 19,\n    endMonth: 3,\n    endDay: 20,\n    ruling_planet: 'Neptune',\n    polarity: 'negative',\n    modality: 'mutable',\n    culinaryProperties: {\n      flavorProfile: ['ethereal', 'subtle', 'delicate'],\n      enhancedTechniques: ['infusing', 'poaching', 'gentle cooking'],\n      foodGroups: ['seafood', 'white fish', 'oceanic ingredients'],\n      herbs: ['dill', 'fennel', 'tarragon'],\n      spices: ['white pepper', 'anise', 'saffron']\n    }\n  }\n};\n\n/**\n * Get the zodiac sign for a given date\n * @param date Date to get zodiac sign for\n * @returns The zodiac sign for the given date\n */\nexport function getZodiacSignForDate(date: Date): ZodiacSign {\n  const month = date.getMonth() + 1; // JavaScript months are 0-indexed\n  const day = date.getDate();\n  \n  // Check each zodiac sign's date range\n  if ((month === 3 && day >= 21) || (month === 4 && day <= 19)) {\n    return 'aries';\n  } else if ((month === 4 && day >= 20) || (month === 5 && day <= 20)) {\n    return 'taurus';\n  } else if ((month === 5 && day >= 21) || (month === 6 && day <= 20)) {\n    return 'gemini';\n  } else if ((month === 6 && day >= 21) || (month === 7 && day <= 22)) {\n    return 'cancer';\n  } else if ((month === 7 && day >= 23) || (month === 8 && day <= 22)) {\n    return 'leo';\n  } else if ((month === 8 && day >= 23) || (month === 9 && day <= 22)) {\n    return 'virgo';\n  } else if ((month === 9 && day >= 23) || (month === 10 && day <= 22)) {\n    return 'libra';\n  } else if ((month === 10 && day >= 23) || (month === 11 && day <= 21)) {\n    return 'scorpio';\n  } else if ((month === 11 && day >= 22) || (month === 12 && day <= 21)) {\n    return 'sagittarius';\n  } else if ((month === 12 && day >= 22) || (month === 1 && day <= 19)) {\n    return 'capricorn';\n  } else if ((month === 1 && day >= 20) || (month === 2 && day <= 18)) {\n    return 'aquarius';\n  } else {\n    return 'pisces'; // Feb 19 - Mar 20\n  }\n}\n\n/**\n * Get the current zodiac sign based on today's date\n * @returns The current zodiac sign\n */\nexport function getCurrentZodiacSign(): ZodiacSign {\n  return getZodiacSignForDate(new Date());\n}\n\n/**\n * Get the element associated with a zodiac sign\n * @param sign The zodiac sign\n * @returns The element (Fire, Earth, Air, Water)\n */\nexport function getElementForZodiacSign(sign: ZodiacSign): Element {\n  return zodiacSeasons[sign].element;\n}\n\n/**\n * Get the ruling planet for a zodiac sign\n * @param sign The zodiac sign\n * @returns The ruling planet\n */\nexport function getRulingPlanetForZodiacSign(sign: ZodiacSign): string {\n  return zodiacSeasons[sign].ruling_planet;\n} "],"version":3}