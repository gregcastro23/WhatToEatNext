{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/constants/seasonalModifiers.ts","mappings":";;;AACA,wDAAqD;AAOrD,0EAA0E;AAC1E,SAAS,iCAAiC,CAAC,eAAuB;IAChE,OAAO;QACL,IAAI,EAAE,eAAe,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,KAAK,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;QAClH,KAAK,EAAE,eAAe,KAAK,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,KAAK,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;QACpH,KAAK,EAAE,eAAe,KAAK,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,KAAK,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;QACrH,GAAG,EAAE,eAAe,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,KAAK,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;KAClH,CAAC;AACJ,CAAC;AAED,2CAA2C;AAC9B,QAAA,gBAAgB,GAA2B,MAAM,CAAC,OAAO,CAAC,6BAAa,CAAC,CAAC,MAAM,CAC1F,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;IACpB,GAAG,CAAC,IAAkB,CAAC,GAAG,iCAAiC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1E,OAAO,GAAG,CAAC;AACb,CAAC,EACD,EAA4B,CAC7B,CAAC;AAWF,uDAAuD;AAC1C,QAAA,kBAAkB,GAAsB;IACnD,MAAM,EAAE,iCAAiC,CAAC,KAAK,CAAC;IAChD,MAAM,EAAE,iCAAiC,CAAC,MAAM,CAAC;IACjD,MAAM,EAAE,iCAAiC,CAAC,OAAO,CAAC;IAClD,MAAM,EAAE,iCAAiC,CAAC,OAAO,CAAC;IAClD,qEAAqE;IACrE,IAAI,EAAE,iCAAiC,CAAC,OAAO,CAAC;IAChD,+DAA+D;IAC/D,GAAG,wBAAgB;CACpB,CAAC;AAEF,sEAAsE;AACzD,QAAA,kBAAkB,GAAG;IAChC,yCAAyC;IACzC,QAAQ,EAAE;QACR,MAAM,EAAE,GAAG;QACX,MAAM,EAAE,GAAG;QACX,MAAM,EAAE,GAAG;QACX,MAAM,EAAE,GAAG;KACZ;IACD,qCAAqC;IACrC,cAAc,EAAE;QACd,MAAM,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAE;QAC7E,MAAM,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAE;QAC7E,MAAM,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAE;QAC7E,MAAM,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAE;KAC9E;CACF,CAAC;AAEF,kBAAe,0BAAkB,CAAC","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/constants/seasonalModifiers.ts"],"sourcesContent":["import { ZodiacSign, ElementalProperties } from '@/types/alchemy';\nimport { zodiacSeasons } from '@/data/zodiacSeasons';\n\n// Create element modifiers based on zodiac sign's element\ntype ZodiacElementModifiers = {\n  [key in ZodiacSign]: ElementalProperties;\n};\n\n// Helper function to create elemental modifiers based on dominant element\nfunction createElementalModifiersForZodiac(dominantElement: string): ElementalProperties {\n  return {\n    Fire: dominantElement === 'Fire' ? 0.8 : dominantElement === 'Air' ? 0.6 : dominantElement === 'Earth' ? 0.3 : 0.2,\n    Water: dominantElement === 'Water' ? 0.8 : dominantElement === 'Earth' ? 0.6 : dominantElement === 'Air' ? 0.3 : 0.2,\n    Earth: dominantElement === 'Earth' ? 0.8 : dominantElement === 'Water' ? 0.6 : dominantElement === 'Fire' ? 0.3 : 0.2,\n    Air: dominantElement === 'Air' ? 0.8 : dominantElement === 'Fire' ? 0.6 : dominantElement === 'Water' ? 0.3 : 0.2\n  };\n}\n\n// Build the modifiers for each zodiac sign\nexport const ZODIAC_MODIFIERS: ZodiacElementModifiers = Object.entries(zodiacSeasons).reduce(\n  (acc, [sign, data]) => {\n    acc[sign as ZodiacSign] = createElementalModifiersForZodiac(data.element);\n    return acc;\n  }, \n  {} as ZodiacElementModifiers\n);\n\n// Define a type with string index signature for SEASONAL_MODIFIERS\nexport interface SeasonalModifiers {\n  spring: ElementalProperties;\n  summer: ElementalProperties;\n  autumn: ElementalProperties;\n  winter: ElementalProperties;\n  [key: string]: ElementalProperties; // Allow string indexing for zodiac signs and any other keys\n}\n\n// For backward compatibility with the old season names\nexport const SEASONAL_MODIFIERS: SeasonalModifiers = {\n  spring: createElementalModifiersForZodiac('Air'),\n  summer: createElementalModifiersForZodiac('Fire'),\n  autumn: createElementalModifiersForZodiac('Earth'),\n  winter: createElementalModifiersForZodiac('Water'),\n  // Add fall as an alias for autumn to maintain backward compatibility\n  fall: createElementalModifiersForZodiac('Earth'),\n  // Add zodiac signs to the seasonal modifiers for direct access\n  ...ZODIAC_MODIFIERS\n};\n\n// Influence of seasonal factors on food preferences and energy levels\nexport const SEASONAL_INFLUENCE = {\n  // Each season's influence strength (0-1)\n  strength: {\n    spring: 0.7,\n    summer: 0.9,\n    autumn: 0.6,\n    winter: 0.8\n  },\n  // How seasons affect mood and energy\n  energyModifier: {\n    spring: { vitality: 0.6, creativity: 0.7, stability: 0.4, adaptability: 0.8 },\n    summer: { vitality: 0.9, creativity: 0.8, stability: 0.5, adaptability: 0.6 },\n    autumn: { vitality: 0.5, creativity: 0.6, stability: 0.8, adaptability: 0.5 },\n    winter: { vitality: 0.4, creativity: 0.5, stability: 0.7, adaptability: 0.4 }\n  }\n};\n\nexport default SEASONAL_MODIFIERS; "],"version":3}