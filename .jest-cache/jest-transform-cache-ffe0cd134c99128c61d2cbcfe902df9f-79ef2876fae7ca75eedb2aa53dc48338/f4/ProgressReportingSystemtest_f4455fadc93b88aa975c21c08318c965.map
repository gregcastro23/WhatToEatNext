{"file":"/Users/GregCastro/Desktop/WhatToEatNext/backups/conservative-wave-2025-08-11T05-21-33-410Z/src/services/campaign/ProgressReportingSystem.test.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/backups/conservative-wave-2025-08-11T05-21-33-410Z/src/services/campaign/ProgressReportingSystem.test.ts"],"sourcesContent":["/**\n * Progress Reporting System Tests\n * Perfect Codebase Campaign - Comprehensive Testing\n */\n\nimport * as fs from 'fs';\n\nimport { PhaseStatus } from '../../types/campaign';\n\nimport { MetricsCollectionSystem } from './MetricsCollectionSystem';\nimport { MilestoneValidationSystem } from './MilestoneValidationSystem';\nimport { CampaignStatus, CampaignSummaryReport, ProgressReportingSystem } from './ProgressReportingSystem';\n\n// Mock dependencies\njest.mock('./MetricsCollectionSystem');\njest.mock('./MilestoneValidationSystem');\njest.mock('fs');\n\nconst MockMetricsCollectionSystem = MetricsCollectionSystem as jest.MockedClass<typeof MetricsCollectionSystem>;\nconst MockMilestoneValidationSystem = MilestoneValidationSystem as jest.MockedClass<typeof MilestoneValidationSystem>;\nconst mockFs = fs as jest.Mocked<typeof fs>;\n\ndescribe('ProgressReportingSystem', () => {\n  let reportingSystem: ProgressReportingSystem;\n  let mockMetricsCollector: jest.Mocked<MetricsCollectionSystem>;\n  let mockValidationSystem: jest.Mocked<MilestoneValidationSystem>;\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n\n    mockMetricsCollector = new MockMetricsCollectionSystem() as jest.Mocked<MetricsCollectionSystem>;\n    mockValidationSystem = new MockMilestoneValidationSystem() as jest.Mocked<MilestoneValidationSystem>;\n\n    reportingSystem = new ProgressReportingSystem();\n    (reportingSystem as any).metricsCollector = mockMetricsCollector;\n    (reportingSystem as any).validationSystem = mockValidationSystem;\n  });\n\n  describe('Campaign Summary Report Generation', () => {\n    test('should generate comprehensive campaign summary report', async () => {\n      // Mock successful campaign metrics\n      mockMetricsCollector.collectDetailedMetrics.mockResolvedValue({\n        timestamp: new Date(),\n        typeScriptErrors: { current: 0, target: 0, reduction: 86, percentage: 100 },\n        lintingWarnings: { current: 0, target: 0, reduction: 4506, percentage: 100 },\n        buildPerformance: { currentTime: 8, targetTime: 10, cacheHitRate: 0.85, memoryUsage: 45 },\n        enterpriseSystems: { current: 250, target: 200, transformedExports: 250 },\n        errorBreakdown: {},\n        warningBreakdown: {},\n        buildMetrics: {\n          buildTime: 8,\n          bundleSize: 420,\n          cacheHitRate: 0.85,\n          memoryUsage: 45,\n          cpuUsage: 15,\n          diskUsage: 1024,\n          compilationSpeed: 25,\n        },\n        resourceMetrics: {\n          nodeMemoryUsage: process.memoryUsage(),\n          systemMemory: { total: 8192, used: 4096, free: 4096, percentage: 50 },\n          diskSpace: { total: 1000000, used: 500000, free: 500000, percentage: 50 },\n        },\n        trendData: { errorReductionRate: 10, warningReductionRate: 50, buildTimeImprovement: 2, systemGrowthRate: 5 },\n      });\n\n      // Mock successful phase validations\n      mockValidationSystem.validateAllPhases.mockResolvedValue([\n        {\n          phaseId: 'phase1',\n          phaseName: 'TypeScript Error Elimination',\n          overallSuccess: true,\n          completionPercentage: 100,\n          milestones: [\n            {\n              milestone: 'Zero TypeScript Errors',\n              phase: 'phase1',\n              success: true,\n              timestamp: new Date(),\n              metrics: {} as unknown as Record<string, unknown>,\n              criteria: [],\n              failureReasons: [],\n              recommendations: [],\n            },\n          ],\n          criticalFailures: [],\n          nextSteps: ['Phase 1 complete - proceed to Phase 2'],\n        },\n        {\n          phaseId: 'phase2',\n          phaseName: 'Linting Excellence Achievement',\n          overallSuccess: true,\n          completionPercentage: 100,\n          milestones: [\n            {\n              milestone: 'Zero Linting Warnings',\n              phase: 'phase2',\n              success: true,\n              timestamp: new Date(),\n              metrics: {} as unknown as Record<string, unknown>,\n              criteria: [],\n              failureReasons: [],\n              recommendations: [],\n            },\n          ],\n          criticalFailures: [],\n          nextSteps: ['Phase 2 complete - proceed to Phase 3'],\n        },\n        {\n          phaseId: 'phase3',\n          phaseName: 'Enterprise Intelligence Transformation',\n          overallSuccess: true,\n          completionPercentage: 100,\n          milestones: [\n            {\n              milestone: 'Enterprise System Count Target',\n              phase: 'phase3',\n              success: true,\n              timestamp: new Date(),\n              metrics: {} as unknown as Record<string, unknown>,\n              criteria: [],\n              failureReasons: [],\n              recommendations: [],\n            },\n          ],\n          criticalFailures: [],\n          nextSteps: ['Phase 3 complete - proceed to Phase 4'],\n        },\n        {\n          phaseId: 'phase4',\n          phaseName: 'Performance Optimization Maintenance',\n          overallSuccess: true,\n          completionPercentage: 100,\n          milestones: [\n            {\n              milestone: 'Build Performance Targets',\n              phase: 'phase4',\n              success: true,\n              timestamp: new Date(),\n              metrics: {} as unknown as Record<string, unknown>,\n              criteria: [],\n              failureReasons: [],\n              recommendations: [],\n            },\n          ],\n          criticalFailures: [],\n          nextSteps: ['Perfect Codebase Campaign Complete! 🎉'],\n        },\n      ]);\n\n      const report = await reportingSystem.generateCampaignSummaryReport();\n\n      expect(report.campaignId).toBe('perfect-codebase-campaign');\n      expect(report.overallStatus).toBe(CampaignStatus.COMPLETED);\n      expect(report.overallProgress).toBe(100);\n      expect(report.phases).toHaveLength(4);\n      expect(report.keyAchievements.length).toBeGreaterThan(0);\n      expect(report.criticalIssues).toHaveLength(0);\n      expect(report.executiveSummary).toContain('completed successfully');\n    });\n\n    test('should generate report for campaign in progress', async () => {\n      // Mock partial progress metrics\n      mockMetricsCollector.collectDetailedMetrics.mockResolvedValue({\n        timestamp: new Date(),\n        typeScriptErrors: { current: 10, target: 0, reduction: 76, percentage: 88 },\n        lintingWarnings: { current: 500, target: 0, reduction: 4006, percentage: 89 },\n        buildPerformance: { currentTime: 12, targetTime: 10, cacheHitRate: 0.75, memoryUsage: 55 },\n        enterpriseSystems: { current: 150, target: 200, transformedExports: 150 },\n        errorBreakdown: { TS2352: 5, TS2345: 3, TS2698: 2 },\n        warningBreakdown: { '@typescript-eslint/no-explicit-any': 200, 'no-unused-vars': 300 },\n        buildMetrics: {\n          buildTime: 12,\n          bundleSize: 480,\n          cacheHitRate: 0.75,\n          memoryUsage: 55,\n          cpuUsage: 25,\n          diskUsage: 1200,\n          compilationSpeed: 20,\n        },\n        resourceMetrics: {\n          nodeMemoryUsage: process.memoryUsage(),\n          systemMemory: { total: 8192, used: 5120, free: 3072, percentage: 62 },\n          diskSpace: { total: 1000000, used: 600000, free: 400000, percentage: 60 },\n        },\n        trendData: { errorReductionRate: 5, warningReductionRate: 25, buildTimeImprovement: 1, systemGrowthRate: 3 },\n      });\n\n      // Mock mixed phase validations\n      mockValidationSystem.validateAllPhases.mockResolvedValue([\n        {\n          phaseId: 'phase1',\n          phaseName: 'TypeScript Error Elimination',\n          overallSuccess: false,\n          completionPercentage: 88,\n          milestones: [\n            {\n              milestone: 'Zero TypeScript Errors',\n              phase: 'phase1',\n              success: false,\n              timestamp: new Date(),\n              metrics: {} as unknown as Record<string, unknown>,\n              criteria: [],\n              failureReasons: ['10 errors remaining'],\n              recommendations: [],\n            },\n          ],\n          criticalFailures: ['TypeScript Error Count: expected 0, got 10'],\n          nextSteps: ['Continue with Enhanced TypeScript Error Fixer v3.0'],\n        },\n        {\n          phaseId: 'phase2',\n          phaseName: 'Linting Excellence Achievement',\n          overallSuccess: false,\n          completionPercentage: 75,\n          milestones: [],\n          criticalFailures: ['Linting Warning Count: expected 0, got 500'],\n          nextSteps: ['Continue with systematic linting fixes'],\n        },\n        {\n          phaseId: 'phase3',\n          phaseName: 'Enterprise Intelligence Transformation',\n          overallSuccess: false,\n          completionPercentage: 60,\n          milestones: [],\n          criticalFailures: ['Enterprise System Count: expected >= 200, got 150'],\n          nextSteps: ['Continue transforming exports to reach 200+ systems'],\n        },\n        {\n          phaseId: 'phase4',\n          phaseName: 'Performance Optimization Maintenance',\n          overallSuccess: false,\n          completionPercentage: 40,\n          milestones: [],\n          criticalFailures: ['Build Time: expected <= 10s, got 12s'],\n          nextSteps: ['Optimize build performance with caching improvements'],\n        },\n      ]);\n\n      const report = await reportingSystem.generateCampaignSummaryReport();\n\n      expect(report.overallStatus).toBe(CampaignStatus.BLOCKED);\n      expect(report.overallProgress).toBeLessThan(100);\n      expect(report.criticalIssues.length).toBeGreaterThan(0);\n      expect(report.recommendations.length).toBeGreaterThan(0);\n      expect(report.executiveSummary).toContain('currently blocked');\n    });\n  });\n\n  describe('Phase Completion Reports', () => {\n    test('should generate detailed phase completion report', async () => {\n      mockMetricsCollector.collectDetailedMetrics.mockResolvedValue({\n        timestamp: new Date(),\n        typeScriptErrors: { current: 0, target: 0, reduction: 86, percentage: 100 },\n        lintingWarnings: { current: 0, target: 0, reduction: 4506, percentage: 100 },\n        buildPerformance: { currentTime: 8, targetTime: 10, cacheHitRate: 0.85, memoryUsage: 45 },\n        enterpriseSystems: { current: 250, target: 200, transformedExports: 250 },\n        errorBreakdown: {},\n        warningBreakdown: {},\n        buildMetrics: {\n          buildTime: 8,\n          bundleSize: 420,\n          cacheHitRate: 0.85,\n          memoryUsage: 45,\n          cpuUsage: 15,\n          diskUsage: 1024,\n          compilationSpeed: 25,\n        },\n        resourceMetrics: {\n          nodeMemoryUsage: process.memoryUsage(),\n          systemMemory: { total: 8192, used: 4096, free: 4096, percentage: 50 },\n          diskSpace: { total: 1000000, used: 500000, free: 500000, percentage: 50 },\n        },\n        trendData: { errorReductionRate: 10, warningReductionRate: 50, buildTimeImprovement: 2, systemGrowthRate: 5 },\n      });\n\n      mockValidationSystem.validatePhase1.mockResolvedValue({\n        phaseId: 'phase1',\n        phaseName: 'TypeScript Error Elimination',\n        overallSuccess: true,\n        completionPercentage: 100,\n        milestones: [\n          {\n            milestone: 'Zero TypeScript Errors',\n            phase: 'phase1',\n            success: true,\n            timestamp: new Date(),\n            metrics: {} as unknown as Record<string, unknown>,\n            criteria: [],\n            failureReasons: [],\n            recommendations: [],\n          },\n        ],\n        criticalFailures: [],\n        nextSteps: ['Phase 1 complete - proceed to Phase 2'],\n      });\n\n      const report = await reportingSystem.generatePhaseCompletionReport('phase1');\n\n      expect(report.phaseId).toBe('phase1');\n      expect(report.phaseName).toBe('TypeScript Error Elimination');\n      expect(report.status).toBe(PhaseStatus.COMPLETED);\n      expect(report.achievements.length).toBeGreaterThan(0);\n      expect(report.issues).toHaveLength(0);\n    });\n\n    test('should handle invalid phase ID', async () => {\n      await expect(reportingSystem.generatePhaseCompletionReport('invalid-phase')).rejects.toThrow(\n        'Unknown phase: invalid-phase',\n      );\n    });\n  });\n\n  describe('Visualization Data Generation', () => {\n    test('should generate comprehensive visualization data', async () => {\n      // Mock snapshots for time series data\n      mockMetricsCollector.getSnapshots.mockReturnValue([\n        {\n          id: 'snapshot1',\n          timestamp: new Date('2024-01-01'),\n          metrics: {\n            timestamp: new Date('2024-01-01'),\n            typeScriptErrors: { current: 50, target: 0, reduction: 36, percentage: 42 },\n            lintingWarnings: { current: 2000, target: 0, reduction: 2506, percentage: 56 },\n            buildPerformance: { currentTime: 15, targetTime: 10, cacheHitRate: 0.7, memoryUsage: 60 },\n            enterpriseSystems: { current: 100, target: 200, transformedExports: 100 },\n            errorBreakdown: { TS2352: 20, TS2345: 15 },\n            warningBreakdown: { '@typescript-eslint/no-explicit-any': 800 },\n            buildMetrics: {\n              buildTime: 15,\n              bundleSize: 500,\n              cacheHitRate: 0.7,\n              memoryUsage: 60,\n              cpuUsage: 30,\n              diskUsage: 1500,\n              compilationSpeed: 15,\n            },\n            resourceMetrics: {\n              nodeMemoryUsage: process.memoryUsage(),\n              systemMemory: { total: 8192, used: 4915, free: 3277, percentage: 60 },\n              diskSpace: { total: 1000000, used: 600000, free: 400000, percentage: 60 },\n            },\n            trendData: {\n              errorReductionRate: 8,\n              warningReductionRate: 40,\n              buildTimeImprovement: 1.5,\n              systemGrowthRate: 4,\n            },\n          },\n          phase: 'phase1',\n        },\n      ]);\n\n      mockValidationSystem.validateAllPhases.mockResolvedValue([\n        {\n          phaseId: 'phase1',\n          phaseName: 'TypeScript Error Elimination',\n          overallSuccess: false,\n          completionPercentage: 75,\n          milestones: [],\n          criticalFailures: [],\n          nextSteps: [],\n        },\n      ]);\n\n      mockMetricsCollector.collectDetailedMetrics.mockResolvedValue({\n        timestamp: new Date(),\n        typeScriptErrors: { current: 10, target: 0, reduction: 76, percentage: 88 },\n        lintingWarnings: { current: 500, target: 0, reduction: 4006, percentage: 89 },\n        buildPerformance: { currentTime: 12, targetTime: 10, cacheHitRate: 0.75, memoryUsage: 55 },\n        enterpriseSystems: { current: 150, target: 200, transformedExports: 150 },\n        errorBreakdown: { TS2352: 5, TS2345: 3, TS2698: 2 },\n        warningBreakdown: { '@typescript-eslint/no-explicit-any': 200, 'no-unused-vars': 300 },\n        buildMetrics: {\n          buildTime: 12,\n          bundleSize: 480,\n          cacheHitRate: 0.75,\n          memoryUsage: 55,\n          cpuUsage: 25,\n          diskUsage: 1200,\n          compilationSpeed: 20,\n        },\n        resourceMetrics: {\n          nodeMemoryUsage: process.memoryUsage(),\n          systemMemory: { total: 8192, used: 5120, free: 3072, percentage: 62 },\n          diskSpace: { total: 1000000, used: 600000, free: 400000, percentage: 60 },\n        },\n        trendData: { errorReductionRate: 5, warningReductionRate: 25, buildTimeImprovement: 1, systemGrowthRate: 3 },\n      });\n\n      const visualizationData = await reportingSystem.generateVisualizationData();\n\n      expect(visualizationData.timeSeriesData).toHaveLength(1);\n      expect(visualizationData.phaseProgressChart).toHaveLength(1);\n      expect(visualizationData.errorDistributionChart.length).toBeGreaterThan(0);\n      expect(visualizationData.performanceTrendChart).toHaveLength(1);\n\n      // Verify time series data structure\n      const timeSeriesPoint = visualizationData.timeSeriesData[0];\n      expect(timeSeriesPoint.timestamp).toBeInstanceOf(Date);\n      expect(typeof timeSeriesPoint.typeScriptErrors).toBe('number');\n      expect(typeof timeSeriesPoint.lintingWarnings).toBe('number');\n      expect(typeof timeSeriesPoint.buildTime).toBe('number');\n      expect(typeof timeSeriesPoint.enterpriseSystems).toBe('number');\n    });\n  });\n\n  describe('Report Export Functionality', () => {\n    test('should export report in JSON format', async () => {\n      const mockReport: CampaignSummaryReport = {\n        campaignId: 'perfect-codebase-campaign',\n        generatedAt: new Date(),\n        overallStatus: CampaignStatus.IN_PROGRESS,\n        overallProgress: 75,\n        phases: [],\n        keyAchievements: [],\n        criticalIssues: [],\n        performanceMetrics: {\n          typeScriptErrors: { initial: 86, current: 20, reduction: 66, reductionRate: 5 },\n          lintingWarnings: { initial: 4506, current: 1000, reduction: 3506, reductionRate: 25 },\n          buildPerformance: { currentTime: 12, targetTime: 10, improvement: 1, cacheEfficiency: 0.75 },\n          enterpriseSystems: { initial: 0, current: 150, target: 200, growthRate: 3 },\n        },\n        recommendations: [],\n        estimatedCompletion: new Date(),\n        executiveSummary: 'Campaign in progress',\n      };\n\n      mockFs.writeFileSync.mockImplementation();\n\n      const exportedFiles = await reportingSystem.exportReport(mockReport, ['json']);\n\n      expect(exportedFiles).toHaveLength(1);\n      expect(exportedFiles[0]).toMatch(/campaign-report-.*\\.json$/);\n      expect(mockFs.writeFileSync).toHaveBeenCalledWith(\n        expect.stringMatching(/campaign-report-.*\\.json$/),\n        expect.stringContaining('\"campaignId\": \"perfect-codebase-campaign\"'),\n      );\n    });\n\n    test('should export report in multiple formats', async () => {\n      const mockReport: CampaignSummaryReport = {\n        campaignId: 'perfect-codebase-campaign',\n        generatedAt: new Date(),\n        overallStatus: CampaignStatus.COMPLETED,\n        overallProgress: 100,\n        phases: [\n          {\n            phaseId: 'phase1',\n            phaseName: 'TypeScript Error Elimination',\n            status: PhaseStatus.COMPLETED,\n            progress: 100,\n            keyMetrics: {},\n            milestones: [],\n            blockers: [],\n          },\n        ],\n        keyAchievements: [\n          {\n            title: 'Zero TypeScript Errors',\n            description: 'All errors eliminated',\n            phase: 'phase1',\n            achievedAt: new Date(),\n            impact: 'CRITICAL' as any,\n            metrics: {},\n          },\n        ],\n        criticalIssues: [],\n        performanceMetrics: {\n          typeScriptErrors: { initial: 86, current: 0, reduction: 86, reductionRate: 10 },\n          lintingWarnings: { initial: 4506, current: 0, reduction: 4506, reductionRate: 50 },\n          buildPerformance: { currentTime: 8, targetTime: 10, improvement: 2, cacheEfficiency: 0.85 },\n          enterpriseSystems: { initial: 0, current: 250, target: 200, growthRate: 5 },\n        },\n        recommendations: [],\n        estimatedCompletion: new Date(),\n        executiveSummary: 'Campaign completed successfully',\n      };\n\n      mockFs.writeFileSync.mockImplementation();\n\n      const exportedFiles = await reportingSystem.exportReport(mockReport, ['json', 'html', 'markdown', 'csv']);\n\n      expect(exportedFiles).toHaveLength(4);\n      expect(exportedFiles.some(f => f.endsWith('.json'))).toBe(true);\n      expect(exportedFiles.some(f => f.endsWith('.html'))).toBe(true);\n      expect(exportedFiles.some(f => f.endsWith('.md'))).toBe(true);\n      expect(exportedFiles.some(f => f.endsWith('.csv'))).toBe(true);\n      expect(mockFs.writeFileSync).toHaveBeenCalledTimes(4);\n    });\n  });\n\n  describe('Dashboard Data Generation', () => {\n    test('should generate real-time dashboard data', async () => {\n      // Mock all required data\n      mockMetricsCollector.collectDetailedMetrics.mockResolvedValue({\n        timestamp: new Date(),\n        typeScriptErrors: { current: 0, target: 0, reduction: 86, percentage: 100 },\n        lintingWarnings: { current: 0, target: 0, reduction: 4506, percentage: 100 },\n        buildPerformance: { currentTime: 8, targetTime: 10, cacheHitRate: 0.85, memoryUsage: 45 },\n        enterpriseSystems: { current: 250, target: 200, transformedExports: 250 },\n        errorBreakdown: {},\n        warningBreakdown: {},\n        buildMetrics: {\n          buildTime: 8,\n          bundleSize: 420,\n          cacheHitRate: 0.85,\n          memoryUsage: 45,\n          cpuUsage: 15,\n          diskUsage: 1024,\n          compilationSpeed: 25,\n        },\n        resourceMetrics: {\n          nodeMemoryUsage: process.memoryUsage(),\n          systemMemory: { total: 8192, used: 4096, free: 4096, percentage: 50 },\n          diskSpace: { total: 1000000, used: 500000, free: 500000, percentage: 50 },\n        },\n        trendData: { errorReductionRate: 10, warningReductionRate: 50, buildTimeImprovement: 2, systemGrowthRate: 5 },\n      });\n\n      mockValidationSystem.validateAllPhases.mockResolvedValue([\n        {\n          phaseId: 'phase1',\n          phaseName: 'TypeScript Error Elimination',\n          overallSuccess: true,\n          completionPercentage: 100,\n          milestones: [],\n          criticalFailures: [],\n          nextSteps: [],\n        },\n      ]);\n\n      mockMetricsCollector.getSnapshots.mockReturnValue([]);\n\n      const dashboardData = await reportingSystem.generateDashboardData();\n\n      expect(dashboardData.summary).toBeDefined();\n      expect(dashboardData.visualization).toBeDefined();\n      expect(dashboardData.recentActivity).toBeDefined();\n      expect(Array.isArray(dashboardData.recentActivity)).toBe(true);\n    });\n  });\n\n  describe('Report History Management', () => {\n    test('should maintain report history', async () => {\n      mockMetricsCollector.collectDetailedMetrics.mockResolvedValue({\n        timestamp: new Date(),\n        typeScriptErrors: { current: 0, target: 0, reduction: 86, percentage: 100 },\n        lintingWarnings: { current: 0, target: 0, reduction: 4506, percentage: 100 },\n        buildPerformance: { currentTime: 8, targetTime: 10, cacheHitRate: 0.85, memoryUsage: 45 },\n        enterpriseSystems: { current: 250, target: 200, transformedExports: 250 },\n        errorBreakdown: {},\n        warningBreakdown: {},\n        buildMetrics: {\n          buildTime: 8,\n          bundleSize: 420,\n          cacheHitRate: 0.85,\n          memoryUsage: 45,\n          cpuUsage: 15,\n          diskUsage: 1024,\n          compilationSpeed: 25,\n        },\n        resourceMetrics: {\n          nodeMemoryUsage: process.memoryUsage(),\n          systemMemory: { total: 8192, used: 4096, free: 4096, percentage: 50 },\n          diskSpace: { total: 1000000, used: 500000, free: 500000, percentage: 50 },\n        },\n        trendData: { errorReductionRate: 10, warningReductionRate: 50, buildTimeImprovement: 2, systemGrowthRate: 5 },\n      });\n\n      mockValidationSystem.validateAllPhases.mockResolvedValue([]);\n\n      expect(reportingSystem.getReportHistory()).toHaveLength(0);\n\n      await reportingSystem.generateCampaignSummaryReport();\n      expect(reportingSystem.getReportHistory()).toHaveLength(1);\n\n      await reportingSystem.generateCampaignSummaryReport();\n      expect(reportingSystem.getReportHistory()).toHaveLength(2);\n\n      reportingSystem.clearReportHistory();\n      expect(reportingSystem.getReportHistory()).toHaveLength(0);\n    });\n  });\n\n  describe('Error Handling', () => {\n    test('should handle metrics collection errors gracefully', async () => {\n      mockMetricsCollector.collectDetailedMetrics.mockRejectedValue(new Error('Metrics collection failed'));\n      mockValidationSystem.validateAllPhases.mockResolvedValue([]);\n\n      await expect(reportingSystem.generateCampaignSummaryReport()).rejects.toThrow('Metrics collection failed');\n    });\n\n    test('should handle validation system errors gracefully', async () => {\n      mockMetricsCollector.collectDetailedMetrics.mockResolvedValue(\n        {} as unknown as Awaited<ReturnType<typeof mockMetricsCollector.collectDetailedMetrics>>,\n      );\n      mockValidationSystem.validateAllPhases.mockRejectedValue(new Error('Validation failed'));\n\n      await expect(reportingSystem.generateCampaignSummaryReport()).rejects.toThrow('Validation failed');\n    });\n  });\n});\n"],"version":3}