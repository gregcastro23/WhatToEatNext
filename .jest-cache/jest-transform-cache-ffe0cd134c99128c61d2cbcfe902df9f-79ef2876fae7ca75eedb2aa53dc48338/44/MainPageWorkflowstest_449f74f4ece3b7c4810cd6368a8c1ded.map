{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/__tests__/e2e/MainPageWorkflows.test.tsx","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/__tests__/e2e/MainPageWorkflows.test.tsx"],"sourcesContent":["/**\n * End-to-End Tests for Main Page Workflows\n *\n * These tests simulate complete user workflows on the main page,\n * testing the integration between all components and user interactions.\n *\n * Note: These tests use jsdom and testing-library to simulate E2E scenarios\n * without requiring a full browser environment.\n */\n\nimport React from 'react';\nimport {\n  render,\n  screen,\n  fireEvent,\n  waitFor,\n  act,\n} from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport MainPageLayout from '@/components/layout/MainPageLayout';\nimport { useAlchemical } from '@/contexts/AlchemicalContext/hooks';\nimport {\n  useNavigationState,\n  useScrollPreservation,\n  useAutoStateCleanup,\n} from '@/hooks/useStatePreservation';\n\n// Mock all external dependencies for E2E simulation\njest.mock('next/navigation', () => ({\n  useRouter: () => ({\n    push: jest.fn(),\n    back: jest.fn(),\n    forward: jest.fn(),\n    refresh: jest.fn(),\n    replace: jest.fn(),\n  }),\n}));\n\njest.mock('@/contexts/AlchemicalContext/hooks');\njest.mock('@/hooks/useStatePreservation');\njest.mock('@/utils/logger', () => ({\n  logger: {\n    debug: jest.fn(),\n    info: jest.fn(),\n    warn: jest.fn(),\n    error: jest.fn(),\n  },\n}));\n\n// Mock realistic component behaviors for E2E testing\njest.mock('@/components/CuisineRecommender', () => {\n  return function MockCuisineRecommender() {\n    const [selectedCuisine, setSelectedCuisine] = React.useState<string | null>(\n      null\n    );\n    const [showRecipes, setShowRecipes] = React.useState(false);\n\n    const cuisines = [\n      {\n        name: 'Italian',\n        score: 95,\n        recipes: ['Pasta Marinara', 'Risotto', 'Pizza Margherita'],\n      },\n      {\n        name: 'Chinese',\n        score: 88,\n        recipes: ['Fried Rice', 'Sweet and Sour Pork', 'Kung Pao Chicken'],\n      },\n      {\n        name: 'Mexican',\n        score: 82,\n        recipes: ['Tacos', 'Enchiladas', 'Guacamole'],\n      },\n      { name: 'Indian', score: 79, recipes: ['Curry', 'Biryani', 'Naan'] },\n    ];\n\n    const handleCuisineSelect = (cuisine: any) => {\n      setSelectedCuisine(cuisine.name);\n      setShowRecipes(true);\n    };\n\n    return (\n      <div data-testid='cuisine-recommender'>\n        <h3>Cuisine Recommendations</h3>\n        <div className='cuisine-grid'>\n          {cuisines.map(cuisine => (\n            <div\n              key={cuisine.name}\n              className='cuisine-card'\n              data-testid={`cuisine-card-${cuisine.name.toLowerCase()}`}\n            >\n              <button\n                onClick={() => handleCuisineSelect(cuisine)}\n                className={selectedCuisine === cuisine.name ? 'selected' : ''}\n                data-testid={`cuisine-${cuisine.name.toLowerCase()}`}\n              >\n                <h4>{cuisine.name}</h4>\n                <div className='score'>Match: {cuisine.score}%</div>\n              </button>\n            </div>\n          ))}\n        </div>\n\n        {showRecipes && selectedCuisine && (\n          <div data-testid='recipe-recommendations' className='recipe-section'>\n            <h4>Recommended {selectedCuisine} Recipes</h4>\n            <div className='recipe-list'>\n              {cuisines\n                .find(c => c.name === selectedCuisine)\n                ?.recipes.map(recipe => (\n                  <button\n                    key={recipe}\n                    data-testid={`recipe-${recipe.toLowerCase().replace(/\\s+/g, '-')}`}\n                    className='recipe-button'\n                  >\n                    {recipe}\n                  </button>\n                ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n});\n\njest.mock('@/components/IngredientRecommender', () => {\n  return function MockIngredientRecommender({\n    maxDisplayed = 8,\n  }: {\n    maxDisplayed?: number;\n  }) {\n    const [selectedIngredients, setSelectedIngredients] = React.useState<\n      string[]\n    >([]);\n    const [expandedIngredient, setExpandedIngredient] = React.useState<\n      string | null\n    >(null);\n\n    const ingredients = [\n      {\n        name: 'Tomatoes',\n        category: 'Vegetables',\n        properties: ['Umami', 'Acidic', 'Fresh'],\n      },\n      {\n        name: 'Onions',\n        category: 'Vegetables',\n        properties: ['Sweet', 'Pungent', 'Aromatic'],\n      },\n      {\n        name: 'Garlic',\n        category: 'Aromatics',\n        properties: ['Pungent', 'Savory', 'Aromatic'],\n      },\n      {\n        name: 'Basil',\n        category: 'Herbs',\n        properties: ['Fresh', 'Aromatic', 'Sweet'],\n      },\n      {\n        name: 'Olive Oil',\n        category: 'Oils',\n        properties: ['Rich', 'Fruity', 'Smooth'],\n      },\n      {\n        name: 'Cheese',\n        category: 'Dairy',\n        properties: ['Creamy', 'Salty', 'Rich'],\n      },\n      {\n        name: 'Pasta',\n        category: 'Grains',\n        properties: ['Neutral', 'Filling', 'Versatile'],\n      },\n      {\n        name: 'Chicken',\n        category: 'Proteins',\n        properties: ['Lean', 'Mild', 'Versatile'],\n      },\n    ];\n\n    const displayedIngredients = ingredients.slice(0, maxDisplayed);\n\n    const toggleIngredient = (ingredient: string) => {\n      setSelectedIngredients(prev =>\n        prev.includes(ingredient)\n          ? prev.filter(i => i !== ingredient)\n          : [...prev, ingredient]\n      );\n    };\n\n    const toggleExpanded = (ingredient: string) => {\n      setExpandedIngredient(prev => (prev === ingredient ? null : ingredient));\n    };\n\n    return (\n      <div data-testid='ingredient-recommender'>\n        <h3>Ingredient Recommendations</h3>\n        <div className='ingredient-grid'>\n          {displayedIngredients.map(ingredient => (\n            <div\n              key={ingredient.name}\n              className='ingredient-card'\n              data-testid={`ingredient-card-${ingredient.name.toLowerCase()}`}\n            >\n              <button\n                onClick={() => toggleIngredient(ingredient.name)}\n                className={\n                  selectedIngredients.includes(ingredient.name)\n                    ? 'selected'\n                    : ''\n                }\n                data-testid={`ingredient-${ingredient.name.toLowerCase()}`}\n              >\n                {ingredient.name}\n              </button>\n              <button\n                onClick={() => toggleExpanded(ingredient.name)}\n                data-testid={`expand-${ingredient.name.toLowerCase()}`}\n                className='expand-button'\n              >\n                {expandedIngredient === ingredient.name ? '▼' : '▶'}\n              </button>\n\n              {expandedIngredient === ingredient.name && (\n                <div\n                  data-testid={`details-${ingredient.name.toLowerCase()}`}\n                  className='ingredient-details'\n                >\n                  <div>Category: {ingredient.category}</div>\n                  <div>Properties: {ingredient.properties.join(', ')}</div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {selectedIngredients.length > 0 && (\n          <div\n            data-testid='selected-ingredients-summary'\n            className='selection-summary'\n          >\n            <h4>Selected Ingredients ({selectedIngredients.length})</h4>\n            <div>{selectedIngredients.join(', ')}</div>\n          </div>\n        )}\n      </div>\n    );\n  };\n});\n\njest.mock('@/components/CookingMethodsSection', () => {\n  return function MockCookingMethodsSection({\n    maxDisplayed = 6,\n    onViewMore,\n  }: {\n    maxDisplayed?: number;\n    onViewMore?: () => void;\n  }) {\n    const [selectedMethod, setSelectedMethod] = React.useState<string | null>(\n      null\n    );\n\n    const methods = [\n      {\n        name: 'Sauté',\n        time: '5-10 min',\n        difficulty: 'Easy',\n        description: 'Quick cooking in a pan with oil',\n      },\n      {\n        name: 'Roast',\n        time: '30-60 min',\n        difficulty: 'Medium',\n        description: 'Cooking in the oven with dry heat',\n      },\n      {\n        name: 'Grill',\n        time: '10-20 min',\n        difficulty: 'Medium',\n        description: 'Cooking over direct heat',\n      },\n      {\n        name: 'Steam',\n        time: '10-15 min',\n        difficulty: 'Easy',\n        description: 'Cooking with steam heat',\n      },\n      {\n        name: 'Braise',\n        time: '60-120 min',\n        difficulty: 'Hard',\n        description: 'Slow cooking with liquid',\n      },\n      {\n        name: 'Stir-fry',\n        time: '5-8 min',\n        difficulty: 'Medium',\n        description: 'Quick cooking while stirring',\n      },\n    ];\n\n    const displayedMethods = methods.slice(0, maxDisplayed);\n\n    return (\n      <div data-testid='cooking-methods'>\n        <h3>Cooking Methods</h3>\n        <div className='methods-grid'>\n          {displayedMethods.map(method => (\n            <div\n              key={method.name}\n              className='method-card'\n              data-testid={`method-card-${method.name.toLowerCase()}`}\n            >\n              <button\n                onClick={() => setSelectedMethod(method.name)}\n                className={selectedMethod === method.name ? 'selected' : ''}\n                data-testid={`method-${method.name.toLowerCase()}`}\n              >\n                <h4>{method.name}</h4>\n                <div className='method-info'>\n                  <div>Time: {method.time}</div>\n                  <div>Difficulty: {method.difficulty}</div>\n                </div>\n              </button>\n\n              {selectedMethod === method.name && (\n                <div\n                  data-testid={`method-details-${method.name.toLowerCase()}`}\n                  className='method-details'\n                >\n                  <p>{method.description}</p>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <button\n          onClick={onViewMore}\n          data-testid='view-more-methods'\n          className='view-more-button'\n        >\n          View All Cooking Methods\n        </button>\n      </div>\n    );\n  };\n});\n\njest.mock('@/components/recipes/RecipeBuilderSimple', () => {\n  return function MockRecipeBuilderSimple() {\n    const [recipeName, setRecipeName] = React.useState('');\n    const [ingredients, setIngredients] = React.useState<\n      Array<{ name: string; quantity: string }>\n    >([]);\n    const [steps, setSteps] = React.useState<\n      Array<{ instruction: string; timing: string }>\n    >([]);\n    const [servings, setServings] = React.useState(4);\n    const [prepTime, setPrepTime] = React.useState(15);\n    const [cookTime, setCookTime] = React.useState(30);\n\n    const addIngredient = () => {\n      setIngredients(prev => [...prev, { name: '', quantity: '' }]);\n    };\n\n    const updateIngredient = (\n      index: number,\n      field: 'name' | 'quantity',\n      value: string\n    ) => {\n      setIngredients(prev =>\n        prev.map((ing, i) => (i === index ? { ...ing, [field]: value } : ing))\n      );\n    };\n\n    const removeIngredient = (index: number) => {\n      setIngredients(prev => prev.filter((_, i) => i !== index));\n    };\n\n    const addStep = () => {\n      setSteps(prev => [...prev, { instruction: '', timing: '' }]);\n    };\n\n    const updateStep = (\n      index: number,\n      field: 'instruction' | 'timing',\n      value: string\n    ) => {\n      setSteps(prev =>\n        prev.map((step, i) =>\n          i === index ? { ...step, [field]: value } : step\n        )\n      );\n    };\n\n    const removeStep = (index: number) => {\n      setSteps(prev => prev.filter((_, i) => i !== index));\n    };\n\n    const canSave =\n      recipeName.trim() &&\n      ingredients.some(ing => ing.name.trim()) &&\n      steps.some(step => step.instruction.trim());\n\n    const totalTime = prepTime + cookTime;\n\n    return (\n      <div data-testid='recipe-builder'>\n        <h3>Recipe Builder</h3>\n\n        <div className='recipe-form'>\n          <div className='recipe-header'>\n            <input\n              type='text'\n              placeholder='Recipe Name'\n              value={recipeName}\n              onChange={e => setRecipeName(e.target.value)}\n              data-testid='recipe-name-input'\n            />\n\n            <div className='recipe-meta'>\n              <input\n                type='number'\n                value={servings}\n                onChange={e => setServings(parseInt(e.target.value) || 1)}\n                data-testid='servings-input'\n                min='1'\n              />\n              <input\n                type='number'\n                value={prepTime}\n                onChange={e => setPrepTime(parseInt(e.target.value) || 0)}\n                data-testid='prep-time-input'\n                min='0'\n              />\n              <input\n                type='number'\n                value={cookTime}\n                onChange={e => setCookTime(parseInt(e.target.value) || 0)}\n                data-testid='cook-time-input'\n                min='0'\n              />\n            </div>\n          </div>\n\n          <div className='ingredients-section'>\n            <h4>Ingredients</h4>\n            <button onClick={addIngredient} data-testid='add-ingredient'>\n              Add Ingredient\n            </button>\n\n            {ingredients.map((ingredient, index) => (\n              <div\n                key={index}\n                className='ingredient-row'\n                data-testid={`ingredient-row-${index}`}\n              >\n                <input\n                  type='text'\n                  placeholder='Quantity'\n                  value={ingredient.quantity}\n                  onChange={e =>\n                    updateIngredient(index, 'quantity', e.target.value)\n                  }\n                  data-testid={`ingredient-quantity-${index}`}\n                />\n                <input\n                  type='text'\n                  placeholder='Ingredient name'\n                  value={ingredient.name}\n                  onChange={e =>\n                    updateIngredient(index, 'name', e.target.value)\n                  }\n                  data-testid={`ingredient-name-${index}`}\n                />\n                <button\n                  onClick={() => removeIngredient(index)}\n                  data-testid={`remove-ingredient-${index}`}\n                >\n                  Remove\n                </button>\n              </div>\n            ))}\n\n            <div data-testid='ingredients-count'>\n              Ingredients: {ingredients.length}\n            </div>\n          </div>\n\n          <div className='steps-section'>\n            <h4>Instructions</h4>\n            <button onClick={addStep} data-testid='add-step'>\n              Add Step\n            </button>\n\n            {steps.map((step, index) => (\n              <div\n                key={index}\n                className='step-row'\n                data-testid={`step-row-${index}`}\n              >\n                <span className='step-number'>{index + 1}</span>\n                <textarea\n                  placeholder='Describe this step...'\n                  value={step.instruction}\n                  onChange={e =>\n                    updateStep(index, 'instruction', e.target.value)\n                  }\n                  data-testid={`step-instruction-${index}`}\n                />\n                <input\n                  type='text'\n                  placeholder='Timing'\n                  value={step.timing}\n                  onChange={e => updateStep(index, 'timing', e.target.value)}\n                  data-testid={`step-timing-${index}`}\n                />\n                <button\n                  onClick={() => removeStep(index)}\n                  data-testid={`remove-step-${index}`}\n                >\n                  Remove\n                </button>\n              </div>\n            ))}\n\n            <div data-testid='steps-count'>Steps: {steps.length}</div>\n          </div>\n\n          <div className='recipe-summary' data-testid='recipe-summary'>\n            <h4>Recipe Summary</h4>\n            <div>Name: {recipeName || 'Untitled Recipe'}</div>\n            <div>Servings: {servings}</div>\n            <div>Total Time: {totalTime} minutes</div>\n            <div>Ingredients: {ingredients.length}</div>\n            <div>Steps: {steps.length}</div>\n          </div>\n\n          <button\n            disabled={!canSave}\n            data-testid='save-recipe'\n            className={canSave ? 'enabled' : 'disabled'}\n          >\n            Save Recipe\n          </button>\n        </div>\n      </div>\n    );\n  };\n});\n\ndescribe('Main Page E2E Workflows', () => {\n  const mockAlchemicalContext = {\n    state: {\n      astrologicalState: { sunSign: 'aries' },\n      elementalState: { Fire: 0.3, Water: 0.2, Earth: 0.3, Air: 0.2 },\n    },\n    planetaryPositions: { sun: { sign: 'aries' } },\n    isDaytime: true,\n  };\n\n  const mockNavigationState = {\n    saveState: jest.fn(),\n    getState: jest.fn(() => ({})),\n  };\n\n  const mockScrollPreservation = {\n    restoreScrollPosition: jest.fn(),\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n\n    (useAlchemical as jest.Mock).mockReturnValue(mockAlchemicalContext);\n    (useNavigationState as jest.Mock).mockReturnValue(mockNavigationState);\n    (useScrollPreservation as jest.Mock).mockReturnValue(\n      mockScrollPreservation\n    );\n    (useAutoStateCleanup as jest.Mock).mockReturnValue(undefined);\n\n    // Mock DOM methods\n    Object.defineProperty(window, 'scrollY', { value: 0, writable: true });\n    jest.spyOn(document, 'getElementById').mockImplementation(\n      () =>\n        ({\n          scrollIntoView: jest.fn(),\n          style: {},\n          classList: { add: jest.fn(), remove: jest.fn() },\n        }) as any\n    );\n  });\n\n  afterEach(() => {\n    jest.restoreAllMocks();\n  });\n\n  it('completes full meal planning workflow', async () => {\n    const user = userEvent.setup();\n\n    await act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    // Wait for all components to load\n    await waitFor(() => {\n      expect(screen.getByTestId('cuisine-recommender')).toBeInTheDocument();\n      expect(screen.getByTestId('ingredient-recommender')).toBeInTheDocument();\n      expect(screen.getByTestId('cooking-methods')).toBeInTheDocument();\n      expect(screen.getByTestId('recipe-builder')).toBeInTheDocument();\n    });\n\n    // Step 1: Select a cuisine\n    const italianCuisine = screen.getByTestId('cuisine-italian');\n    await user.click(italianCuisine);\n\n    // Verify cuisine selection and recipe recommendations appear\n    expect(screen.getByTestId('recipe-recommendations')).toBeInTheDocument();\n    expect(screen.getByText('Recommended Italian Recipes')).toBeInTheDocument();\n\n    // Step 2: Select ingredients\n    const tomatoes = screen.getByTestId('ingredient-tomatoes');\n    const basil = screen.getByTestId('ingredient-basil');\n    const oliveOil = screen.getByTestId('ingredient-olive oil');\n\n    await user.click(tomatoes);\n    await user.click(basil);\n    await user.click(oliveOil);\n\n    // Verify ingredient selection\n    expect(\n      screen.getByTestId('selected-ingredients-summary')\n    ).toBeInTheDocument();\n    expect(screen.getByText('Selected Ingredients (3)')).toBeInTheDocument();\n\n    // Step 3: Select cooking method\n    const sauteMethod = screen.getByTestId('method-sauté');\n    await user.click(sauteMethod);\n\n    // Verify method selection and details\n    expect(screen.getByTestId('method-details-sauté')).toBeInTheDocument();\n\n    // Step 4: Build a recipe\n    const recipeNameInput = screen.getByTestId('recipe-name-input');\n    await user.type(recipeNameInput, 'Italian Tomato Basil Sauté');\n\n    // Add ingredients to recipe\n    const addIngredientButton = screen.getByTestId('add-ingredient');\n    await user.click(addIngredientButton);\n    await user.click(addIngredientButton);\n    await user.click(addIngredientButton);\n\n    // Fill in ingredient details\n    await user.type(screen.getByTestId('ingredient-quantity-0'), '2 cups');\n    await user.type(screen.getByTestId('ingredient-name-0'), 'Fresh Tomatoes');\n\n    await user.type(screen.getByTestId('ingredient-quantity-1'), '1/4 cup');\n    await user.type(screen.getByTestId('ingredient-name-1'), 'Fresh Basil');\n\n    await user.type(screen.getByTestId('ingredient-quantity-2'), '2 tbsp');\n    await user.type(screen.getByTestId('ingredient-name-2'), 'Olive Oil');\n\n    // Add cooking steps\n    const addStepButton = screen.getByTestId('add-step');\n    await user.click(addStepButton);\n    await user.click(addStepButton);\n\n    await user.type(\n      screen.getByTestId('step-instruction-0'),\n      'Heat olive oil in a large pan over medium heat'\n    );\n    await user.type(screen.getByTestId('step-timing-0'), '2 min');\n\n    await user.type(\n      screen.getByTestId('step-instruction-1'),\n      'Add tomatoes and basil, sauté until tender'\n    );\n    await user.type(screen.getByTestId('step-timing-1'), '8 min');\n\n    // Verify recipe can be saved\n    const saveButton = screen.getByTestId('save-recipe');\n    expect(saveButton).toBeEnabled();\n\n    // Save the recipe\n    await user.click(saveButton);\n\n    // Verify the complete workflow\n    expect(\n      screen.getByDisplayValue('Italian Tomato Basil Sauté')\n    ).toBeInTheDocument();\n    expect(screen.getByText('Ingredients: 3')).toBeInTheDocument();\n    expect(screen.getByText('Steps: 2')).toBeInTheDocument();\n  });\n\n  it('handles ingredient exploration workflow', async () => {\n    const user = userEvent.setup();\n\n    await act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    await waitFor(() => {\n      expect(screen.getByTestId('ingredient-recommender')).toBeInTheDocument();\n    });\n\n    // Expand ingredient details\n    const expandTomatoes = screen.getByTestId('expand-tomatoes');\n    await user.click(expandTomatoes);\n\n    // Verify details are shown\n    expect(screen.getByTestId('details-tomatoes')).toBeInTheDocument();\n    expect(screen.getByText('Category: Vegetables')).toBeInTheDocument();\n    expect(\n      screen.getByText('Properties: Umami, Acidic, Fresh')\n    ).toBeInTheDocument();\n\n    // Expand another ingredient\n    const expandGarlic = screen.getByTestId('expand-garlic');\n    await user.click(expandGarlic);\n\n    expect(screen.getByTestId('details-garlic')).toBeInTheDocument();\n    expect(screen.getByText('Category: Aromatics')).toBeInTheDocument();\n\n    // Collapse first ingredient\n    await user.click(expandTomatoes);\n    expect(screen.queryByTestId('details-tomatoes')).not.toBeInTheDocument();\n\n    // Select multiple ingredients\n    await user.click(screen.getByTestId('ingredient-tomatoes'));\n    await user.click(screen.getByTestId('ingredient-garlic'));\n    await user.click(screen.getByTestId('ingredient-basil'));\n\n    // Verify selection summary\n    expect(screen.getByText('Selected Ingredients (3)')).toBeInTheDocument();\n    expect(screen.getByText('Tomatoes, Garlic, Basil')).toBeInTheDocument();\n  });\n\n  it('handles cooking method exploration workflow', async () => {\n    const user = userEvent.setup();\n\n    await act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    await waitFor(() => {\n      expect(screen.getByTestId('cooking-methods')).toBeInTheDocument();\n    });\n\n    // Select different cooking methods and view details\n    const roastMethod = screen.getByTestId('method-roast');\n    await user.click(roastMethod);\n\n    expect(screen.getByTestId('method-details-roast')).toBeInTheDocument();\n    expect(\n      screen.getByText('Cooking in the oven with dry heat')\n    ).toBeInTheDocument();\n\n    // Switch to another method\n    const grillMethod = screen.getByTestId('method-grill');\n    await user.click(grillMethod);\n\n    expect(screen.getByTestId('method-details-grill')).toBeInTheDocument();\n    expect(screen.getByText('Cooking over direct heat')).toBeInTheDocument();\n\n    // Previous method details should be hidden\n    expect(\n      screen.queryByTestId('method-details-roast')\n    ).not.toBeInTheDocument();\n\n    // Test view more functionality\n    const viewMoreButton = screen.getByTestId('view-more-methods');\n    expect(viewMoreButton).toBeInTheDocument();\n  });\n\n  it('handles complete recipe creation workflow', async () => {\n    const user = userEvent.setup();\n\n    await act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    await waitFor(() => {\n      expect(screen.getByTestId('recipe-builder')).toBeInTheDocument();\n    });\n\n    // Create a complete recipe from scratch\n    const recipeNameInput = screen.getByTestId('recipe-name-input');\n    await user.type(recipeNameInput, 'Mediterranean Chicken');\n\n    // Update recipe metadata\n    const servingsInput = screen.getByTestId('servings-input');\n    const prepTimeInput = screen.getByTestId('prep-time-input');\n    const cookTimeInput = screen.getByTestId('cook-time-input');\n\n    await user.clear(servingsInput);\n    await user.type(servingsInput, '6');\n\n    await user.clear(prepTimeInput);\n    await user.type(prepTimeInput, '20');\n\n    await user.clear(cookTimeInput);\n    await user.type(cookTimeInput, '45');\n\n    // Add multiple ingredients\n    for (let i = 0; i < 4; i++) {\n      await user.click(screen.getByTestId('add-ingredient'));\n    }\n\n    const ingredients = [\n      { quantity: '2 lbs', name: 'Chicken Breast' },\n      { quantity: '1 cup', name: 'Cherry Tomatoes' },\n      { quantity: '1/2 cup', name: 'Kalamata Olives' },\n      { quantity: '1/4 cup', name: 'Olive Oil' },\n    ];\n\n    for (let i = 0; i < ingredients.length; i++) {\n      await user.type(\n        screen.getByTestId(`ingredient-quantity-${i}`),\n        ingredients[i].quantity\n      );\n      await user.type(\n        screen.getByTestId(`ingredient-name-${i}`),\n        ingredients[i].name\n      );\n    }\n\n    // Add cooking steps\n    for (let i = 0; i < 3; i++) {\n      await user.click(screen.getByTestId('add-step'));\n    }\n\n    const steps = [\n      {\n        instruction: 'Preheat oven to 375°F and prepare chicken',\n        timing: '5 min',\n      },\n      {\n        instruction: 'Sear chicken in olive oil until golden',\n        timing: '10 min',\n      },\n      {\n        instruction: 'Add tomatoes and olives, bake until done',\n        timing: '30 min',\n      },\n    ];\n\n    for (let i = 0; i < steps.length; i++) {\n      await user.type(\n        screen.getByTestId(`step-instruction-${i}`),\n        steps[i].instruction\n      );\n      await user.type(screen.getByTestId(`step-timing-${i}`), steps[i].timing);\n    }\n\n    // Verify recipe summary\n    const summary = screen.getByTestId('recipe-summary');\n    expect(summary).toHaveTextContent('Name: Mediterranean Chicken');\n    expect(summary).toHaveTextContent('Servings: 6');\n    expect(summary).toHaveTextContent('Total Time: 65 minutes');\n    expect(summary).toHaveTextContent('Ingredients: 4');\n    expect(summary).toHaveTextContent('Steps: 3');\n\n    // Verify save button is enabled\n    const saveButton = screen.getByTestId('save-recipe');\n    expect(saveButton).toBeEnabled();\n    expect(saveButton).toHaveClass('enabled');\n\n    // Test ingredient removal\n    await user.click(screen.getByTestId('remove-ingredient-3'));\n    expect(screen.getByText('Ingredients: 3')).toBeInTheDocument();\n\n    // Test step removal\n    await user.click(screen.getByTestId('remove-step-0'));\n    expect(screen.getByText('Steps: 2')).toBeInTheDocument();\n\n    // Verify step renumbering\n    expect(\n      screen.getByDisplayValue('Sear chicken in olive oil until golden')\n    ).toBeInTheDocument();\n  });\n\n  it('handles navigation and state preservation workflow', async () => {\n    const user = userEvent.setup();\n    const mockOnSectionNavigate = jest.fn();\n\n    await act(async () => {\n      render(<MainPageLayout onSectionNavigate={mockOnSectionNavigate} />);\n    });\n\n    await waitFor(() => {\n      expect(screen.getByTestId('cuisine-recommender')).toBeInTheDocument();\n    });\n\n    // Make selections across different components\n    await user.click(screen.getByTestId('cuisine-italian'));\n    await user.click(screen.getByTestId('ingredient-tomatoes'));\n    await user.click(screen.getByTestId('method-sauté'));\n\n    // Navigate between sections\n    const cuisineNavButton = screen.getByText('Cuisine Recommendations');\n    await user.click(cuisineNavButton);\n    expect(mockOnSectionNavigate).toHaveBeenCalledWith('cuisine');\n\n    const ingredientsNavButton = screen.getByText('Ingredient Recommendations');\n    await user.click(ingredientsNavButton);\n    expect(mockOnSectionNavigate).toHaveBeenCalledWith('ingredients');\n\n    // Verify state preservation was called\n    await waitFor(() => {\n      expect(mockNavigationState.saveState).toHaveBeenCalled();\n    });\n\n    // Verify selections are maintained after navigation\n    expect(screen.getByTestId('recipe-recommendations')).toBeInTheDocument();\n    expect(screen.getByText('Selected Ingredients (1)')).toBeInTheDocument();\n    expect(screen.getByTestId('method-details-sauté')).toBeInTheDocument();\n  });\n\n  it('handles error recovery workflow', async () => {\n    const user = userEvent.setup();\n\n    // Mock console.error to avoid noise\n    const consoleSpy = jest\n      .spyOn(console, 'error')\n      .mockImplementation(() => {});\n\n    await act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    await waitFor(() => {\n      expect(screen.getByTestId('recipe-builder')).toBeInTheDocument();\n    });\n\n    // Simulate user creating a recipe and encountering an error\n    const recipeNameInput = screen.getByTestId('recipe-name-input');\n    await user.type(recipeNameInput, 'Test Recipe');\n\n    // Add ingredient\n    await user.click(screen.getByTestId('add-ingredient'));\n    await user.type(screen.getByTestId('ingredient-name-0'), 'Test Ingredient');\n\n    // Add step\n    await user.click(screen.getByTestId('add-step'));\n    await user.type(screen.getByTestId('step-instruction-0'), 'Test step');\n\n    // Verify recipe is valid\n    expect(screen.getByTestId('save-recipe')).toBeEnabled();\n\n    // The main page should continue to function despite any errors\n    expect(screen.getByText('What to Eat Next')).toBeInTheDocument();\n    expect(screen.getByTestId('recipe-builder')).toBeInTheDocument();\n\n    consoleSpy.mockRestore();\n  });\n});\n"],"version":3}