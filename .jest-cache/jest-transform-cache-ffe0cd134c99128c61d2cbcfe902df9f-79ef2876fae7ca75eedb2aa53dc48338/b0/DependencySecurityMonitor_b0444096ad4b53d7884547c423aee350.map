{"file":"/Users/GregCastro/Desktop/WhatToEatNext/.consolidation-backups-2025-08-23T17-54-10-092Z/src/services/campaign/DependencySecurityMonitor.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/.consolidation-backups-2025-08-23T17-54-10-092Z/src/services/campaign/DependencySecurityMonitor.ts"],"sourcesContent":["/**\n * Dependency and Security Monitoring System\n * Automated dependency update monitoring and security vulnerability scanning\n * Part of the Kiro Optimization Campaign System\n */\n\nimport { execSync } from 'child_process';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nimport { logger } from '../../utils/logger';\n\nexport interface DependencySecurityConfig {\n  maxDependenciesPerBatch: number;\n  safetyValidationEnabled: boolean;\n  autoUpdateEnabled: boolean;\n  securityScanEnabled: boolean;\n  compatibilityTestingEnabled: boolean;\n  updateStrategies: UpdateStrategy[];\n  securityThresholds: SecurityThresholds;\n  excludedPackages: string[];\n}\n\nexport interface UpdateStrategy {\n  name: string;\n  description: string;\n  pattern: RegExp;\n  updateType: 'major' | 'minor' | 'patch' | 'none';\n  requiresManualApproval: boolean;\n  testingRequired: boolean;\n}\n\nexport interface SecurityThresholds {\n  critical: number;\n  high: number;\n  moderate: number;\n  low: number;\n  autoFixCritical: boolean;\n  autoFixHigh: boolean;\n}\n\nexport interface DependencySecurityResult {\n  dependenciesScanned: number;\n  vulnerabilitiesFound: number;\n  updatesAvailable: number;\n  updatesApplied: number;\n  securityPatchesApplied: number;\n  compatibilityTestsPassed: boolean;\n  errors: string[];\n  warnings: string[];\n  securityReport: SecurityReport;\n  updateReport: UpdateReport;\n}\n\nexport interface SecurityReport {\n  vulnerabilities: SecurityVulnerability[];\n  summary: SecuritySummary;\n  recommendations: string[];\n}\n\nexport interface SecurityVulnerability {\n  packageName: string;\n  currentVersion: string;\n  vulnerableVersions: string;\n  severity: 'critical' | 'high' | 'moderate' | 'low';\n  cve: string;\n  description: string;\n  fixedVersion?: string;\n  patchAvailable: boolean;\n}\n\nexport interface SecuritySummary {\n  critical: number;\n  high: number;\n  moderate: number;\n  low: number;\n  total: number;\n}\n\nexport interface UpdateReport {\n  availableUpdates: DependencyUpdate[];\n  appliedUpdates: DependencyUpdate[];\n  failedUpdates: DependencyUpdate[];\n  summary: UpdateSummary;\n}\n\nexport interface DependencyUpdate {\n  packageName: string;\n  currentVersion: string;\n  latestVersion: string;\n  updateType: 'major' | 'minor' | 'patch';\n  changelogUrl?: string;\n  breakingChanges: boolean;\n  securityFix: boolean;\n  testingRequired: boolean;\n}\n\nexport interface UpdateSummary {\n  major: number;\n  minor: number;\n  patch: number;\n  security: number;\n  total: number;\n}\n\nexport interface PackageInfo {\n  name: string;\n  currentVersion: string;\n  latestVersion: string;\n  wantedVersion: string;\n  type: 'dependencies' | 'devDependencies';\n  homepage?: string;\n  repository?: string;\n}\n\nexport class DependencySecurityMonitor {\n  private config: DependencySecurityConfig;\n  private packageJsonPath: string;\n\n  constructor(config: DependencySecurityConfig, packageJsonPath: string = 'package.json') {\n    this.config = config;\n    this.packageJsonPath = packageJsonPath;\n  }\n\n  /**\n   * Execute comprehensive dependency and security monitoring\n   */\n  async executeDependencySecurityMonitoring(): Promise<DependencySecurityResult> {\n    const startTime = Date.now();\n    logger.info('Starting dependency and security monitoring');\n\n    try {\n      const result: DependencySecurityResult = {\n        dependenciesScanned: 0,\n        vulnerabilitiesFound: 0,\n        updatesAvailable: 0,\n        updatesApplied: 0,\n        securityPatchesApplied: 0,\n        compatibilityTestsPassed: true,\n        errors: [],\n        warnings: [],\n        securityReport: {\n          vulnerabilities: [],\n          summary: { critical: 0, high: 0, moderate: 0, low: 0, total: 0 },\n          recommendations: [],\n        },\n        updateReport: {\n          availableUpdates: [],\n          appliedUpdates: [],\n          failedUpdates: [],\n          summary: { major: 0, minor: 0, patch: 0, security: 0, total: 0 },\n        },\n      };\n\n      // Step 1: Scan for security vulnerabilities\n      if (this.config.securityScanEnabled) {\n        try {\n          result.securityReport = await this.scanSecurityVulnerabilities();\n          result.vulnerabilitiesFound = result.securityReport.summary.total;\n        } catch (error) {\n          result.errors.push(\n            `Security scan failed: ${(error as Record<string, unknown>).message || 'Unknown error'}`,\n          );\n        }\n      }\n\n      // Step 2: Check for dependency updates\n      try {\n        result.updateReport = await this.checkDependencyUpdates();\n        result.updatesAvailable = result.updateReport.summary.total;\n        result.dependenciesScanned = await this.getDependencyCount();\n      } catch (error) {\n        result.errors.push(\n          `Dependency update check failed: ${(error as Record<string, unknown>).message || 'Unknown error'}`,\n        );\n      }\n\n      // Step 3: Apply security patches automatically if enabled\n      if (this.config.autoUpdateEnabled) {\n        try {\n          const securityUpdates = await this.applySecurityPatches(\n            result.securityReport.vulnerabilities,\n          );\n          result.securityPatchesApplied = securityUpdates.length;\n          result.updateReport.appliedUpdates.push(...securityUpdates);\n        } catch (error) {\n          result.errors.push(\n            `Security patch application failed: ${(error as Record<string, unknown>).message || 'Unknown error'}`,\n          );\n        }\n      }\n\n      // Step 4: Apply safe dependency updates\n      if (this.config.autoUpdateEnabled) {\n        try {\n          const safeUpdates = await this.applySafeUpdates(result.updateReport.availableUpdates);\n          result.updatesApplied = safeUpdates.length;\n          result.updateReport.appliedUpdates.push(...safeUpdates);\n        } catch (error) {\n          result.errors.push(\n            `Safe update application failed: ${(error as Record<string, unknown>).message || 'Unknown error'}`,\n          );\n        }\n      }\n\n      // Step 5: Run compatibility tests if enabled\n      if (this.config.compatibilityTestingEnabled && result.updatesApplied > 0) {\n        try {\n          result.compatibilityTestsPassed = await this.runCompatibilityTests();\n        } catch (error) {\n          result.errors.push(\n            `Compatibility testing failed: ${(error as Record<string, unknown>).message || 'Unknown error'}`,\n          );\n          result.compatibilityTestsPassed = false;\n        }\n      }\n\n      const executionTime = Date.now() - startTime;\n      logger.info(`Dependency and security monitoring completed in ${executionTime}ms`, {\n        dependenciesScanned: result.dependenciesScanned,\n        vulnerabilitiesFound: result.vulnerabilitiesFound,\n        updatesApplied: result.updatesApplied,\n      });\n\n      return result;\n    } catch (error) {\n      logger.error('Dependency and security monitoring failed', error);\n      return {\n        dependenciesScanned: 0,\n        vulnerabilitiesFound: 0,\n        updatesAvailable: 0,\n        updatesApplied: 0,\n        securityPatchesApplied: 0,\n        compatibilityTestsPassed: false,\n        errors: [String((error as Record<string, unknown>).message || 'Unknown error')],\n        warnings: [],\n        securityReport: {\n          vulnerabilities: [],\n          summary: { critical: 0, high: 0, moderate: 0, low: 0, total: 0 },\n          recommendations: [],\n        },\n        updateReport: {\n          availableUpdates: [],\n          appliedUpdates: [],\n          failedUpdates: [],\n          summary: { major: 0, minor: 0, patch: 0, security: 0, total: 0 },\n        },\n      };\n    }\n  }\n\n  /**\n   * Scan for security vulnerabilities using yarn audit\n   */\n  async scanSecurityVulnerabilities(): Promise<SecurityReport> {\n    try {\n      const auditOutput = execSync('yarn audit --json', {\n        encoding: 'utf8',\n        stdio: 'pipe',\n        timeout: 60000,\n      });\n\n      const auditData = JSON.parse(auditOutput);\n      const vulnerabilities: SecurityVulnerability[] = [];\n      const summary: SecuritySummary = { critical: 0, high: 0, moderate: 0, low: 0, total: 0 };\n\n      // Parse npm audit output\n      if (auditData.vulnerabilities) {\n        for (const [packageName, vulnData] of Object.entries(auditData.vulnerabilities)) {\n          const vuln = vulnData as unknown as {\n            via?: Array<{ range?: string; severity?: string; title?: string }>;\n            range?: string;\n            severity?: string;\n            name?: string;\n            [key: string]: unknown;\n          };\n\n          const vulnerability: SecurityVulnerability = {\n            packageName,\n            currentVersion: vuln.via?.[0]?.range || 'unknown',\n            vulnerableVersions: vuln.range || 'unknown',\n            severity: vuln.severity,\n            cve: vuln.via?.[0]?.source || 'N/A',\n            description: vuln.via?.[0]?.title || 'No description available',\n            fixedVersion: vuln.fixAvailable?.version,\n            patchAvailable: !!vuln.fixAvailable,\n          };\n\n          vulnerabilities.push(vulnerability);\n          summary[vuln.severity]++;\n          summary.total++;\n        }\n      }\n\n      const recommendations = this.generateSecurityRecommendations(vulnerabilities, summary);\n\n      return {\n        vulnerabilities,\n        summary,\n        recommendations,\n      };\n    } catch (error) {\n      logger.error('Security vulnerability scan failed', error);\n      return {\n        vulnerabilities: [],\n        summary: { critical: 0, high: 0, moderate: 0, low: 0, total: 0 },\n        recommendations: ['Failed to scan for vulnerabilities. Please run yarn audit manually.'],\n      };\n    }\n  }\n\n  /**\n   * Check for available dependency updates\n   */\n  async checkDependencyUpdates(): Promise<UpdateReport> {\n    try {\n      const outdatedOutput = execSync('yarn outdated --json', {\n        encoding: 'utf8',\n        stdio: 'pipe',\n        timeout: 60000,\n      });\n\n      const outdatedData = JSON.parse(outdatedOutput || '{}');\n      const availableUpdates: DependencyUpdate[] = [];\n      const summary: UpdateSummary = { major: 0, minor: 0, patch: 0, security: 0, total: 0 };\n\n      for (const [packageName, updateInfo] of Object.entries(outdatedData)) {\n        const info = updateInfo as unknown as {\n          current?: string;\n          wanted?: string;\n          latest?: string;\n          dependent?: string;\n          location?: string;\n          [key: string]: unknown;\n        };\n\n        const updateType = this.determineUpdateType(info.current, info.latest);\n        const breakingChanges = updateType === 'major';\n\n        const update: DependencyUpdate = {\n          packageName,\n          currentVersion: info.current,\n          latestVersion: info.latest,\n          updateType,\n          changelogUrl: await this.getChangelogUrl(packageName),\n          breakingChanges,\n          securityFix: false, // Will be determined by cross-referencing with security scan\n          testingRequired: breakingChanges || this.requiresTesting(packageName),\n        };\n\n        availableUpdates.push(update);\n        summary[updateType]++;\n        summary.total++;\n      }\n\n      return {\n        availableUpdates,\n        appliedUpdates: [],\n        failedUpdates: [],\n        summary,\n      };\n    } catch (error) {\n      // yarn outdated returns non-zero exit code when updates are available\n      if ((error as unknown as { stdout?: string }).stdout) {\n        try {\n          const outdatedData = JSON.parse((error as unknown as { stdout: string }).stdout || '{}');\n          // Process the data as above\n          return this.processOutdatedData(outdatedData);\n        } catch (parseError) {\n          logger.error('Failed to parse yarn outdated output', parseError);\n        }\n      }\n\n      return {\n        availableUpdates: [],\n        appliedUpdates: [],\n        failedUpdates: [],\n        summary: { major: 0, minor: 0, patch: 0, security: 0, total: 0 },\n      };\n    }\n  }\n\n  /**\n   * Apply security patches automatically\n   */\n  async applySecurityPatches(\n    vulnerabilities: SecurityVulnerability[],\n  ): Promise<DependencyUpdate[]> {\n    const appliedUpdates: DependencyUpdate[] = [];\n\n    for (const vuln of vulnerabilities) {\n      if (!vuln.patchAvailable) continue;\n\n      const shouldAutoFix = this.shouldAutoFixVulnerability(vuln.severity);\n      if (!shouldAutoFix) continue;\n\n      if (this.config.excludedPackages.includes(vuln.packageName)) {\n        logger.info(`Skipping excluded package: ${vuln.packageName}`);\n        continue;\n      }\n\n      try {\n        // Apply the security fix\n        const updateCommand = vuln.fixedVersion\n          ? `yarn add ${vuln.packageName}@${vuln.fixedVersion}`\n          : `yarn audit --fix`;\n\n        execSync(updateCommand, {\n          encoding: 'utf8',\n          stdio: 'pipe',\n          timeout: 120000,\n        });\n\n        const update: DependencyUpdate = {\n          packageName: vuln.packageName,\n          currentVersion: vuln.currentVersion,\n          latestVersion: vuln.fixedVersion || 'patched',\n          updateType: 'patch',\n          breakingChanges: false,\n          securityFix: true,\n          testingRequired: false,\n        };\n\n        appliedUpdates.push(update);\n        logger.info(`Applied security patch for ${vuln.packageName}`);\n      } catch (error) {\n        logger.error(`Failed to apply security patch for ${vuln.packageName}`, error);\n      }\n    }\n\n    return appliedUpdates;\n  }\n\n  /**\n   * Apply safe dependency updates\n   */\n  async applySafeUpdates(availableUpdates: DependencyUpdate[]): Promise<DependencyUpdate[]> {\n    const appliedUpdates: DependencyUpdate[] = [];\n\n    for (const update of availableUpdates) {\n      if (this.config.excludedPackages.includes(update.packageName)) {\n        logger.info(`Skipping excluded package: ${update.packageName}`);\n        continue;\n      }\n\n      const strategy = this.getUpdateStrategy(update);\n      if (!strategy || strategy.updateType === 'none') continue;\n\n      if (strategy.requiresManualApproval && update.updateType === 'major') {\n        logger.info(`Skipping major update requiring manual approval: ${update.packageName}`);\n        continue;\n      }\n\n      try {\n        // Apply the update\n        const updateCommand = `yarn add ${update.packageName}@${update.latestVersion}`;\n\n        execSync(updateCommand, {\n          encoding: 'utf8',\n          stdio: 'pipe',\n          timeout: 120000,\n        });\n\n        appliedUpdates.push(update);\n        logger.info(\n          `Applied update for ${update.packageName}: ${update.currentVersion} → ${update.latestVersion}`,\n        );\n\n        // Run tests if required\n        if (strategy.testingRequired && this.config.compatibilityTestingEnabled) {\n          const testsPass = await this.runPackageTests(update.packageName);\n          if (!testsPass) {\n            logger.warn(`Tests failed after updating ${update.packageName}, consider rollback`);\n          }\n        }\n      } catch (error) {\n        logger.error(`Failed to apply update for ${update.packageName}`, error);\n      }\n    }\n\n    return appliedUpdates;\n  }\n\n  /**\n   * Run compatibility tests\n   */\n  async runCompatibilityTests(): Promise<boolean> {\n    try {\n      // Run TypeScript compilation check\n      execSync('yarn build', {\n        encoding: 'utf8',\n        stdio: 'pipe',\n        timeout: 300000,\n      });\n\n      // Run test suite\n      execSync('yarn test', {\n        encoding: 'utf8',\n        stdio: 'pipe',\n        timeout: 300000,\n      });\n\n      return true;\n    } catch (error) {\n      logger.error('Compatibility tests failed', error);\n      return false;\n    }\n  }\n\n  // Private helper methods\n\n  private processOutdatedData(outdatedData: Record<string, unknown>): UpdateReport {\n    const availableUpdates: DependencyUpdate[] = [];\n    const summary: UpdateSummary = { major: 0, minor: 0, patch: 0, security: 0, total: 0 };\n\n    for (const [packageName, updateInfo] of Object.entries(outdatedData)) {\n      const info = updateInfo as unknown;\n\n      const updateType = this.determineUpdateType(info.current, info.latest);\n\n      const update: DependencyUpdate = {\n        packageName,\n        currentVersion: info.current,\n        latestVersion: info.latest,\n        updateType,\n        breakingChanges: updateType === 'major',\n        securityFix: false,\n        testingRequired: updateType === 'major' || this.requiresTesting(packageName),\n      };\n\n      availableUpdates.push(update);\n      summary[updateType]++;\n      summary.total++;\n    }\n\n    return {\n      availableUpdates,\n      appliedUpdates: [],\n      failedUpdates: [],\n      summary,\n    };\n  }\n\n  private determineUpdateType(current: string, latest: string): 'major' | 'minor' | 'patch' {\n    const currentParts = current\n      .replace(/[^0-9.]/g, '')\n      .split('.')\n      .map(Number);\n    const latestParts = latest\n      .replace(/[^0-9.]/g, '')\n      .split('.')\n      .map(Number);\n\n    if (latestParts[0] > currentParts[0]) return 'major';\n    if (latestParts[1] > currentParts[1]) return 'minor';\n    return 'patch';\n  }\n\n  private shouldAutoFixVulnerability(severity: string): boolean {\n    const { securityThresholds } = this.config;\n\n    switch (severity) {\n      case 'critical':\n        return securityThresholds.autoFixCritical;\n      case 'high':\n        return securityThresholds.autoFixHigh;\n      default:\n        return false;\n    }\n  }\n\n  private getUpdateStrategy(update: DependencyUpdate): UpdateStrategy | null {\n    for (const strategy of this.config.updateStrategies) {\n      if (strategy.pattern.test(update.packageName)) {\n        return strategy;\n      }\n    }\n    return null;\n  }\n\n  private requiresTesting(packageName: string): boolean {\n    // Packages that typically require testing after updates\n    const testingRequiredPatterns = [\n      /^react/,\n      /^next/,\n      /^typescript/,\n      /^@types\\//,\n      /^eslint/,\n      /^jest/,\n      /^babel/,\n    ];\n\n    return testingRequiredPatterns.some(pattern => pattern.test(packageName));\n  }\n\n  private async getChangelogUrl(packageName: string): Promise<string | undefined> {\n    try {\n      const packageInfo = execSync(`yarn info ${packageName} --json`, {\n        encoding: 'utf8',\n        stdio: 'pipe',\n        timeout: 10000,\n      });\n\n      const info = JSON.parse(packageInfo);\n      return info.repository?.url || info.homepage;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  private async runPackageTests(packageName: string): Promise<boolean> {\n    try {\n      // Run a subset of tests related to the updated package\n      execSync('yarn test --testNamePattern=\".*\" --bail', {\n        encoding: 'utf8',\n        stdio: 'pipe',\n        timeout: 60000,\n      });\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  private async getDependencyCount(): Promise<number> {\n    try {\n      const packageJson = JSON.parse(fs.readFileSync(this.packageJsonPath, 'utf8'));\n      const deps = Object.keys(packageJson.dependencies || {});\n      const devDeps = Object.keys(packageJson.devDependencies || {});\n      return deps.length + devDeps.length;\n    } catch (error) {\n      return 0;\n    }\n  }\n\n  private generateSecurityRecommendations(\n    vulnerabilities: SecurityVulnerability[],\n    summary: SecuritySummary,\n  ): string[] {\n    const recommendations: string[] = [];\n\n    if (summary.critical > 0) {\n      recommendations.push(\n        `🚨 ${summary.critical} critical vulnerabilities found - immediate action required`,\n      );\n    }\n\n    if (summary.high > 0) {\n      recommendations.push(\n        `⚠️ ${summary.high} high severity vulnerabilities found - update as soon as possible`,\n      );\n    }\n\n    if (summary.moderate > 0) {\n      recommendations.push(`📋 ${summary.moderate} moderate vulnerabilities found - plan updates`);\n    }\n\n    const patchableVulns = vulnerabilities.filter(v => v.patchAvailable);\n    if (patchableVulns.length > 0) {\n      recommendations.push(`✅ ${patchableVulns.length} vulnerabilities have patches available`);\n    }\n\n    if (summary.total === 0) {\n      recommendations.push('✅ No security vulnerabilities found');\n    }\n\n    return recommendations;\n  }\n}\n\n/**\n * Default configuration for dependency and security monitoring\n */\nexport const DEFAULT_DEPENDENCY_SECURITY_CONFIG: DependencySecurityConfig = {\n  maxDependenciesPerBatch: 10,\n  safetyValidationEnabled: true,\n  autoUpdateEnabled: false, // Disabled by default for safety\n  securityScanEnabled: true,\n  compatibilityTestingEnabled: true,\n  updateStrategies: [\n    {\n      name: 'Security patches',\n      description: 'Automatically apply security patches',\n      pattern: /.*/,\n      updateType: 'patch',\n      requiresManualApproval: false,\n      testingRequired: false,\n    },\n    {\n      name: 'TypeScript ecosystem',\n      description: 'Careful updates for TypeScript-related packages',\n      pattern: /^(@types\\/|typescript|ts-)/,\n      updateType: 'minor',\n      requiresManualApproval: true,\n      testingRequired: true,\n    },\n    {\n      name: 'React ecosystem',\n      description: 'Careful updates for React-related packages',\n      pattern: /^(react|@react|next)/,\n      updateType: 'minor',\n      requiresManualApproval: true,\n      testingRequired: true,\n    },\n    {\n      name: 'Development tools',\n      description: 'Safe updates for development tools',\n      pattern: /^(eslint|prettier|jest|babel)/,\n      updateType: 'minor',\n      requiresManualApproval: false,\n      testingRequired: true,\n    },\n  ],\n  securityThresholds: {\n    critical: 0,\n    high: 5,\n    moderate: 10,\n    low: 20,\n    autoFixCritical: true,\n    autoFixHigh: false,\n  },\n  excludedPackages: [\n    // Packages to never auto-update\n    'react',\n    'react-dom',\n    'next',\n    'typescript',\n  ],\n};\n"],"version":3}