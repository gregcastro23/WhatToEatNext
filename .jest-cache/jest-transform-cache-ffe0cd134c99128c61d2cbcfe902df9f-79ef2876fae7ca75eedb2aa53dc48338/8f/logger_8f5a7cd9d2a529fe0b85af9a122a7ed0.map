{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/utils/logger.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/utils/logger.ts"],"sourcesContent":["/**\n * Advanced logger utility to standardize logging across the application.\n * This module provides component-specific logging capabilities and consistent formatting.\n */\n\ntype LogLevel = 'debug' | 'info' | 'warn' | 'error';\n\n// Get environment\nconst isDev = process.env.NODE_ENV !== 'production';\nconst isBrowser = typeof window !== 'undefined';\n\n/**\n * Logger class providing centralized logging capabilities\n */\nclass Logger {\n  private logLevel: LogLevel = isDev ? 'debug' : 'info';\n  private recentErrors: Array<{\n    message: string;\n    timestamp: number;\n    component?: string;\n  }> = [];\n  private readonly MAX_ERRORS = 20;\n\n  // Track components that have created loggers\n  private componentLoggers: Set<string> = new Set();\n\n  /**\n   * Set the minimum log level\n   */\n  setLevel(level: LogLevel): void {\n    this.logLevel = level;\n  }\n\n  /**\n   * Create a component-specific logger\n   * @param component The name of the component or module\n   * @returns An object with logging methods specific to the component\n   */\n  createLogger(component: string) {\n    this.componentLoggers.add(component);\n\n    return {\n      debug: (message: string, ...args: unknown[]): void =>\n        this.debug(message, ...args, { component }),\n      log: (message: string, ...args: unknown[]): void =>\n        this.info(message, ...args, { component }),\n      info: (message: string, ...args: unknown[]): void =>\n        this.info(message, ...args, { component }),\n      warn: (message: string, ...args: unknown[]): void =>\n        this.warn(message, ...args, { component }),\n      error: (message: string, ...args: unknown[]): void =>\n        this.error(message, ...args, { component }),\n    };\n  }\n\n  /**\n   * Log debug information (only in development)\n   */\n  debug(message: string, ...args: unknown[]): void {\n    if (this.shouldLog('debug')) {\n      const options = this.extractOptions(args);\n      const component = options.component ? `[${options.component}]` : '';\n      console.debug(`[DEBUG]${component} ${message}`, ...options.rest);\n    }\n  }\n\n  /**\n   * Log general information\n   */\n  info(message: string, ...args: unknown[]): void {\n    if (this.shouldLog('info')) {\n      const options = this.extractOptions(args);\n      const component = options.component ? `[${options.component}]` : '';\n      console.info(`[INFO]${component} ${message}`, ...options.rest);\n    }\n  }\n\n  /**\n   * Log warnings\n   */\n  warn(message: string, ...args: unknown[]): void {\n    if (this.shouldLog('warn')) {\n      const options = this.extractOptions(args);\n      const component = options.component ? `[${options.component}]` : '';\n      console.warn(`[WARN]${component} ${message}`, ...options.rest);\n    }\n  }\n\n  /**\n   * Log errors\n   */\n  error(message: string, ...args: unknown[]): void {\n    if (this.shouldLog('error')) {\n      const options = this.extractOptions(args);\n      const component = options.component ? `[${options.component}]` : '';\n      console.error(`[ERROR]${component} ${message}`, ...options.rest);\n\n      // Store error for summary\n      this.storeError(message, options.component);\n    }\n  }\n\n  /**\n   * Extract options from args, if last arg is an object with component property\n   */\n  private extractOptions(args: unknown[]) {\n    const last = args[args.length - 1];\n    if (\n      last &&\n      typeof last === 'object' &&\n      !Array.isArray(last) &&\n      'component' in last\n    ) {\n      return {\n        component: last.component as string,\n        rest: args.slice(0, args.length - 1),\n      };\n    }\n    return { rest: args };\n  }\n\n  /**\n   * Store error in recent errors list\n   */\n  private storeError(message: string, component?: string): void {\n    this.recentErrors.unshift({\n      message,\n      timestamp: Date.now(),\n      component,\n    });\n\n    // Keep list at max length\n    if (this.recentErrors.length > this.MAX_ERRORS) {\n      this.recentErrors.pop();\n    }\n  }\n\n  /**\n   * Get a summary of recent errors\n   */\n  getErrorSummary(): string {\n    if (this.recentErrors.length === 0) {\n      return 'No recent errors';\n    }\n\n    return this.recentErrors\n      .map(err => {\n        const date = new Date(err.timestamp).toLocaleTimeString();\n        const component = err.component ? `[${err.component}]` : '';\n        return `[${date}]${component} ${err.message}`;\n      })\n      .join('\\n');\n  }\n\n  /**\n   * Get a list of all registered components\n   */\n  getComponents(): string[] {\n    return [...this.componentLoggers];\n  }\n\n  /**\n   * Check if we should log at this level\n   */\n  private shouldLog(level: LogLevel): boolean {\n    const levels: LogLevel[] = ['debug', 'info', 'warn', 'error'];\n    const currentLevelIndex = levels.indexOf(this.logLevel);\n    const targetLevelIndex = levels.indexOf(level);\n\n    return targetLevelIndex >= currentLevelIndex;\n  }\n}\n\n// Singleton instance of the logger\nexport const logger = new Logger();\n\n// Helper functions for creating component-specific loggers\nexport const createLogger = (component: string) =>\n  logger.createLogger(component);\n\n// Utility functions for direct use (for backwards compatibility)\nexport const debugLog = (message: string, ...args: unknown[]): void =>\n  logger.debug(message, ...args);\nexport const infoLog = (message: string, ...args: unknown[]): void =>\n  logger.info(message, ...args);\nexport const warnLog = (message: string, ...args: unknown[]): void =>\n  logger.warn(message, ...args);\nexport const errorLog = (message: string, ...args: unknown[]): void =>\n  logger.error(message, ...args);\n"],"version":3}