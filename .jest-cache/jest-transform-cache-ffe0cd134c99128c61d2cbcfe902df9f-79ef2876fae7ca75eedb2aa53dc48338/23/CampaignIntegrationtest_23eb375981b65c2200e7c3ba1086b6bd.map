{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/CampaignIntegration.test.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/CampaignIntegration.test.ts"],"sourcesContent":["/**\n * Campaign Integration Tests\n * Tests for the campaign system integration layer\n */\n\nimport {\n    UnintentionalAnyCampaignController,\n    UnintentionalAnyIntegrationHelper,\n    createUnintentionalAnyCampaignController\n} from '../CampaignIntegration';\n\nimport {\n    UnintentionalAnyCampaignScheduler,\n    UnintentionalAnyProgressTracker\n} from '../MetricsIntegration';\n\nimport {\n    CampaignConfig,\n    CampaignPhase\n} from '../../../../types/campaign';\n\nimport { UnintentionalAnyConfig } from '../types';\n\ndescribe('UnintentionalAnyCampaignController', () => {\n  let controller: UnintentionalAnyCampaignController;\n  let mockConfig: CampaignConfig;\n  let mockUnintentionalAnyConfig: UnintentionalAnyConfig;\n\n  beforeEach(() => {\n    mockConfig = {\n      phases: [],\n      safetySettings: {\n        maxFilesPerBatch: 15,\n        buildValidationFrequency: 5,\n        testValidationFrequency: 10,\n        corruptionDetectionEnabled: true,\n        automaticRollbackEnabled: true,\n        stashRetentionDays: 7\n      },\n      progressTargets: {\n        typeScriptErrors: 0,\n        lintingWarnings: 0,\n        buildTime: 10,\n        enterpriseSystems: 200\n      },\n      toolConfiguration: {\n        enhancedErrorFixer: 'test-script.js',\n        explicitAnyFixer: 'test-script.js',\n        unusedVariablesFixer: 'test-script.js',\n        consoleStatementFixer: 'test-script.js'\n      }\n    };\n\n    mockUnintentionalAnyConfig = {\n      maxFilesPerBatch: 15,\n      targetReductionPercentage: 15,\n      confidenceThreshold: 0.8,\n      enableDomainAnalysis: true,\n      enableDocumentation: true,\n      safetyLevel: 'CONSERVATIVE',\n      validationFrequency: 5\n    };\n\n    controller = new UnintentionalAnyCampaignController(mockConfig, mockUnintentionalAnyConfig);\n  });\n\n  describe('constructor', () => {\n    it('should create controller with default configuration', () => {\n      const defaultController = new UnintentionalAnyCampaignController(mockConfig);\n      const config = defaultController.getUnintentionalAnyConfig();\n\n      expect(config.maxFilesPerBatch).toBe(15);\n      expect(config.targetReductionPercentage).toBe(15);\n      expect(config.confidenceThreshold).toBe(0.8);\n      expect(config.safetyLevel).toBe('CONSERVATIVE');\n    });\n\n    it('should merge custom configuration with defaults', () => {\n      const customConfig = {\n        maxFilesPerBatch: 10,\n        targetReductionPercentage: 20\n      };\n\n      const customController = new UnintentionalAnyCampaignController(mockConfig, customConfig);\n      const config = customController.getUnintentionalAnyConfig();\n\n      expect(config.maxFilesPerBatch).toBe(10);\n      expect(config.targetReductionPercentage).toBe(20);\n      expect(config.confidenceThreshold).toBe(0.8); // Default value\n    });\n  });\n\n  describe('createUnintentionalAnyEliminationConfig', () => {\n    it('should create campaign configuration with unintentional any phases', () => {\n      const config = UnintentionalAnyCampaignController.createUnintentionalAnyEliminationConfig();\n\n      expect(config.phases).toBeDefined();\n      expect(config.phases.length).toBeGreaterThan(0);\n\n      const phaseIds = config.phases.map(phase => phase.id);\n      expect(phaseIds).toContain('unintentional-any-analysis');\n      expect(phaseIds).toContain('unintentional-any-replacement');\n      expect(phaseIds).toContain('intentional-any-documentation');\n    });\n\n    it('should merge base configuration with unintentional any configuration', () => {\n      const baseConfig = {\n        phases: [{\n          id: 'existing-phase',\n          name: 'Existing Phase',\n          description: 'Test phase',\n          tools: [],\n          successCriteria: {},\n          safetyCheckpoints: []\n        }]\n      };\n\n      const config = UnintentionalAnyCampaignController.createUnintentionalAnyEliminationConfig(baseConfig);\n\n      expect(config.phases.length).toBeGreaterThan(1);\n      expect(config.phases[0].id).toBe('existing-phase');\n    });\n  });\n\n  describe('getUnintentionalAnyMetrics', () => {\n    it('should return metrics with default values when linting fails', async () => {\n      const metrics = await controller.getUnintentionalAnyMetrics();\n\n      expect(metrics).toBeDefined();\n      expect(typeof metrics.totalAnyTypes).toBe('number');\n      expect(typeof metrics.intentionalAnyTypes).toBe('number');\n      expect(typeof metrics.unintentionalAnyTypes).toBe('number');\n      expect(typeof metrics.documentationCoverage).toBe('number');\n      expect(metrics.targetReduction).toBe(15);\n    });\n  });\n\n  describe('updateUnintentionalAnyConfig', () => {\n    it('should update configuration', () => {\n      const newConfig = {\n        maxFilesPerBatch: 20,\n        targetReductionPercentage: 25\n      };\n\n      controller.updateUnintentionalAnyConfig(newConfig);\n      const updatedConfig = controller.getUnintentionalAnyConfig();\n\n      expect(updatedConfig.maxFilesPerBatch).toBe(20);\n      expect(updatedConfig.targetReductionPercentage).toBe(25);\n    });\n  });\n\n  describe('validateUnintentionalAnyPhaseCompletion', () => {\n    it('should validate analysis phase completion', async () => {\n      const mockPhase: CampaignPhase = {\n        id: 'unintentional-any-analysis',\n        name: 'Analysis Phase',\n        description: 'Test analysis phase',\n        tools: [],\n        successCriteria: {},\n        safetyCheckpoints: []\n      };\n\n      const mockMetrics = {\n        totalAnyTypes: 10,\n        intentionalAnyTypes: 5,\n        unintentionalAnyTypes: 5,\n        documentedAnyTypes: 3,\n        documentationCoverage: 60,\n        reductionFromBaseline: 0,\n        targetReduction: 15\n      };\n\n      const validation = await controller.validateUnintentionalAnyPhaseCompletion(mockPhase, mockMetrics);\n\n      expect(validation.success).toBe(false); // Build validation will fail in test environment\n      expect(validation.errors.length).toBeGreaterThan(0);\n    });\n  });\n});\n\ndescribe('createUnintentionalAnyCampaignController', () => {\n  it('should create controller with factory function', () => {\n    const controller = createUnintentionalAnyCampaignController();\n\n    expect(controller).toBeInstanceOf(UnintentionalAnyCampaignController);\n\n    const config = controller.getUnintentionalAnyConfig();\n    expect(config.maxFilesPerBatch).toBe(15);\n    expect(config.targetReductionPercentage).toBe(15);\n  });\n\n  it('should create controller with custom configuration', () => {\n    const customConfig = {\n      maxFilesPerBatch: 10,\n      targetReductionPercentage: 20\n    };\n\n    const controller = createUnintentionalAnyCampaignController(undefined, customConfig);\n    const config = controller.getUnintentionalAnyConfig();\n\n    expect(config.maxFilesPerBatch).toBe(10);\n    expect(config.targetReductionPercentage).toBe(20);\n  });\n});\n\ndescribe('UnintentionalAnyIntegrationHelper', () => {\n  describe('addUnintentionalAnyPhases', () => {\n    it('should add unintentional any phases to existing configuration', () => {\n      const existingConfig: CampaignConfig = {\n        phases: [{\n          id: 'existing-phase',\n          name: 'Existing Phase',\n          description: 'Test phase',\n          tools: [],\n          successCriteria: {},\n          safetyCheckpoints: []\n        }],\n        safetySettings: {\n          maxFilesPerBatch: 15,\n          buildValidationFrequency: 5,\n          testValidationFrequency: 10,\n          corruptionDetectionEnabled: true,\n          automaticRollbackEnabled: true,\n          stashRetentionDays: 7\n        },\n        progressTargets: {\n          typeScriptErrors: 0,\n          lintingWarnings: 0,\n          buildTime: 10,\n          enterpriseSystems: 200\n        },\n        toolConfiguration: {\n          enhancedErrorFixer: 'test-script.js',\n          explicitAnyFixer: 'test-script.js',\n          unusedVariablesFixer: 'test-script.js',\n          consoleStatementFixer: 'test-script.js'\n        }\n      };\n\n      const updatedConfig = UnintentionalAnyIntegrationHelper.addUnintentionalAnyPhases(existingConfig);\n\n      expect(updatedConfig.phases.length).toBeGreaterThan(1);\n      expect(updatedConfig.phases[0].id).toBe('existing-phase');\n\n      const phaseIds = updatedConfig.phases.map(phase => phase.id);\n      expect(phaseIds).toContain('unintentional-any-analysis');\n    });\n  });\n\n  describe('createAutomationScriptCompatibility', () => {\n    it('should return automation script paths', () => {\n      const compatibility = UnintentionalAnyIntegrationHelper.createAutomationScriptCompatibility();\n\n      expect(compatibility.explicitAnyFixer).toContain('ProgressiveImprovementEngine');\n      expect(compatibility.unintentionalAnyAnalyzer).toContain('AnyTypeClassifier');\n      expect(compatibility.documentationGenerator).toContain('AutoDocumentationGenerator');\n    });\n  });\n\n  describe('resolveCampaignPriorityConflicts', () => {\n    it('should resolve conflicts between multiple campaigns', () => {\n      const campaign1: CampaignConfig = {\n        phases: [{\n          id: 'typescript-phase',\n          name: 'TypeScript Phase',\n          description: 'Test phase',\n          tools: [],\n          successCriteria: {},\n          safetyCheckpoints: []\n        }],\n        safetySettings: {\n          maxFilesPerBatch: 20,\n          buildValidationFrequency: 3,\n          testValidationFrequency: 10,\n          corruptionDetectionEnabled: true,\n          automaticRollbackEnabled: true,\n          stashRetentionDays: 7\n        },\n        progressTargets: {\n          typeScriptErrors: 0,\n          lintingWarnings: 0,\n          buildTime: 10,\n          enterpriseSystems: 200\n        },\n        toolConfiguration: {\n          enhancedErrorFixer: 'test-script.js',\n          explicitAnyFixer: 'test-script.js',\n          unusedVariablesFixer: 'test-script.js',\n          consoleStatementFixer: 'test-script.js'\n        }\n      };\n\n      const campaign2: CampaignConfig = {\n        phases: [{\n          id: 'linting-phase',\n          name: 'Linting Phase',\n          description: 'Test phase',\n          tools: [],\n          successCriteria: {},\n          safetyCheckpoints: []\n        }],\n        safetySettings: {\n          maxFilesPerBatch: 15,\n          buildValidationFrequency: 5,\n          testValidationFrequency: 10,\n          corruptionDetectionEnabled: true,\n          automaticRollbackEnabled: true,\n          stashRetentionDays: 7\n        },\n        progressTargets: {\n          typeScriptErrors: 0,\n          lintingWarnings: 0,\n          buildTime: 10,\n          enterpriseSystems: 200\n        },\n        toolConfiguration: {\n          enhancedErrorFixer: 'test-script.js',\n          explicitAnyFixer: 'test-script.js',\n          unusedVariablesFixer: 'test-script.js',\n          consoleStatementFixer: 'test-script.js'\n        }\n      };\n\n      const priorityOrder = ['typescript', 'linting'];\n      const mergedConfig = UnintentionalAnyIntegrationHelper.resolveCampaignPriorityConflicts(\n        [campaign1, campaign2],\n        priorityOrder\n      );\n\n      expect(mergedConfig.phases.length).toBe(2);\n      expect(mergedConfig.phases[0].id).toBe('typescript-phase');\n      expect(mergedConfig.phases[1].id).toBe('linting-phase');\n\n      // Should use most conservative safety settings\n      expect(mergedConfig.safetySettings.maxFilesPerBatch).toBe(15);\n      expect(mergedConfig.safetySettings.buildValidationFrequency).toBe(3);\n    });\n  });\n});\n\ndescribe('UnintentionalAnyProgressTracker', () => {\n  let tracker: UnintentionalAnyProgressTracker;\n\n  beforeEach(() => {\n    tracker = new UnintentionalAnyProgressTracker();\n  });\n\n  describe('getUnintentionalAnyMetrics', () => {\n    it('should return default metrics when linting fails', async () => {\n      const metrics = await tracker.getUnintentionalAnyMetrics();\n\n      expect(metrics).toBeDefined();\n      expect(metrics.totalAnyTypes).toBe(0);\n      expect(metrics.intentionalAnyTypes).toBe(0);\n      expect(metrics.unintentionalAnyTypes).toBe(0);\n      expect(metrics.documentationCoverage).toBe(0);\n      expect(metrics.targetReduction).toBe(15);\n    });\n  });\n\n  describe('setBaselineMetrics', () => {\n    it('should set baseline metrics', async () => {\n      await tracker.setBaselineMetrics();\n\n      const history = tracker.getUnintentionalAnyMetricsHistory();\n      expect(history.length).toBeGreaterThan(0);\n    });\n  });\n\n  describe('validateUnintentionalAnyMilestone', () => {\n    it('should validate baseline-established milestone', async () => {\n      const isValid = await tracker.validateUnintentionalAnyMilestone('baseline-established');\n      expect(typeof isValid).toBe('boolean');\n    });\n\n    it('should validate analysis-complete milestone', async () => {\n      const isValid = await tracker.validateUnintentionalAnyMilestone('analysis-complete');\n      expect(typeof isValid).toBe('boolean');\n    });\n\n    it('should return false for unknown milestone', async () => {\n      const isValid = await tracker.validateUnintentionalAnyMilestone('unknown-milestone' as any);\n      expect(isValid).toBe(false);\n    });\n  });\n\n  describe('getDashboardMetrics', () => {\n    it('should return dashboard-compatible metrics', async () => {\n      const dashboardMetrics = await tracker.getDashboardMetrics();\n\n      expect(dashboardMetrics.current).toBeDefined();\n      expect(dashboardMetrics.trend).toMatch(/improving|stable|declining/);\n      expect(Array.isArray(dashboardMetrics.topFiles)).toBe(true);\n      expect(Array.isArray(dashboardMetrics.alerts)).toBe(true);\n      expect(Array.isArray(dashboardMetrics.recommendations)).toBe(true);\n      expect(dashboardMetrics.lastUpdated).toBeInstanceOf(Date);\n    });\n  });\n\n  describe('resetUnintentionalAnyMetricsHistory', () => {\n    it('should reset metrics history', async () => {\n      await tracker.setBaselineMetrics();\n      expect(tracker.getUnintentionalAnyMetricsHistory().length).toBeGreaterThan(0);\n\n      tracker.resetUnintentionalAnyMetricsHistory();\n      expect(tracker.getUnintentionalAnyMetricsHistory().length).toBe(0);\n    });\n  });\n});\n\ndescribe('UnintentionalAnyCampaignScheduler', () => {\n  let scheduler: UnintentionalAnyCampaignScheduler;\n\n  beforeEach(() => {\n    scheduler = new UnintentionalAnyCampaignScheduler();\n  });\n\n  describe('shouldTriggerCampaign', () => {\n    it('should return trigger decision', async () => {\n      const decision = await scheduler.shouldTriggerCampaign();\n\n      expect(decision.shouldTrigger).toBeDefined();\n      expect(typeof decision.shouldTrigger).toBe('boolean');\n      expect(decision.reason).toBeDefined();\n      expect(decision.priority).toMatch(/low|medium|high/);\n    });\n  });\n\n  describe('resolveCampaignConflicts', () => {\n    it('should resolve conflicts with no active campaigns', () => {\n      const resolution = scheduler.resolveCampaignConflicts([], 'unintentional-any-elimination');\n\n      expect(resolution.canProceed).toBe(true);\n      expect(resolution.conflictingCampaigns).toEqual([]);\n      expect(resolution.resolution).toContain('No conflicts');\n    });\n\n    it('should detect conflicts with typescript campaigns', () => {\n      const activeCampaigns = ['typescript-error-elimination', 'other-campaign'];\n      const resolution = scheduler.resolveCampaignConflicts(activeCampaigns, 'unintentional-any-elimination');\n\n      expect(resolution.conflictingCampaigns).toContain('typescript-error-elimination');\n      expect(resolution.conflictingCampaigns).not.toContain('other-campaign');\n    });\n\n    it('should prevent execution when critical campaigns are active', () => {\n      const activeCampaigns = ['critical-typescript-emergency'];\n      const resolution = scheduler.resolveCampaignConflicts(activeCampaigns, 'unintentional-any-elimination');\n\n      expect(resolution.canProceed).toBe(false);\n      expect(resolution.resolution).toContain('Wait for critical campaigns');\n    });\n  });\n\n  describe('getRecommendedExecutionTime', () => {\n    it('should recommend immediate execution for low load', () => {\n      const recommendation = scheduler.getRecommendedExecutionTime([], 'low');\n\n      expect(recommendation.recommendedTime).toBeInstanceOf(Date);\n      expect(recommendation.reason).toContain('immediately');\n      expect(recommendation.estimatedDuration).toBeLessThan(30);\n    });\n\n    it('should delay execution for high load', () => {\n      const recommendation = scheduler.getRecommendedExecutionTime(['active-campaign'], 'high');\n\n      expect(recommendation.recommendedTime).toBeInstanceOf(Date);\n      expect(recommendation.reason).toContain('later');\n      expect(recommendation.estimatedDuration).toBeGreaterThan(30);\n    });\n  });\n});\n"],"version":3}