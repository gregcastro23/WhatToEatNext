{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/components/recipes/__tests__/RecipeBuilderSimple.test.tsx","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/components/recipes/__tests__/RecipeBuilderSimple.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor, act } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport RecipeBuilderSimple from '../RecipeBuilderSimple';\n\n// Mock logger\njest.mock('@/utils/logger', () => ({\n  logger: {\n    info: jest.fn(),\n    debug: jest.fn(),\n    warn: jest.fn(),\n    error: jest.fn()\n  }\n}));\n\ndescribe('RecipeBuilderSimple', () => {\n  const mockOnRecipeComplete = jest.fn();\n  const mockOnSave = jest.fn();\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('renders without crashing', () => {\n    render(<RecipeBuilderSimple />);\n\n    expect(screen.getByText('Create Your Recipe')).toBeInTheDocument();\n    expect(screen.getByLabelText('Recipe Name')).toBeInTheDocument();\n    expect(screen.getByText('Ingredients')).toBeInTheDocument();\n    expect(screen.getByText('Instructions')).toBeInTheDocument();\n  });\n\n  it('renders with initial props', () => {\n    render(\n      <RecipeBuilderSimple\n        initialIngredients={['tomato', 'basil']}\n        initialMethods={['sauté']}\n        onRecipeComplete={mockOnRecipeComplete}\n        onSave={mockOnSave}\n      />\n    );\n\n    expect(screen.getByDisplayValue('')).toBeInTheDocument(); // Recipe name input\n  });\n\n  it('updates recipe name', async () => {\n    const user = userEvent.setup();\n    render(<RecipeBuilderSimple />);\n\n    const nameInput = screen.getByLabelText('Recipe Name');\n\n    await user.type(nameInput, 'My Test Recipe');\n\n    expect(nameInput).toHaveValue('My Test Recipe');\n  });\n\n  it('updates servings, prep time, and cook time', async () => {\n    const user = userEvent.setup();\n    render(<RecipeBuilderSimple />);\n\n    const servingsInput = screen.getByLabelText('Servings');\n    const prepTimeInput = screen.getByLabelText('Prep Time (min)');\n    const cookTimeInput = screen.getByLabelText('Cook Time (min)');\n\n    await user.clear(servingsInput);\n    await user.type(servingsInput, '6');\n\n    await user.clear(prepTimeInput);\n    await user.type(prepTimeInput, '20');\n\n    await user.clear(cookTimeInput);\n    await user.type(cookTimeInput, '45');\n\n    expect(servingsInput).toHaveValue(6);\n    expect(prepTimeInput).toHaveValue(20);\n    expect(cookTimeInput).toHaveValue(45);\n  });\n\n  it('adds and removes ingredients', async () => {\n    const user = userEvent.setup();\n    render(<RecipeBuilderSimple />);\n\n    // Initially no ingredients\n    expect(screen.getByText('No ingredients added yet. Click \"Add Ingredient\" to start.')).toBeInTheDocument();\n\n    // Add ingredient\n    const addIngredientButton = screen.getByText('Add Ingredient');\n    await user.click(addIngredientButton);\n\n    // Should now have one ingredient row\n    const quantityInputs = screen.getAllByPlaceholderText('1 cup');\n    const nameInputs = screen.getAllByPlaceholderText('Ingredient name');\n    const prepInputs = screen.getAllByPlaceholderText('diced, chopped...');\n\n    expect(quantityInputs).toHaveLength(1);\n    expect(nameInputs).toHaveLength(1);\n    expect(prepInputs).toHaveLength(1);\n\n    // Fill in ingredient details\n    await user.type(quantityInputs[0], '2 cups');\n    await user.type(nameInputs[0], 'Tomatoes');\n    await user.type(prepInputs[0], 'diced');\n\n    expect(quantityInputs[0]).toHaveValue('2 cups');\n    expect(nameInputs[0]).toHaveValue('Tomatoes');\n    expect(prepInputs[0]).toHaveValue('diced');\n\n    // Remove ingredient\n    const removeButton = screen.getByTitle('Remove ingredient');\n    await user.click(removeButton);\n\n    // Should be back to no ingredients\n    expect(screen.getByText('No ingredients added yet. Click \"Add Ingredient\" to start.')).toBeInTheDocument();\n  });\n\n  it('adds and removes instruction steps', async () => {\n    const user = userEvent.setup();\n    render(<RecipeBuilderSimple />);\n\n    // Initially no steps\n    expect(screen.getByText('No steps added yet. Click \"Add Step\" to start.')).toBeInTheDocument();\n\n    // Add step\n    const addStepButton = screen.getByText('Add Step');\n    await user.click(addStepButton);\n\n    // Should now have one step\n    const stepTextareas = screen.getAllByPlaceholderText('Describe this step...');\n    const timingInputs = screen.getAllByPlaceholderText('5 min');\n\n    expect(stepTextareas).toHaveLength(1);\n    expect(timingInputs).toHaveLength(1);\n    expect(screen.getByText('1')).toBeInTheDocument(); // Step number\n\n    // Fill in step details\n    await user.type(stepTextareas[0], 'Heat oil in a large pan');\n    await user.type(timingInputs[0], '2 min');\n\n    expect(stepTextareas[0]).toHaveValue('Heat oil in a large pan');\n    expect(timingInputs[0]).toHaveValue('2 min');\n\n    // Add another step\n    await user.click(addStepButton);\n\n    // Should now have two steps with correct numbering\n    expect(screen.getByText('1')).toBeInTheDocument();\n    expect(screen.getByText('2')).toBeInTheDocument();\n\n    // Remove first step\n    const removeButtons = screen.getAllByTitle('Remove step');\n    await user.click(removeButtons[0]);\n\n    // Should have one step, renumbered to 1\n    const remainingSteps = screen.getAllByPlaceholderText('Describe this step...');\n    expect(remainingSteps).toHaveLength(1);\n    expect(screen.getByText('1')).toBeInTheDocument();\n    expect(screen.queryByText('2')).not.toBeInTheDocument();\n  });\n\n  it('disables save button when recipe is invalid', async () => {\n    render(<RecipeBuilderSimple />);\n\n    const saveButton = screen.getByText('Save Recipe');\n    expect(saveButton).toBeDisabled();\n  });\n\n  it('enables save button when recipe is valid', async () => {\n    const user = userEvent.setup();\n    render(<RecipeBuilderSimple />);\n\n    // Add recipe name\n    const nameInput = screen.getByLabelText('Recipe Name');\n    await user.type(nameInput, 'Test Recipe');\n\n    // Add ingredient\n    const addIngredientButton = screen.getByText('Add Ingredient');\n    await user.click(addIngredientButton);\n\n    const nameInputs = screen.getAllByPlaceholderText('Ingredient name');\n    await user.type(nameInputs[0], 'Tomatoes');\n\n    // Add step\n    const addStepButton = screen.getByText('Add Step');\n    await user.click(addStepButton);\n\n    const stepTextareas = screen.getAllByPlaceholderText('Describe this step...');\n    await user.type(stepTextareas[0], 'Cook the tomatoes');\n\n    // Save button should now be enabled\n    const saveButton = screen.getByText('Save Recipe');\n    expect(saveButton).toBeEnabled();\n  });\n\n  it('calls onSave and onRecipeComplete when recipe is saved', async () => {\n    const user = userEvent.setup();\n    render(\n      <RecipeBuilderSimple\n        onSave={mockOnSave}\n        onRecipeComplete={mockOnRecipeComplete}\n      />\n    );\n\n    // Create a valid recipe\n    const nameInput = screen.getByLabelText('Recipe Name');\n    await user.type(nameInput, 'Test Recipe');\n\n    const addIngredientButton = screen.getByText('Add Ingredient');\n    await user.click(addIngredientButton);\n\n    const nameInputs = screen.getAllByPlaceholderText('Ingredient name');\n    await user.type(nameInputs[0], 'Tomatoes');\n\n    const addStepButton = screen.getByText('Add Step');\n    await user.click(addStepButton);\n\n    const stepTextareas = screen.getAllByPlaceholderText('Describe this step...');\n    await user.type(stepTextareas[0], 'Cook the tomatoes');\n\n    // Save the recipe\n    const saveButton = screen.getByText('Save Recipe');\n    await user.click(saveButton);\n\n    expect(mockOnSave).toHaveBeenCalledWith(\n      expect.objectContaining({\n        name: 'Test Recipe',\n        ingredients: expect.arrayContaining([\n          expect.objectContaining({\n            name: 'Tomatoes'\n          })\n        ]),\n        steps: expect.arrayContaining([\n          expect.objectContaining({\n            instruction: 'Cook the tomatoes'\n          })\n        ])\n      })\n    );\n\n    expect(mockOnRecipeComplete).toHaveBeenCalledWith(\n      expect.objectContaining({\n        name: 'Test Recipe'\n      })\n    );\n  });\n\n  it('displays recipe summary when recipe has content', async () => {\n    const user = userEvent.setup();\n    render(<RecipeBuilderSimple />);\n\n    // Add recipe name\n    const nameInput = screen.getByLabelText('Recipe Name');\n    await user.type(nameInput, 'Test Recipe');\n\n    // Add ingredient\n    const addIngredientButton = screen.getByText('Add Ingredient');\n    await user.click(addIngredientButton);\n\n    const nameInputs = screen.getAllByPlaceholderText('Ingredient name');\n    await user.type(nameInputs[0], 'Tomatoes');\n\n    // Should show recipe summary\n    await waitFor(() => {\n      expect(screen.getByText('Recipe Summary')).toBeInTheDocument();\n      expect(screen.getByText('Test Recipe')).toBeInTheDocument();\n      expect(screen.getByText(/Serves 4/)).toBeInTheDocument();\n      expect(screen.getByText(/1 ingredients/)).toBeInTheDocument();\n    });\n  });\n\n  it('calculates total time correctly', async () => {\n    const user = userEvent.setup();\n    render(<RecipeBuilderSimple />);\n\n    // Set prep and cook times\n    const prepTimeInput = screen.getByLabelText('Prep Time (min)');\n    const cookTimeInput = screen.getByLabelText('Cook Time (min)');\n\n    await user.clear(prepTimeInput);\n    await user.type(prepTimeInput, '15');\n\n    await user.clear(cookTimeInput);\n    await user.type(cookTimeInput, '30');\n\n    // Add minimum required fields for summary\n    const nameInput = screen.getByLabelText('Recipe Name');\n    await user.type(nameInput, 'Test Recipe');\n\n    const addIngredientButton = screen.getByText('Add Ingredient');\n    await user.click(addIngredientButton);\n\n    const nameInputs = screen.getAllByPlaceholderText('Ingredient name');\n    await user.type(nameInputs[0], 'Tomatoes');\n\n    // Should show correct total time in summary\n    await waitFor(() => {\n      expect(screen.getByText(/Total time: 45 minutes/)).toBeInTheDocument();\n    });\n  });\n\n  it('handles ingredient updates correctly', async () => {\n    const user = userEvent.setup();\n    render(<RecipeBuilderSimple />);\n\n    // Add ingredient\n    const addIngredientButton = screen.getByText('Add Ingredient');\n    await user.click(addIngredientButton);\n\n    const quantityInputs = screen.getAllByPlaceholderText('1 cup');\n    const nameInputs = screen.getAllByPlaceholderText('Ingredient name');\n    const prepInputs = screen.getAllByPlaceholderText('diced, chopped...');\n\n    // Update all fields\n    await user.type(quantityInputs[0], '2 cups');\n    await user.type(nameInputs[0], 'Fresh Tomatoes');\n    await user.type(prepInputs[0], 'finely diced');\n\n    expect(quantityInputs[0]).toHaveValue('2 cups');\n    expect(nameInputs[0]).toHaveValue('Fresh Tomatoes');\n    expect(prepInputs[0]).toHaveValue('finely diced');\n  });\n\n  it('handles step updates correctly', async () => {\n    const user = userEvent.setup();\n    render(<RecipeBuilderSimple />);\n\n    // Add step\n    const addStepButton = screen.getByText('Add Step');\n    await user.click(addStepButton);\n\n    const stepTextareas = screen.getAllByPlaceholderText('Describe this step...');\n    const timingInputs = screen.getAllByPlaceholderText('5 min');\n\n    // Update step details\n    await user.type(stepTextareas[0], 'Heat olive oil in a large skillet over medium heat');\n    await user.type(timingInputs[0], '3 min');\n\n    expect(stepTextareas[0]).toHaveValue('Heat olive oil in a large skillet over medium heat');\n    expect(timingInputs[0]).toHaveValue('3 min');\n  });\n\n  it('maintains step numbering when steps are removed', async () => {\n    const user = userEvent.setup();\n    render(<RecipeBuilderSimple />);\n\n    // Add three steps\n    const addStepButton = screen.getByText('Add Step');\n    await user.click(addStepButton);\n    await user.click(addStepButton);\n    await user.click(addStepButton);\n\n    // Should have steps 1, 2, 3\n    expect(screen.getByText('1')).toBeInTheDocument();\n    expect(screen.getByText('2')).toBeInTheDocument();\n    expect(screen.getByText('3')).toBeInTheDocument();\n\n    // Remove middle step (step 2)\n    const removeButtons = screen.getAllByTitle('Remove step');\n    await user.click(removeButtons[1]);\n\n    // Should now have steps 1, 2 (renumbered)\n    expect(screen.getByText('1')).toBeInTheDocument();\n    expect(screen.getByText('2')).toBeInTheDocument();\n    expect(screen.queryByText('3')).not.toBeInTheDocument();\n\n    // Should have 2 steps total\n    const remainingSteps = screen.getAllByPlaceholderText('Describe this step...');\n    expect(remainingSteps).toHaveLength(2);\n  });\n});\n\ndescribe('RecipeBuilderSimple Performance', () => {\n  it('memoizes expensive calculations', async () => {\n    const user = userEvent.setup();\n\n    // Mock performance.now to track calculation calls\n    const mockPerformanceNow = jest.spyOn(performance, 'now');\n\n    render(<RecipeBuilderSimple />);\n\n    // Add recipe details\n    const nameInput = screen.getByLabelText('Recipe Name');\n    await user.type(nameInput, 'Performance Test Recipe');\n\n    const prepTimeInput = screen.getByLabelText('Prep Time (min)');\n    const cookTimeInput = screen.getByLabelText('Cook Time (min)');\n\n    await user.clear(prepTimeInput);\n    await user.type(prepTimeInput, '10');\n\n    await user.clear(cookTimeInput);\n    await user.type(cookTimeInput, '20');\n\n    // Add ingredient to trigger summary\n    const addIngredientButton = screen.getByText('Add Ingredient');\n    await user.click(addIngredientButton);\n\n    const nameInputs = screen.getAllByPlaceholderText('Ingredient name');\n    await user.type(nameInputs[0], 'Test Ingredient');\n\n    // Verify total time is calculated correctly\n    await waitFor(() => {\n      expect(screen.getByText(/Total time: 30 minutes/)).toBeInTheDocument();\n    });\n\n    mockPerformanceNow.mockRestore();\n  });\n});"],"version":3}