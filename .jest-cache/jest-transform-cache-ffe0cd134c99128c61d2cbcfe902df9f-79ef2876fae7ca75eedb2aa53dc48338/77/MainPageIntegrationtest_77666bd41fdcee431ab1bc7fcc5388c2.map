{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/__tests__/integration/MainPageIntegration.test.tsx","mappings":";;;;;;AAOA,wBAAwB;AACxB,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,CAAC;IAClC,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;QAChB,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;QACf,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;QACf,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;QAClB,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;QAClB,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;KACnB,CAAC;CACH,CAAC,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;AAChD,IAAI,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;AAC1C,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE,CAAC,CAAC;IACjC,MAAM,EAAE;QACN,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE;QAChB,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;QACf,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;QACf,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE;KACjB;CACF,CAAC,CAAC,CAAC;AAEJ,0CAA0C;AAC1C,IAAI,CAAC,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;IAChD,OAAO,SAAS,sBAAsB;QACpC,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,eAAK,CAAC,QAAQ,CAAgB,IAAI,CAAC,CAAC;QAElF,OAAO,CACL,gDAAiB,qBAAqB,aACpC,qEAAgC,EAChC,gCAAK,SAAS,EAAC,cAAc,YAC1B,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAC1D,mCAEE,OAAO,EAAE,GAAG,EAAE,CAAC,kBAAkB,CAAC,OAAO,CAAC,EAC1C,SAAS,EAAE,eAAe,KAAK,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,iBAC3C,WAAW,OAAO,CAAC,WAAW,EAAE,EAAE,YAE9C,OAAO,IALH,OAAO,CAML,CACV,CAAC,GACE,EACL,eAAe,IAAI,CAClB,gDAAiB,kBAAkB,2BACtB,eAAe,IACtB,CACP,IACG,CACP,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,IAAI,CAAC,oCAAoC,EAAE,GAAG,EAAE;IACnD,OAAO,SAAS,yBAAyB,CAAC,EAAE,YAAY,GAAG,CAAC,EAA6B;QACvF,MAAM,CAAC,mBAAmB,EAAE,sBAAsB,CAAC,GAAG,eAAK,CAAC,QAAQ,CAAW,EAAE,CAAC,CAAC;QAEnF,MAAM,WAAW,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QACzG,MAAM,oBAAoB,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;QAEhE,MAAM,gBAAgB,GAAG,CAAC,UAAkB,EAAE,EAAE;YAC9C,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAC5B,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;gBACvB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,UAAU,CAAC;gBACpC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,UAAU,CAAC,CAC1B,CAAC;QACJ,CAAC,CAAC;QAEF,OAAO,CACL,gDAAiB,wBAAwB,aACvC,wEAAmC,EACnC,gCAAK,SAAS,EAAC,iBAAiB,YAC7B,oBAAoB,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,CACtC,mCAEE,OAAO,EAAE,GAAG,EAAE,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAC3C,SAAS,EAAE,mBAAmB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,iBACxD,cAAc,UAAU,CAAC,WAAW,EAAE,EAAE,YAEpD,UAAU,IALN,UAAU,CAMR,CACV,CAAC,GACE,EACN,gDAAiB,sBAAsB,2BAC1B,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,IACrC,IACF,CACP,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,IAAI,CAAC,oCAAoC,EAAE,GAAG,EAAE;IACnD,OAAO,SAAS,yBAAyB,CAAC,EACxC,YAAY,GAAG,CAAC,EAChB,UAAU,EAIX;QACC,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,eAAK,CAAC,QAAQ,CAAgB,IAAI,CAAC,CAAC;QAEhF,MAAM,OAAO,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC5F,MAAM,gBAAgB,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;QAExD,OAAO,CACL,gDAAiB,iBAAiB,aAChC,6DAAwB,EACxB,gCAAK,SAAS,EAAC,cAAc,YAC1B,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAC9B,mCAEE,OAAO,EAAE,GAAG,EAAE,CAAC,iBAAiB,CAAC,MAAM,CAAC,EACxC,SAAS,EAAE,cAAc,KAAK,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,iBACzC,UAAU,MAAM,CAAC,WAAW,EAAE,EAAE,YAE5C,MAAM,IALF,MAAM,CAMJ,CACV,CAAC,GACE,EACL,cAAc,IAAI,CACjB,gDAAiB,iBAAiB,2BACrB,cAAc,IACrB,CACP,EACD,mCAAQ,OAAO,EAAE,UAAU,iBAAc,mBAAmB,kCAEnD,IACL,CACP,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,IAAI,CAAC,0CAA0C,EAAE,GAAG,EAAE;IACzD,OAAO,SAAS,uBAAuB;QACrC,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,eAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,eAAK,CAAC,QAAQ,CAAW,EAAE,CAAC,CAAC;QACnE,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,eAAK,CAAC,QAAQ,CAAW,EAAE,CAAC,CAAC;QAEvD,MAAM,aAAa,GAAG,GAAG,EAAE;YACzB,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,EAAE,cAAc,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC;QAEF,MAAM,OAAO,GAAG,GAAG,EAAE;YACnB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,EAAE,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC;QAEF,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,EAAE,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QAEhF,OAAO,CACL,gDAAiB,gBAAgB,aAC/B,4DAAuB,EACvB,kCACE,IAAI,EAAC,MAAM,EACX,WAAW,EAAC,aAAa,EACzB,KAAK,EAAE,UAAU,EACjB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,iBAClC,mBAAmB,GAC/B,EACF,4CACE,mCAAQ,OAAO,EAAE,aAAa,iBAAc,gBAAgB,+BAEnD,EACT,gDAAiB,mBAAmB,8BACpB,WAAW,CAAC,MAAM,IAC5B,IACF,EACN,4CACE,mCAAQ,OAAO,EAAE,OAAO,iBAAc,UAAU,yBAEvC,EACT,gDAAiB,aAAa,wBACpB,KAAK,CAAC,MAAM,IAChB,IACF,EACN,mCACE,QAAQ,EAAE,CAAC,OAAO,iBACN,aAAa,4BAGlB,IACL,CACP,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,IAAI,CAAC,0CAA0C,EAAE,GAAG,EAAE;IACzD,OAAO,SAAS,yBAAyB;QACvC,OAAO,CACL,gDAAiB,YAAY,aAC3B,yDAAoB,EACpB,8DAA0B,EAC1B,yEAAqC,IACjC,CACP,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAzMH,kDAA0B;AAC1B,kDAAiF;AACjF,6EAAoD;AACpD,wFAAgE;AAChE,8DAAmE;AACnE,uEAA8G;AAsM9G,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;IAC3C,MAAM,qBAAqB,GAAG;QAC5B,KAAK,EAAE;YACL,iBAAiB,EAAE;gBACjB,OAAO,EAAE,OAAO;aACjB;YACD,cAAc,EAAE;gBACd,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,GAAG;gBACV,KAAK,EAAE,GAAG;gBACV,GAAG,EAAE,GAAG;aACT;SACF;QACD,kBAAkB,EAAE;YAClB,GAAG,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;SACvB;QACD,SAAS,EAAE,IAAI;KAChB,CAAC;IAEF,MAAM,mBAAmB,GAAG;QAC1B,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE;QACpB,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;KAC9B,CAAC;IAEF,MAAM,sBAAsB,GAAG;QAC7B,qBAAqB,EAAE,IAAI,CAAC,EAAE,EAAE;KACjC,CAAC;IAEF,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;QAEpB,qBAA2B,CAAC,eAAe,CAAC,qBAAqB,CAAC,CAAC;QACnE,yCAAgC,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC;QACtE,4CAAmC,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC;QAC5E,0CAAiC,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAE9D,sBAAsB;QACtB,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,SAAS,EAAE;YACvC,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QAEH,qCAAqC;QACrC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC,kBAAkB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACjE,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE;YACzB,KAAK,EAAE,EAAE;YACT,SAAS,EAAE;gBACT,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE;gBACd,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE;aAClB;SACM,CAAA,CAAC,CAAC;IACb,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;QACrE,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,IAAA,cAAM,EAAC,uBAAC,wBAAc,KAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,kCAAkC;QAClC,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;YACjB,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;YACtE,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;YACzE,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;YAClE,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACnE,CAAC,CAAC,CAAC;QAEH,yBAAyB;QACzB,MAAM,aAAa,GAAG,cAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;QAC5D,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,iBAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAElE,4BAA4B;QAC5B,MAAM,YAAY,GAAG,cAAM,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;QAC/D,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,iBAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAEnE,gCAAgC;QAChC,MAAM,WAAW,GAAG,cAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QACvD,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,iBAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IAClE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;QAC7D,MAAM,qBAAqB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAExC,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,IAAA,cAAM,EAAC,uBAAC,wBAAc,IAAC,iBAAiB,EAAE,qBAAqB,GAAI,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;QAEH,qCAAqC;QACrC,MAAM,gBAAgB,GAAG,cAAM,CAAC,SAAS,CAAC,yBAAyB,CAAC,CAAC;QACrE,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,iBAAS,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,qBAAqB,CAAC,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAE9D,yCAAyC;QACzC,MAAM,oBAAoB,GAAG,cAAM,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC;QAC5E,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,iBAAS,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,qBAAqB,CAAC,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;QAC7D,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,IAAA,cAAM,EAAC,uBAAC,wBAAc,KAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;YACjB,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACxE,CAAC,CAAC,CAAC;QAEH,0CAA0C;QAC1C,MAAM,aAAa,GAAG,cAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;QAC5D,MAAM,YAAY,GAAG,cAAM,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;QAC/D,MAAM,WAAW,GAAG,cAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAEvD,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,iBAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;YAC/B,iBAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAC9B,iBAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,mCAAmC;QACnC,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAClE,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACnE,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAEhE,iCAAiC;QACjC,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;YACjB,MAAM,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAC3D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,IAAI,GAAG,oBAAS,CAAC,KAAK,EAAE,CAAC;QAE/B,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,IAAA,cAAM,EAAC,uBAAC,wBAAc,KAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;YACjB,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACnE,CAAC,CAAC,CAAC;QAEH,oBAAoB;QACpB,MAAM,eAAe,GAAG,cAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;QAChE,MAAM,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;QAEhD,4BAA4B;QAC5B,MAAM,mBAAmB,GAAG,cAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;QACjE,MAAM,aAAa,GAAG,cAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAErD,MAAM,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QACtC,MAAM,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QACtC,MAAM,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAEhC,gBAAgB;QAChB,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAC/D,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAEzD,gCAAgC;QAChC,MAAM,UAAU,GAAG,cAAM,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QACrD,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,mDAAmD;QACnD,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;QAE7E,0CAA0C;QAC1C,MAAM,cAAc,GAAG,GAAG,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAC5C,CAAC,CAAC;QAEF,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,IAAA,cAAM,EACJ,uBAAC,wBAAc,cACb,uBAAC,cAAc,KAAG,GACH,CAClB,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,kDAAkD;QAClD,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAEjE,UAAU,CAAC,WAAW,EAAE,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;QACvD,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,IAAA,cAAM,EAAC,uBAAC,wBAAc,IAAC,SAAS,EAAE,IAAI,GAAI,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;YACjB,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAC5D,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAChE,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IAC7E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,IAAA,cAAM,EAAC,uBAAC,wBAAc,KAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,uCAAuC;QACvC,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,gCAAgC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAC/E,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,mCAAmC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAClF,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAC3E,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAE1E,8BAA8B;QAC9B,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;YACjB,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;YACtE,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;YACzE,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;YAClE,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACnE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,IAAA,cAAM,EAAC,uBAAC,wBAAc,KAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;YACjB,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAC3E,CAAC,CAAC,CAAC;QAEH,8BAA8B;QAC9B,MAAM,YAAY,GAAG,cAAM,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;QAC/D,MAAM,WAAW,GAAG,cAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;QAC5D,MAAM,YAAY,GAAG,cAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;QAE7D,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,iBAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAC9B,iBAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAC7B,iBAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,6BAA6B;QAC7B,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,oCAAoC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAEnF,yCAAyC;QACzC,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;YACjB,MAAM,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAC3D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,UAAU,GAAG;YACjB,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;SAChB,CAAC;QAEF,oDAAoD;QACpD,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,CAAC;YACpC,SAAS,EAAE,GAAG,EAAE,CAAC,UAAU;SAC5B,CAAC,CAAC,CAAC;QAEJ,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,IAAA,cAAM,EAAC,uBAAC,wBAAc,KAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE;YACjB,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,MAAM,cAAc,GAAG,cAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;QAC/D,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,iBAAS,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;QAC7C,gDAAgD;QAChD,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,YAAY,EAAE;YAC1C,QAAQ,EAAE,IAAI;YACd,YAAY,EAAE,IAAI;YAClB,KAAK,EAAE,GAAG;SACX,CAAC,CAAC;QAEH,MAAM,IAAA,WAAG,EAAC,KAAK,IAAI,EAAE;YACnB,IAAA,cAAM,EAAC,uBAAC,wBAAc,KAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,oDAAoD;QACpD,4EAA4E;QAC5E,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACjE,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACrD,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IAC7D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/__tests__/integration/MainPageIntegration.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor, act } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport MainPageLayout from '@/components/layout/MainPageLayout';\nimport { useAlchemical } from '@/contexts/AlchemicalContext/hooks';\nimport { useNavigationState, useScrollPreservation, useAutoStateCleanup } from '@/hooks/useStatePreservation';\n\n// Mock all dependencies\njest.mock('next/navigation', () => ({\n  useRouter: () => ({\n    push: jest.fn(),\n    back: jest.fn(),\n    forward: jest.fn(),\n    refresh: jest.fn(),\n    replace: jest.fn()\n  })\n}));\n\njest.mock('@/contexts/AlchemicalContext/hooks');\njest.mock('@/hooks/useStatePreservation');\njest.mock('@/utils/logger', () => ({\n  logger: {\n    debug: jest.fn(),\n    info: jest.fn(),\n    warn: jest.fn(),\n    error: jest.fn()\n  }\n}));\n\n// Mock components with realistic behavior\njest.mock('@/components/CuisineRecommender', () => {\n  return function MockCuisineRecommender() {\n    const [selectedCuisine, setSelectedCuisine] = React.useState<string | null>(null);\n    \n    return (\n      <div data-testid=\"cuisine-recommender\">\n        <h3>Cuisine Recommendations</h3>\n        <div className=\"cuisine-list\">\n          {['Italian', 'Chinese', 'Mexican', 'Indian'].map(cuisine => (\n            <button\n              key={cuisine}\n              onClick={() => setSelectedCuisine(cuisine)}\n              className={selectedCuisine === cuisine ? 'selected' : ''}\n              data-testid={`cuisine-${cuisine.toLowerCase()}`}\n            >\n              {cuisine}\n            </button>\n          ))}\n        </div>\n        {selectedCuisine && (\n          <div data-testid=\"selected-cuisine\">\n            Selected: {selectedCuisine}\n          </div>\n        )}\n      </div>\n    );\n  };\n});\n\njest.mock('@/components/IngredientRecommender', () => {\n  return function MockIngredientRecommender({ maxDisplayed = 8 }: { maxDisplayed?: number }) {\n    const [selectedIngredients, setSelectedIngredients] = React.useState<string[]>([]);\n    \n    const ingredients = ['Tomatoes', 'Onions', 'Garlic', 'Basil', 'Olive Oil', 'Cheese', 'Pasta', 'Chicken'];\n    const displayedIngredients = ingredients.slice(0, maxDisplayed);\n    \n    const toggleIngredient = (ingredient: string) => {\n      setSelectedIngredients(prev => \n        prev.includes(ingredient) \n          ? prev.filter(i => i !== ingredient)\n          : [...prev, ingredient]\n      );\n    };\n    \n    return (\n      <div data-testid=\"ingredient-recommender\">\n        <h3>Ingredient Recommendations</h3>\n        <div className=\"ingredient-list\">\n          {displayedIngredients.map(ingredient => (\n            <button\n              key={ingredient}\n              onClick={() => toggleIngredient(ingredient)}\n              className={selectedIngredients.includes(ingredient) ? 'selected' : ''}\n              data-testid={`ingredient-${ingredient.toLowerCase()}`}\n            >\n              {ingredient}\n            </button>\n          ))}\n        </div>\n        <div data-testid=\"selected-ingredients\">\n          Selected: {selectedIngredients.join(', ')}\n        </div>\n      </div>\n    );\n  };\n});\n\njest.mock('@/components/CookingMethodsSection', () => {\n  return function MockCookingMethodsSection({ \n    maxDisplayed = 6, \n    onViewMore \n  }: { \n    maxDisplayed?: number;\n    onViewMore?: () => void;\n  }) {\n    const [selectedMethod, setSelectedMethod] = React.useState<string | null>(null);\n    \n    const methods = ['Sauté', 'Roast', 'Grill', 'Steam', 'Braise', 'Stir-fry', 'Bake', 'Poach'];\n    const displayedMethods = methods.slice(0, maxDisplayed);\n    \n    return (\n      <div data-testid=\"cooking-methods\">\n        <h3>Cooking Methods</h3>\n        <div className=\"methods-list\">\n          {displayedMethods.map(method => (\n            <button\n              key={method}\n              onClick={() => setSelectedMethod(method)}\n              className={selectedMethod === method ? 'selected' : ''}\n              data-testid={`method-${method.toLowerCase()}`}\n            >\n              {method}\n            </button>\n          ))}\n        </div>\n        {selectedMethod && (\n          <div data-testid=\"selected-method\">\n            Selected: {selectedMethod}\n          </div>\n        )}\n        <button onClick={onViewMore} data-testid=\"view-more-methods\">\n          View More Methods\n        </button>\n      </div>\n    );\n  };\n});\n\njest.mock('@/components/recipes/RecipeBuilderSimple', () => {\n  return function MockRecipeBuilderSimple() {\n    const [recipeName, setRecipeName] = React.useState('');\n    const [ingredients, setIngredients] = React.useState<string[]>([]);\n    const [steps, setSteps] = React.useState<string[]>([]);\n    \n    const addIngredient = () => {\n      setIngredients(prev => [...prev, `Ingredient ${prev.length + 1}`]);\n    };\n    \n    const addStep = () => {\n      setSteps(prev => [...prev, `Step ${prev.length + 1}`]);\n    };\n    \n    const canSave = recipeName.trim() && ingredients.length > 0 && steps.length > 0;\n    \n    return (\n      <div data-testid=\"recipe-builder\">\n        <h3>Recipe Builder</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Recipe Name\"\n          value={recipeName}\n          onChange={(e) => setRecipeName(e.target.value)}\n          data-testid=\"recipe-name-input\"\n        />\n        <div>\n          <button onClick={addIngredient} data-testid=\"add-ingredient\">\n            Add Ingredient\n          </button>\n          <div data-testid=\"ingredients-count\">\n            Ingredients: {ingredients.length}\n          </div>\n        </div>\n        <div>\n          <button onClick={addStep} data-testid=\"add-step\">\n            Add Step\n          </button>\n          <div data-testid=\"steps-count\">\n            Steps: {steps.length}\n          </div>\n        </div>\n        <button \n          disabled={!canSave}\n          data-testid=\"save-recipe\"\n        >\n          Save Recipe\n        </button>\n      </div>\n    );\n  };\n});\n\njest.mock('@/components/debug/ConsolidatedDebugInfo', () => {\n  return function MockConsolidatedDebugInfo() {\n    return (\n      <div data-testid=\"debug-info\">\n        <h4>Debug Panel</h4>\n        <div>Performance: OK</div>\n        <div>Astrological State: Active</div>\n      </div>\n    );\n  };\n});\n\ndescribe('Main Page Integration Tests', () => {\n  const mockAlchemicalContext = {\n    state: {\n      astrologicalState: {\n        sunSign: 'aries'\n      },\n      elementalState: {\n        Fire: 0.3,\n        Water: 0.2,\n        Earth: 0.3,\n        Air: 0.2\n      }\n    },\n    planetaryPositions: {\n      sun: { sign: 'aries' }\n    },\n    isDaytime: true\n  };\n\n  const mockNavigationState = {\n    saveState: jest.fn(),\n    getState: jest.fn(() => ({}))\n  };\n\n  const mockScrollPreservation = {\n    restoreScrollPosition: jest.fn()\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    \n    (useAlchemical as jest.Mock).mockReturnValue(mockAlchemicalContext);\n    (useNavigationState as jest.Mock).mockReturnValue(mockNavigationState);\n    (useScrollPreservation as jest.Mock).mockReturnValue(mockScrollPreservation);\n    (useAutoStateCleanup as jest.Mock).mockReturnValue(undefined);\n\n    // Mock window.scrollY\n    Object.defineProperty(window, 'scrollY', {\n      value: 0,\n      writable: true\n    });\n\n    // Mock getElementById for navigation\n    jest.spyOn(document, 'getElementById').mockImplementation((id) => ({\n      scrollIntoView: jest.fn(),\n      style: {},\n      classList: {\n        add: jest.fn(),\n        remove: jest.fn()\n      }\n    } as any));\n  });\n\n  afterEach(() => {\n    jest.restoreAllMocks();\n  });\n\n  it('renders all main sections and they interact correctly', async () => {\n    await act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    // Wait for all components to load\n    await waitFor(() => {\n      expect(screen.getByTestId('cuisine-recommender')).toBeInTheDocument();\n      expect(screen.getByTestId('ingredient-recommender')).toBeInTheDocument();\n      expect(screen.getByTestId('cooking-methods')).toBeInTheDocument();\n      expect(screen.getByTestId('recipe-builder')).toBeInTheDocument();\n    });\n\n    // Test cuisine selection\n    const italianButton = screen.getByTestId('cuisine-italian');\n    await act(async () => {\n      fireEvent.click(italianButton);\n    });\n\n    expect(screen.getByText('Selected: Italian')).toBeInTheDocument();\n\n    // Test ingredient selection\n    const tomatoButton = screen.getByTestId('ingredient-tomatoes');\n    await act(async () => {\n      fireEvent.click(tomatoButton);\n    });\n\n    expect(screen.getByText('Selected: Tomatoes')).toBeInTheDocument();\n\n    // Test cooking method selection\n    const sauteButton = screen.getByTestId('method-sauté');\n    await act(async () => {\n      fireEvent.click(sauteButton);\n    });\n\n    expect(screen.getByText('Selected: Sauté')).toBeInTheDocument();\n  });\n\n  it('handles navigation between sections correctly', async () => {\n    const mockOnSectionNavigate = jest.fn();\n    \n    await act(async () => {\n      render(<MainPageLayout onSectionNavigate={mockOnSectionNavigate} />);\n    });\n\n    // Test navigation to cuisine section\n    const cuisineNavButton = screen.getByText('Cuisine Recommendations');\n    await act(async () => {\n      fireEvent.click(cuisineNavButton);\n    });\n\n    expect(mockOnSectionNavigate).toHaveBeenCalledWith('cuisine');\n\n    // Test navigation to ingredients section\n    const ingredientsNavButton = screen.getByText('Ingredient Recommendations');\n    await act(async () => {\n      fireEvent.click(ingredientsNavButton);\n    });\n\n    expect(mockOnSectionNavigate).toHaveBeenCalledWith('ingredients');\n  });\n\n  it('preserves state across component interactions', async () => {\n    await act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    await waitFor(() => {\n      expect(screen.getByTestId('cuisine-recommender')).toBeInTheDocument();\n    });\n\n    // Make selections in different components\n    const italianButton = screen.getByTestId('cuisine-italian');\n    const tomatoButton = screen.getByTestId('ingredient-tomatoes');\n    const sauteButton = screen.getByTestId('method-sauté');\n\n    await act(async () => {\n      fireEvent.click(italianButton);\n      fireEvent.click(tomatoButton);\n      fireEvent.click(sauteButton);\n    });\n\n    // Verify selections are maintained\n    expect(screen.getByText('Selected: Italian')).toBeInTheDocument();\n    expect(screen.getByText('Selected: Tomatoes')).toBeInTheDocument();\n    expect(screen.getByText('Selected: Sauté')).toBeInTheDocument();\n\n    // Verify state saving was called\n    await waitFor(() => {\n      expect(mockNavigationState.saveState).toHaveBeenCalled();\n    });\n  });\n\n  it('handles recipe building workflow', async () => {\n    const user = userEvent.setup();\n    \n    await act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    await waitFor(() => {\n      expect(screen.getByTestId('recipe-builder')).toBeInTheDocument();\n    });\n\n    // Enter recipe name\n    const recipeNameInput = screen.getByTestId('recipe-name-input');\n    await user.type(recipeNameInput, 'Test Recipe');\n\n    // Add ingredients and steps\n    const addIngredientButton = screen.getByTestId('add-ingredient');\n    const addStepButton = screen.getByTestId('add-step');\n\n    await user.click(addIngredientButton);\n    await user.click(addIngredientButton);\n    await user.click(addStepButton);\n\n    // Verify counts\n    expect(screen.getByText('Ingredients: 2')).toBeInTheDocument();\n    expect(screen.getByText('Steps: 1')).toBeInTheDocument();\n\n    // Save button should be enabled\n    const saveButton = screen.getByTestId('save-recipe');\n    expect(saveButton).toBeEnabled();\n  });\n\n  it('handles error states gracefully', async () => {\n    // Mock console.error to avoid noise in test output\n    const consoleSpy = jest.spyOn(console, 'error').mockImplementation(() => {});\n\n    // Create a component that throws an error\n    const ErrorComponent = () => {\n      throw new Error('Test integration error');\n    };\n\n    await act(async () => {\n      render(\n        <MainPageLayout>\n          <ErrorComponent />\n        </MainPageLayout>\n      );\n    });\n\n    // Main page should still render despite the error\n    expect(screen.getByText('What to Eat Next')).toBeInTheDocument();\n\n    consoleSpy.mockRestore();\n  });\n\n  it('displays debug information when enabled', async () => {\n    await act(async () => {\n      render(<MainPageLayout debugMode={true} />);\n    });\n\n    await waitFor(() => {\n      expect(screen.getByTestId('debug-info')).toBeInTheDocument();\n    });\n\n    expect(screen.getByText('Debug Panel')).toBeInTheDocument();\n    expect(screen.getByText('Performance: OK')).toBeInTheDocument();\n    expect(screen.getByText('Astrological State: Active')).toBeInTheDocument();\n  });\n\n  it('handles component loading states', async () => {\n    await act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    // Initially should show loading states\n    expect(screen.getByText('Loading Cuisine Recommender...')).toBeInTheDocument();\n    expect(screen.getByText('Loading Ingredient Recommender...')).toBeInTheDocument();\n    expect(screen.getByText('Loading Cooking Methods...')).toBeInTheDocument();\n    expect(screen.getByText('Loading Recipe Builder...')).toBeInTheDocument();\n\n    // Wait for components to load\n    await waitFor(() => {\n      expect(screen.getByTestId('cuisine-recommender')).toBeInTheDocument();\n      expect(screen.getByTestId('ingredient-recommender')).toBeInTheDocument();\n      expect(screen.getByTestId('cooking-methods')).toBeInTheDocument();\n      expect(screen.getByTestId('recipe-builder')).toBeInTheDocument();\n    });\n  });\n\n  it('handles cross-component data flow', async () => {\n    await act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    await waitFor(() => {\n      expect(screen.getByTestId('ingredient-recommender')).toBeInTheDocument();\n    });\n\n    // Select multiple ingredients\n    const tomatoButton = screen.getByTestId('ingredient-tomatoes');\n    const onionButton = screen.getByTestId('ingredient-onions');\n    const garlicButton = screen.getByTestId('ingredient-garlic');\n\n    await act(async () => {\n      fireEvent.click(tomatoButton);\n      fireEvent.click(onionButton);\n      fireEvent.click(garlicButton);\n    });\n\n    // Verify multiple selections\n    expect(screen.getByText('Selected: Tomatoes, Onions, Garlic')).toBeInTheDocument();\n\n    // This should trigger state preservation\n    await waitFor(() => {\n      expect(mockNavigationState.saveState).toHaveBeenCalled();\n    });\n  });\n\n  it('handles view more navigation', async () => {\n    const mockRouter = {\n      push: jest.fn()\n    };\n\n    // We need to mock the router for this specific test\n    jest.doMock('next/navigation', () => ({\n      useRouter: () => mockRouter\n    }));\n\n    await act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    await waitFor(() => {\n      expect(screen.getByTestId('cooking-methods')).toBeInTheDocument();\n    });\n\n    const viewMoreButton = screen.getByTestId('view-more-methods');\n    await act(async () => {\n      fireEvent.click(viewMoreButton);\n    });\n\n    expect(mockRouter.push).toHaveBeenCalledWith('/cooking-methods');\n  });\n\n  it('maintains responsive behavior', async () => {\n    // Mock window.innerWidth for responsive testing\n    Object.defineProperty(window, 'innerWidth', {\n      writable: true,\n      configurable: true,\n      value: 768\n    });\n\n    await act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    // The layout should adapt to different screen sizes\n    // This is more of a visual test, but we can verify the structure is present\n    expect(screen.getByText('What to Eat Next')).toBeInTheDocument();\n    expect(screen.getByRole('main')).toBeInTheDocument();\n    expect(screen.getByRole('navigation')).toBeInTheDocument();\n  });\n});"],"version":3}