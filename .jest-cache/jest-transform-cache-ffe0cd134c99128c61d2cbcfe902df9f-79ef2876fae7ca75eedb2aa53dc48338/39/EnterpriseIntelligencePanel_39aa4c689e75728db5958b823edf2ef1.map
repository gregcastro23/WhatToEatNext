{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/components/intelligence/EnterpriseIntelligencePanel.tsx","mappings":";AAAA;;;;;;GAMG;AAEH,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AAEb,+CAAiD;AACjD,+CAYsB;AACtB,iFAK2C;AAoB3C,kCAAkC;AAElC,SAAwB,2BAA2B,CAAC,EAClD,UAAU,EACV,cAAc,EACd,mBAAmB,EACnB,SAAS,GAAG,EAAE,EACd,mBAAmB,GAAG,KAAK,EAC3B,WAAW,GAAG,IAAI,EAClB,kBAAkB,EACe;IACjC,8BAA8B;IAE9B,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAEpD,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,IAAA,gBAAQ,EAA4D,UAAU,CAAC,CAAC;IAElH,8BAA8B;IAE9B,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,YAAY,EAAE,SAAS,EAAE,cAAc,EAAE,GAAG,IAAA,qDAAyB,EAAC;QAC5F,WAAW;QACX,wBAAwB,EAAE,IAAI;QAC9B,4BAA4B,EAAE,IAAI;QAClC,4BAA4B,EAAE,IAAI;QAClC,wBAAwB,EAAE,IAAI;QAC9B,iCAAiC,EAAE,IAAI;QACvC,YAAY,EAAE,IAAI;QAClB,QAAQ,EAAE,MAAM;KACjB,CAAC,CAAC;IAGH,MAAM,EAAE,eAAe,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,GAAG,IAAA,oEAAwC,GAAE,CAAC;IAC9G,MAAM,iBAAiB,GAAG,IAAA,gEAAoC,GAAE,CAAC;IAEjE,gCAAgC;IAEhC,eAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,WAAW,IAAI,UAAU,IAAI,cAAc,IAAI,mBAAmB,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;YAC5F,OAAO,CAAC,eAAe,CAAC,UAAU,EAAE,cAAc,EAAE,mBAAmB,CAAC;iBACrE,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,IAAI,QAAQ,IAAI,kBAAkB,EAAE;oBAClC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;iBAC9B;YACH,CAAC,CAAC,CAAC;SACN;IACH,CAAC,EAAE,CAAC,UAAU,EAAE,cAAc,EAAE,mBAAmB,EAAE,WAAW,EAAE,KAAK,CAAC,WAAW,EAAE,OAAO,EAAE,kBAAkB,CAAC,CAAC,CAAC;IAEnH,wCAAwC;IAExC,MAAM,UAAU,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE;QAC9B,IAAI,KAAK,CAAC,WAAW;YAAE,OAAO,uBAAC,wBAAS,IAAC,SAAS,EAAC,cAAc,EAAC,IAAI,EAAE,EAAE,GAAI,CAAC;QAC/E,IAAI,KAAK,CAAC,KAAK;YAAE,OAAO,uBAAC,sBAAO,IAAC,SAAS,EAAC,cAAc,EAAC,IAAI,EAAE,EAAE,GAAI,CAAC;QACvE,IAAI,cAAc;YAAE,OAAO,uBAAC,4BAAa,IAAC,SAAS,EAAC,iBAAiB,EAAC,IAAI,EAAE,EAAE,GAAI,CAAC;QACnF,IAAI,SAAS;YAAE,OAAO,uBAAC,0BAAW,IAAC,SAAS,EAAC,gBAAgB,EAAC,IAAI,EAAE,EAAE,GAAI,CAAC;QAC3E,OAAO,uBAAC,oBAAK,IAAC,SAAS,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,GAAI,CAAC;IACvD,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,KAAK,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC,CAAC;IAEhE,MAAM,UAAU,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE;QAC9B,IAAI,KAAK,CAAC,WAAW;YAAE,OAAO,cAAc,CAAC;QAC7C,IAAI,KAAK,CAAC,KAAK;YAAE,OAAO,gBAAgB,CAAC;QACzC,IAAI,cAAc;YAAE,OAAO,iBAAiB,CAAC;QAC7C,IAAI,SAAS;YAAE,OAAO,gBAAgB,CAAC;QACvC,OAAO,oBAAoB,CAAC;IAC9B,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,KAAK,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC,CAAC;IAEhE,MAAM,WAAW,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE;QAC/B,IAAI,KAAK,CAAC,WAAW;YAAE,OAAO,eAAe,CAAC;QAC9C,IAAI,KAAK,CAAC,KAAK;YAAE,OAAO,cAAc,CAAC;QACvC,IAAI,cAAc;YAAE,OAAO,iBAAiB,CAAC;QAC7C,IAAI,SAAS;YAAE,OAAO,gBAAgB,CAAC;QACvC,OAAO,eAAe,CAAC;IACzB,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,KAAK,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC,CAAC;IAEhE,uCAAuC;IAEvC,MAAM,oBAAoB,GAAG,KAAK,IAAI,EAAE;QACtC,IAAI,UAAU,IAAI,cAAc,IAAI,mBAAmB,EAAE;YACvD,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,eAAe,CAAC,UAAU,EAAE,cAAc,EAAE,mBAAmB,CAAC,CAAC;YAChG,IAAI,QAAQ,IAAI,kBAAkB,EAAE;gBAClC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;aAC9B;SACF;IACH,CAAC,CAAC;IAEF,MAAM,oBAAoB,GAAG,GAAG,EAAE;QAChC,aAAa,CAAC,CAAC,UAAU,CAAC,CAAC;IAC7B,CAAC,CAAC;IAEF,uCAAuC;IAEvC,MAAM,iBAAiB,GAAG,GAAG,EAAE,CAAC,CAC9B,iCAAK,SAAS,EAAC,WAAW,aAExB,iCAAK,SAAS,EAAC,2BAA2B,aACxC,iCAAK,SAAS,EAAC,wCAAwC,aACrD,+BAAI,SAAS,EAAC,2BAA2B,8BAAmB,EAC5D,iCAAK,SAAS,EAAE,+BAA+B,WAAW,EAAE,aACzD,UAAU,EACX,iCAAM,SAAS,EAAC,qBAAqB,YAAE,UAAU,GAAQ,IACrD,IACF,EAEL,KAAK,CAAC,QAAQ,IAAI,CACjB,iCAAK,SAAS,EAAC,6BAA6B,aAC1C,iCAAK,SAAS,EAAC,aAAa,aAC1B,iCAAK,SAAS,EAAC,kCAAkC,aAC9C,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,GAAG,GAAG,CAAC,SACjC,EACN,gCAAK,SAAS,EAAC,uBAAuB,8BAAoB,IACtD,EACN,iCAAK,SAAS,EAAC,aAAa,aAC1B,gCAAK,SAAS,EAAC,mCAAmC,YAC/C,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,GACzE,EACN,gCAAK,SAAS,EAAC,uBAAuB,8BAAoB,IACtD,IACF,CACP,IACG,EAGL,KAAK,CAAC,QAAQ,IAAI,CACjB,iCAAK,SAAS,EAAC,wBAAwB,aACrC,iCAAK,SAAS,EAAC,2BAA2B,aACxC,iCAAK,SAAS,EAAC,6BAA6B,aAC1C,uBAAC,oBAAK,IAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAC,eAAe,GAAG,EAC7C,iCAAM,SAAS,EAAC,mCAAmC,oCAA2B,IAC1E,EACN,iCAAK,SAAS,EAAC,sCAAsC,aAClD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,GAAG,CAAC,SAClE,IACF,EAEN,iCAAK,SAAS,EAAC,4BAA4B,aACzC,iCAAK,SAAS,EAAC,6BAA6B,aAC1C,uBAAC,yBAAU,IAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAC,gBAAgB,GAAG,EACnD,iCAAM,SAAS,EAAC,oCAAoC,wCAA+B,IAC/E,EACN,iCAAK,SAAS,EAAC,uCAAuC,aACnD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,sBAAsB,CAAC,iBAAiB,GAAG,GAAG,CAAC,SACtE,IACF,IACF,CACP,EAGA,KAAK,CAAC,KAAK,IAAI,CACd,iCAAK,SAAS,EAAC,gDAAgD,aAC7D,iCAAK,SAAS,EAAC,0CAA0C,aACvD,uBAAC,sBAAO,IAAC,IAAI,EAAE,EAAE,GAAI,EACrB,iCAAM,SAAS,EAAC,aAAa,+BAAsB,IAC/C,EACN,8BAAG,SAAS,EAAC,2BAA2B,YAAE,KAAK,CAAC,KAAK,GAAK,EAC1D,mCACE,OAAO,EAAE,oBAAoB,EAC7B,SAAS,EAAC,wDAAwD,+BAG3D,IACL,CACP,IACG,CACP,CAAC;IAEF,MAAM,wBAAwB,GAAG,GAAG,EAAE,CAAC,CACrC,gCAAK,SAAS,EAAC,WAAW,YACvB,kBAAkB,CAAC,CAAC,CAAC,CACpB,6DACG,iBAAiB,GAAG,CAAC,IAAI,CACxB,gCAAK,SAAS,EAAC,sDAAsD,YACnE,iCAAK,SAAS,EAAC,6CAA6C,aAC1D,uBAAC,4BAAa,IAAC,IAAI,EAAE,EAAE,GAAI,EAC3B,kCAAM,SAAS,EAAC,aAAa,aAAE,iBAAiB,sCAAsC,IAClF,GACF,CACP,EAED,gCAAK,SAAS,EAAC,WAAW,YACvB,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,CAC/C,gCAAiB,SAAS,EAAC,2BAA2B,YACpD,iCAAK,SAAS,EAAC,4BAA4B,aACzC,uBAAC,wBAAS,IAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,UAC9B,GAAG,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC;wCAC1C,GAAG,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC;4CAC/C,eACF,EAAE,GAAI,EACN,iCAAK,SAAS,EAAC,QAAQ,aACrB,iCAAK,SAAS,EAAC,6BAA6B,aAC1C,iCAAM,SAAS,EAAC,6CAA6C,YAC1D,GAAG,CAAC,IAAI,GACJ,EACP,iCAAM,SAAS,EAAE,oCACf,GAAG,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC,yBAAyB,CAAC,CAAC;wDACrD,GAAG,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,+BAA+B,CAAC,CAAC;4DAC7D,2BACF,EAAE,YACC,GAAG,CAAC,QAAQ,GACR,IACH,EACN,8BAAG,SAAS,EAAC,4BAA4B,YAAE,GAAG,CAAC,IAAI,GAAK,IACpD,IACF,IAtBE,KAAK,CAuBT,CACP,CAAC,GACE,EAEL,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,CAC7B,gCAAK,SAAS,EAAC,aAAa,YAC1B,kCAAM,SAAS,EAAC,uBAAuB,kBACnC,eAAe,CAAC,MAAM,GAAG,CAAC,6BACvB,GACH,CACP,IACA,CACJ,CAAC,CAAC,CAAC,CACF,iCAAK,SAAS,EAAC,gCAAgC,aAC7C,uBAAC,wBAAS,IAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAC,yBAAyB,GAAG,EAC3D,8BAAG,SAAS,EAAC,SAAS,6CAAiC,EACvD,8BAAG,SAAS,EAAC,SAAS,yDAA6C,IAC/D,CACP,GACG,CACP,CAAC;IAEF,MAAM,eAAe,GAAG,GAAG,EAAE,CAAC,CAC5B,gCAAK,SAAS,EAAC,WAAW,YACvB,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAChB,6DAEE,iCAAK,SAAS,EAAC,2BAA2B,aACxC,+BAAI,SAAS,EAAC,gCAAgC,wCAA6B,EAC3E,iCAAK,SAAS,EAAC,WAAW,aACxB,iCAAK,SAAS,EAAC,mCAAmC,aAChD,iCAAM,SAAS,EAAC,uBAAuB,+BAAsB,EAC7D,kCAAM,SAAS,EAAC,qBAAqB,aAClC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,sBAAsB,CAAC,aAAa,CAAC,KAAK,GAAG,GAAG,CAAC,SACvE,IACH,EACN,iCAAK,SAAS,EAAC,mCAAmC,aAChD,iCAAM,SAAS,EAAC,uBAAuB,yCAAgC,EACvE,kCAAM,SAAS,EAAC,qBAAqB,aAClC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,KAAK,GAAG,GAAG,CAAC,SACjF,IACH,EACN,iCAAK,SAAS,EAAC,mCAAmC,aAChD,iCAAM,SAAS,EAAC,uBAAuB,kCAAyB,EAChE,kCAAM,SAAS,EAAC,qBAAqB,aAClC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,KAAK,GAAG,GAAG,CAAC,SAC1E,IACH,IACF,IACF,EAGN,iCAAK,SAAS,EAAC,2BAA2B,aACxC,+BAAI,SAAS,EAAC,gCAAgC,oCAAyB,EACvE,iCAAK,SAAS,EAAC,mCAAmC,aAChD,iCAAM,SAAS,EAAC,uBAAuB,2BAAkB,EACzD,iCAAM,SAAS,EAAE,8CACf,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,6BAA6B,CAAC,CAAC;wCAClG,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,+BAA+B,CAAC,CAAC;4CACvG,yBACF,EAAE,YACC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,EAAE,GAChE,IACH,EACL,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CACtE,iCAAK,SAAS,EAAC,MAAM,aACnB,8BAAG,SAAS,EAAC,4BAA4B,8BAAkB,EAC3D,+BAAI,SAAS,EAAC,iCAAiC,YAC5C,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAC/E,sDAAmB,MAAM,KAAhB,KAAK,CAAiB,CAChC,CAAC,GACC,IACD,CACP,IACG,EAGL,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CACvE,iCAAK,SAAS,EAAC,WAAW,aACvB,YAAY,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CACjC,iCAAK,SAAS,EAAC,gDAAgD,aAC7D,+BAAI,SAAS,EAAC,+BAA+B,uBAAY,EACzD,+BAAI,SAAS,EAAC,gCAAgC,YAC3C,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CACzC,sDAAmB,KAAK,KAAf,KAAK,CAAgB,CAC/B,CAAC,GACC,IACD,CACP,EAEA,YAAY,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,CACnC,iCAAK,SAAS,EAAC,sDAAsD,aACnE,+BAAI,SAAS,EAAC,kCAAkC,yBAAc,EAC9D,+BAAI,SAAS,EAAC,mCAAmC,YAC9C,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAC7C,sDAAmB,OAAO,KAAjB,KAAK,CAAkB,CACjC,CAAC,GACC,IACD,CACP,IACG,CACP,IACA,CACJ,CAAC,CAAC,CAAC,CACF,iCAAK,SAAS,EAAC,gCAAgC,aAC7C,uBAAC,qBAAM,IAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAC,yBAAyB,GAAG,EACxD,8BAAG,SAAS,EAAC,SAAS,yCAA6B,EACnD,8BAAG,SAAS,EAAC,SAAS,oDAAwC,IAC1D,CACP,GACG,CACP,CAAC;IAEF,MAAM,oBAAoB,GAAG,GAAG,EAAE,CAAC,CACjC,iCAAK,SAAS,EAAC,WAAW,aACxB,iCAAK,SAAS,EAAC,wBAAwB,aACrC,gCAAK,SAAS,EAAC,2BAA2B,YACxC,iCAAK,SAAS,EAAC,aAAa,aAC1B,gCAAK,SAAS,EAAC,iCAAiC,YAC7C,KAAK,CAAC,kBAAkB,CAAC,aAAa,GACnC,EACN,gCAAK,SAAS,EAAC,uBAAuB,+BAAqB,IACvD,GACF,EAEN,gCAAK,SAAS,EAAC,2BAA2B,YACxC,iCAAK,SAAS,EAAC,aAAa,aAC1B,iCAAK,SAAS,EAAC,kCAAkC,aAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,UACtD,EACN,gCAAK,SAAS,EAAC,uBAAuB,kCAAwB,IAC1D,GACF,EAEN,gCAAK,SAAS,EAAC,2BAA2B,YACxC,iCAAK,SAAS,EAAC,aAAa,aAC1B,iCAAK,SAAS,EAAC,mCAAmC,aAC/C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC,YAAY,GAAG,GAAG,CAAC,SACpD,EACN,gCAAK,SAAS,EAAC,uBAAuB,+BAAqB,IACvD,GACF,EAEN,gCAAK,SAAS,EAAC,2BAA2B,YACxC,iCAAK,SAAS,EAAC,aAAa,aAC1B,iCAAK,SAAS,EAAC,gCAAgC,aAC5C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,GAAG,GAAG,CAAC,SACjD,EACN,gCAAK,SAAS,EAAC,uBAAuB,2BAAiB,IACnD,GACF,IACF,EAEL,mBAAmB,IAAI,CACtB,iCAAK,SAAS,EAAC,2BAA2B,aACxC,+BAAI,SAAS,EAAC,gCAAgC,mCAAwB,EACtE,iCAAK,SAAS,EAAC,WAAW,aACxB,iCAAK,SAAS,EAAC,mCAAmC,aAChD,iCAAM,SAAS,EAAC,uBAAuB,mCAA0B,EACjE,iCAAM,SAAS,EAAE,uBACf,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,cACtD,EAAE,YACC,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,mBAAmB,GACzD,IACH,EACN,iCAAK,SAAS,EAAC,mCAAmC,aAChD,iCAAM,SAAS,EAAC,uBAAuB,iCAAwB,EAC/D,kCAAM,SAAS,EAAC,qBAAqB,aAClC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,eAAe,GAAG,GAAG,CAAC,SAC/C,IACH,EACN,iCAAK,SAAS,EAAC,mCAAmC,aAChD,iCAAM,SAAS,EAAC,uBAAuB,4BAAmB,EAC1D,kCAAM,SAAS,EAAC,qBAAqB,aAClC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,WAAW,GAAG,GAAG,CAAC,SAC3C,IACH,IACF,IACF,CACP,IACG,CACP,CAAC;IAEF,+BAA+B;IAE/B,OAAO,CACL,iCAAK,SAAS,EAAE,wDAAwD,SAAS,EAAE,aAEjF,iCAAK,SAAS,EAAC,gEAAgE,aAC7E,iCAAK,SAAS,EAAC,6BAA6B,aAC1C,uBAAC,oBAAK,IAAC,SAAS,EAAC,eAAe,EAAC,IAAI,EAAE,EAAE,GAAI,EAC7C,4CACE,+BAAI,SAAS,EAAC,2BAA2B,wCAA6B,EACtE,8BAAG,SAAS,EAAC,uBAAuB,6CAAiC,IACjE,IACF,EAEN,iCAAK,SAAS,EAAC,6BAA6B,aACzC,KAAK,CAAC,YAAY,IAAI,CACrB,iCAAM,SAAS,EAAC,uBAAuB,YACpC,KAAK,CAAC,YAAY,CAAC,kBAAkB,EAAE,GACnC,CACR,EAED,mCACE,OAAO,EAAE,oBAAoB,EAC7B,QAAQ,EAAE,KAAK,CAAC,WAAW,EAC3B,SAAS,EAAC,2DAA2D,EACrE,KAAK,EAAC,kBAAkB,YAExB,uBAAC,wBAAS,IAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,GAAI,GACpE,EAET,mCACE,OAAO,EAAE,oBAAoB,EAC7B,SAAS,EAAC,uCAAuC,EACjD,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,YAExC,UAAU,CAAC,CAAC,CAAC,uBAAC,qBAAM,IAAC,IAAI,EAAE,EAAE,GAAI,CAAC,CAAC,CAAC,uBAAC,kBAAG,IAAC,IAAI,EAAE,EAAE,GAAI,GAC/C,IACL,IACF,EAGL,UAAU,IAAI,CACb,iCAAK,SAAS,EAAC,KAAK,aAElB,gCAAK,SAAS,EAAC,gDAAgD,YAC5D;4BACC,EAAE,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,wBAAS,EAAE;4BACtD,EAAE,EAAE,EAAE,iBAAiB,EAAE,KAAK,EAAE,iBAAiB,EAAE,IAAI,EAAE,wBAAS,EAAE;4BACpE,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,qBAAM,EAAE;4BAC/C,EAAE,EAAE,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,yBAAU,EAAE;yBAC9D,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CACX,oCAEE,OAAO,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,EAAS,CAAC,EAC1C,SAAS,EAAE,0FACT,SAAS,KAAK,GAAG,CAAC,EAAE;gCAClB,CAAC,CAAC,kCAAkC;gCACpC,CAAC,CAAC,mCACN,EAAE,aAEF,uBAAC,GAAG,CAAC,IAAI,IAAC,IAAI,EAAE,EAAE,GAAI,EACtB,2CAAO,GAAG,CAAC,KAAK,GAAQ,KATnB,GAAG,CAAC,EAAE,CAUJ,CACV,CAAC,GACE,EAGN,iCAAK,SAAS,EAAC,eAAe,aAC3B,SAAS,KAAK,UAAU,IAAI,iBAAiB,EAAE,EAC/C,SAAS,KAAK,iBAAiB,IAAI,wBAAwB,EAAE,EAC7D,SAAS,KAAK,QAAQ,IAAI,eAAe,EAAE,EAC3C,SAAS,KAAK,aAAa,IAAI,oBAAoB,EAAE,IAClD,IACF,CACP,IACG,CACP,CAAC;AACJ,CAAC;AA5cD,8CA4cC","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/components/intelligence/EnterpriseIntelligencePanel.tsx"],"sourcesContent":["/**\n * Enterprise Intelligence Panel Component\n * Main Page Restoration - Task 3.8 Implementation\n * \n * Displays enterprise intelligence insights, recommendations,\n * and system health information for cuisine recommendations.\n */\n\n'use client';\n\nimport React, { useState, useMemo } from 'react';\nimport { \n  Brain, \n  TrendingUp, \n  Shield, \n  CheckCircle, \n  AlertTriangle, \n  XCircle,\n  BarChart3,\n  Lightbulb,\n  RefreshCw,\n  Eye,\n  EyeOff\n} from 'lucide-react';\nimport { \n  useEnterpriseIntelligence,\n  useEnterpriseIntelligenceHealth,\n  useEnterpriseIntelligenceRecommendations,\n  useEnterpriseIntelligencePerformance\n} from '@/hooks/useEnterpriseIntelligence';\nimport type { ElementalProperties, ZodiacSign, LunarPhase } from '@/types/alchemy';\n\n// ========== INTERFACES ==========\n\nexport interface EnterpriseIntelligencePanelProps {\n  recipeData?: any;\n  ingredientData?: any;\n  astrologicalContext?: {\n    zodiacSign: ZodiacSign;\n    lunarPhase: LunarPhase;\n    elementalProperties: ElementalProperties;\n    planetaryPositions?: any;\n  };\n  className?: string;\n  showDetailedMetrics?: boolean;\n  autoAnalyze?: boolean;\n  onAnalysisComplete?: (analysis: any) => void;\n}\n\n// ========== COMPONENT ==========\n\nexport default function EnterpriseIntelligencePanel({\n  recipeData,\n  ingredientData,\n  astrologicalContext,\n  className = '',\n  showDetailedMetrics = false,\n  autoAnalyze = true,\n  onAnalysisComplete\n}: EnterpriseIntelligencePanelProps) {\n  // ========== STATE ==========\n  \n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const [activeTab, setActiveTab] = useState<'overview' | 'recommendations' | 'health' | 'performance'>('overview');\n\n  // ========== HOOKS ==========\n  \n  const { state, actions, systemHealth, isHealthy, needsAttention } = useEnterpriseIntelligence({\n    autoAnalyze,\n    enableRecipeIntelligence: true,\n    enableIngredientIntelligence: true,\n    enableValidationIntelligence: true,\n    enableSafetyIntelligence: true,\n    enableOptimizationRecommendations: true,\n    cacheResults: true,\n    logLevel: 'info'\n  });\n\n\n  const { recommendations, hasRecommendations, highPriorityCount } = useEnterpriseIntelligenceRecommendations();\n  const performanceStatus = useEnterpriseIntelligencePerformance();\n\n  // ========== EFFECTS ==========\n  \n  React.useEffect(() => {\n    if (autoAnalyze && recipeData && ingredientData && astrologicalContext && !state.isAnalyzing) {\n      actions.performAnalysis(recipeData, ingredientData, astrologicalContext)\n        .then(analysis => {\n          if (analysis && onAnalysisComplete) {\n            onAnalysisComplete(analysis);\n          }\n        });\n    }\n  }, [recipeData, ingredientData, astrologicalContext, autoAnalyze, state.isAnalyzing, actions, onAnalysisComplete]);\n\n  // ========== MEMOIZED VALUES ==========\n  \n  const statusIcon = useMemo(() => {\n    if (state.isAnalyzing) return <RefreshCw className=\"animate-spin\" size={16} />;\n    if (state.error) return <XCircle className=\"text-red-500\" size={16} />;\n    if (needsAttention) return <AlertTriangle className=\"text-yellow-500\" size={16} />;\n    if (isHealthy) return <CheckCircle className=\"text-green-500\" size={16} />;\n    return <Brain className=\"text-blue-500\" size={16} />;\n  }, [state.isAnalyzing, state.error, needsAttention, isHealthy]);\n\n  const statusText = useMemo(() => {\n    if (state.isAnalyzing) return 'Analyzing...';\n    if (state.error) return 'Analysis Error';\n    if (needsAttention) return 'Needs Attention';\n    if (isHealthy) return 'System Healthy';\n    return 'Intelligence Ready';\n  }, [state.isAnalyzing, state.error, needsAttention, isHealthy]);\n\n  const statusColor = useMemo(() => {\n    if (state.isAnalyzing) return 'text-blue-600';\n    if (state.error) return 'text-red-600';\n    if (needsAttention) return 'text-yellow-600';\n    if (isHealthy) return 'text-green-600';\n    return 'text-gray-600';\n  }, [state.isAnalyzing, state.error, needsAttention, isHealthy]);\n\n  // ========== EVENT HANDLERS ==========\n  \n  const handleManualAnalysis = async () => {\n    if (recipeData && ingredientData && astrologicalContext) {\n      const analysis = await actions.performAnalysis(recipeData, ingredientData, astrologicalContext);\n      if (analysis && onAnalysisComplete) {\n        onAnalysisComplete(analysis);\n      }\n    }\n  };\n\n  const handleToggleExpanded = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  // ========== RENDER HELPERS ==========\n  \n  const renderOverviewTab = () => (\n    <div className=\"space-y-4\">\n      {/* System Health Summary */}\n      <div className=\"bg-gray-50 rounded-lg p-4\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <h4 className=\"font-medium text-gray-900\">System Health</h4>\n          <div className={`flex items-center space-x-2 ${statusColor}`}>\n            {statusIcon}\n            <span className=\"text-sm font-medium\">{statusText}</span>\n          </div>\n        </div>\n        \n        {state.analysis && (\n          <div className=\"grid grid-cols-2 gap-4 mt-3\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {Math.round(systemHealth.score * 100)}%\n              </div>\n              <div className=\"text-xs text-gray-500\">Overall Score</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {systemHealth.overall.charAt(0).toUpperCase() + systemHealth.overall.slice(1)}\n              </div>\n              <div className=\"text-xs text-gray-500\">Health Status</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Quick Stats */}\n      {state.analysis && (\n        <div className=\"grid grid-cols-2 gap-3\">\n          <div className=\"bg-blue-50 rounded-lg p-3\">\n            <div className=\"flex items-center space-x-2\">\n              <Brain size={16} className=\"text-blue-600\" />\n              <span className=\"text-sm font-medium text-blue-900\">Recipe Intelligence</span>\n            </div>\n            <div className=\"mt-1 text-lg font-bold text-blue-600\">\n              {Math.round(state.analysis.recipeIntelligence.optimizationScore * 100)}%\n            </div>\n          </div>\n          \n          <div className=\"bg-green-50 rounded-lg p-3\">\n            <div className=\"flex items-center space-x-2\">\n              <TrendingUp size={16} className=\"text-green-600\" />\n              <span className=\"text-sm font-medium text-green-900\">Ingredient Intelligence</span>\n            </div>\n            <div className=\"mt-1 text-lg font-bold text-green-600\">\n              {Math.round(state.analysis.ingredientIntelligence.optimizationScore * 100)}%\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Error Display */}\n      {state.error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\n          <div className=\"flex items-center space-x-2 text-red-800\">\n            <XCircle size={16} />\n            <span className=\"font-medium\">Analysis Error</span>\n          </div>\n          <p className=\"text-sm text-red-600 mt-1\">{state.error}</p>\n          <button\n            onClick={handleManualAnalysis}\n            className=\"mt-2 text-sm text-red-700 hover:text-red-900 underline\"\n          >\n            Retry Analysis\n          </button>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderRecommendationsTab = () => (\n    <div className=\"space-y-4\">\n      {hasRecommendations ? (\n        <>\n          {highPriorityCount > 0 && (\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n              <div className=\"flex items-center space-x-2 text-yellow-800\">\n                <AlertTriangle size={16} />\n                <span className=\"font-medium\">{highPriorityCount} High Priority Recommendations</span>\n              </div>\n            </div>\n          )}\n          \n          <div className=\"space-y-3\">\n            {recommendations.slice(0, 5).map((rec, index) => (\n              <div key={index} className=\"bg-gray-50 rounded-lg p-3\">\n                <div className=\"flex items-start space-x-2\">\n                  <Lightbulb size={16} className={`mt-0.5 ${\n                    rec.priority === 'high' ? 'text-red-500' :\n                    rec.priority === 'medium' ? 'text-yellow-500' :\n                    'text-blue-500'\n                  }`} />\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-xs font-medium text-gray-500 uppercase\">\n                        {rec.type}\n                      </span>\n                      <span className={`text-xs px-2 py-0.5 rounded-full ${\n                        rec.priority === 'high' ? 'bg-red-100 text-red-700' :\n                        rec.priority === 'medium' ? 'bg-yellow-100 text-yellow-700' :\n                        'bg-blue-100 text-blue-700'\n                      }`}>\n                        {rec.priority}\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mt-1\">{rec.text}</p>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          {recommendations.length > 5 && (\n            <div className=\"text-center\">\n              <span className=\"text-sm text-gray-500\">\n                +{recommendations.length - 5} more recommendations\n              </span>\n            </div>\n          )}\n        </>\n      ) : (\n        <div className=\"text-center py-6 text-gray-500\">\n          <Lightbulb size={24} className=\"mx-auto mb-2 opacity-50\" />\n          <p className=\"text-sm\">No recommendations available</p>\n          <p className=\"text-xs\">Run analysis to generate recommendations</p>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderHealthTab = () => (\n    <div className=\"space-y-4\">\n      {state.analysis ? (\n        <>\n          {/* Validation Health */}\n          <div className=\"bg-gray-50 rounded-lg p-4\">\n            <h4 className=\"font-medium text-gray-900 mb-3\">Validation Intelligence</h4>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-gray-600\">Data Integrity</span>\n                <span className=\"text-sm font-medium\">\n                  {Math.round(state.analysis.validationIntelligence.dataIntegrity.score * 100)}%\n                </span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-gray-600\">Astrological Consistency</span>\n                <span className=\"text-sm font-medium\">\n                  {Math.round(state.analysis.validationIntelligence.astrologicalConsistency.score * 100)}%\n                </span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-gray-600\">Elemental Harmony</span>\n                <span className=\"text-sm font-medium\">\n                  {Math.round(state.analysis.validationIntelligence.elementalHarmony.score * 100)}%\n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Safety Intelligence */}\n          <div className=\"bg-gray-50 rounded-lg p-4\">\n            <h4 className=\"font-medium text-gray-900 mb-3\">Safety Intelligence</h4>\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm text-gray-600\">Risk Level</span>\n              <span className={`text-sm font-medium px-2 py-1 rounded-full ${\n                state.analysis.safetyIntelligence.riskAssessment.level === 'low' ? 'bg-green-100 text-green-700' :\n                state.analysis.safetyIntelligence.riskAssessment.level === 'medium' ? 'bg-yellow-100 text-yellow-700' :\n                'bg-red-100 text-red-700'\n              }`}>\n                {state.analysis.safetyIntelligence.riskAssessment.level.toUpperCase()}\n              </span>\n            </div>\n            {state.analysis.safetyIntelligence.riskAssessment.factors.length > 0 && (\n              <div className=\"mt-2\">\n                <p className=\"text-xs text-gray-500 mb-1\">Risk Factors:</p>\n                <ul className=\"text-xs text-gray-600 space-y-1\">\n                  {state.analysis.safetyIntelligence.riskAssessment.factors.map((factor, index) => (\n                    <li key={index}>• {factor}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n\n          {/* Issues and Warnings */}\n          {(systemHealth.issues.length > 0 || systemHealth.warnings.length > 0) && (\n            <div className=\"space-y-2\">\n              {systemHealth.issues.length > 0 && (\n                <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\n                  <h5 className=\"font-medium text-red-800 mb-2\">Issues</h5>\n                  <ul className=\"text-sm text-red-600 space-y-1\">\n                    {systemHealth.issues.map((issue, index) => (\n                      <li key={index}>• {issue}</li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n              \n              {systemHealth.warnings.length > 0 && (\n                <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n                  <h5 className=\"font-medium text-yellow-800 mb-2\">Warnings</h5>\n                  <ul className=\"text-sm text-yellow-600 space-y-1\">\n                    {systemHealth.warnings.map((warning, index) => (\n                      <li key={index}>• {warning}</li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </div>\n          )}\n        </>\n      ) : (\n        <div className=\"text-center py-6 text-gray-500\">\n          <Shield size={24} className=\"mx-auto mb-2 opacity-50\" />\n          <p className=\"text-sm\">No health data available</p>\n          <p className=\"text-xs\">Run analysis to check system health</p>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderPerformanceTab = () => (\n    <div className=\"space-y-4\">\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"bg-gray-50 rounded-lg p-3\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-blue-600\">\n              {state.performanceMetrics.analysisCount}\n            </div>\n            <div className=\"text-xs text-gray-500\">Total Analyses</div>\n          </div>\n        </div>\n        \n        <div className=\"bg-gray-50 rounded-lg p-3\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-green-600\">\n              {Math.round(state.performanceMetrics.averageExecutionTime)}ms\n            </div>\n            <div className=\"text-xs text-gray-500\">Avg Response Time</div>\n          </div>\n        </div>\n        \n        <div className=\"bg-gray-50 rounded-lg p-3\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-purple-600\">\n              {Math.round(state.performanceMetrics.cacheHitRate * 100)}%\n            </div>\n            <div className=\"text-xs text-gray-500\">Cache Hit Rate</div>\n          </div>\n        </div>\n        \n        <div className=\"bg-gray-50 rounded-lg p-3\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-red-600\">\n              {Math.round(state.performanceMetrics.errorRate * 100)}%\n            </div>\n            <div className=\"text-xs text-gray-500\">Error Rate</div>\n          </div>\n        </div>\n      </div>\n\n      {showDetailedMetrics && (\n        <div className=\"bg-gray-50 rounded-lg p-4\">\n          <h4 className=\"font-medium text-gray-900 mb-3\">Performance Status</h4>\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-gray-600\">System Performance</span>\n              <span className={`text-sm font-medium ${\n                performanceStatus.isPerformant ? 'text-green-600' : 'text-red-600'\n              }`}>\n                {performanceStatus.isPerformant ? 'Good' : 'Needs Improvement'}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-gray-600\">Cache Efficiency</span>\n              <span className=\"text-sm font-medium\">\n                {Math.round(performanceStatus.cacheEfficiency * 100)}%\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-gray-600\">Reliability</span>\n              <span className=\"text-sm font-medium\">\n                {Math.round(performanceStatus.reliability * 100)}%\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  // ========== RENDER ==========\n  \n  return (\n    <div className={`bg-white border border-gray-200 rounded-lg shadow-sm ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n        <div className=\"flex items-center space-x-3\">\n          <Brain className=\"text-blue-600\" size={20} />\n          <div>\n            <h3 className=\"font-medium text-gray-900\">Enterprise Intelligence</h3>\n            <p className=\"text-xs text-gray-500\">Recipe & Ingredient Analysis</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {state.lastAnalyzed && (\n            <span className=\"text-xs text-gray-400\">\n              {state.lastAnalyzed.toLocaleTimeString()}\n            </span>\n          )}\n          \n          <button\n            onClick={handleManualAnalysis}\n            disabled={state.isAnalyzing}\n            className=\"p-1 text-gray-400 hover:text-gray-600 disabled:opacity-50\"\n            title=\"Refresh Analysis\"\n          >\n            <RefreshCw size={16} className={state.isAnalyzing ? 'animate-spin' : ''} />\n          </button>\n          \n          <button\n            onClick={handleToggleExpanded}\n            className=\"p-1 text-gray-400 hover:text-gray-600\"\n            title={isExpanded ? 'Collapse' : 'Expand'}\n          >\n            {isExpanded ? <EyeOff size={16} /> : <Eye size={16} />}\n          </button>\n        </div>\n      </div>\n\n      {/* Content */}\n      {isExpanded && (\n        <div className=\"p-4\">\n          {/* Tab Navigation */}\n          <div className=\"flex space-x-1 mb-4 bg-gray-100 rounded-lg p-1\">\n            {[\n              { id: 'overview', label: 'Overview', icon: BarChart3 },\n              { id: 'recommendations', label: 'Recommendations', icon: Lightbulb },\n              { id: 'health', label: 'Health', icon: Shield },\n              { id: 'performance', label: 'Performance', icon: TrendingUp }\n            ].map(tab => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id as any)}\n                className={`flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium transition-colors ${\n                  activeTab === tab.id\n                    ? 'bg-white text-blue-600 shadow-sm'\n                    : 'text-gray-600 hover:text-gray-900'\n                }`}\n              >\n                <tab.icon size={16} />\n                <span>{tab.label}</span>\n              </button>\n            ))}\n          </div>\n\n          {/* Tab Content */}\n          <div className=\"min-h-[200px]\">\n            {activeTab === 'overview' && renderOverviewTab()}\n            {activeTab === 'recommendations' && renderRecommendationsTab()}\n            {activeTab === 'health' && renderHealthTab()}\n            {activeTab === 'performance' && renderPerformanceTab()}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"version":3}