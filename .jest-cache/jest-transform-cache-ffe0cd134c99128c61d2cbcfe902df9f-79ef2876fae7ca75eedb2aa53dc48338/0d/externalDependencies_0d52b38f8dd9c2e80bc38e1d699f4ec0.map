{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/__tests__/mocks/externalDependencies.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/__tests__/mocks/externalDependencies.ts"],"sourcesContent":["/**\n * External Dependencies Mock Implementations\n * \n * Comprehensive mocks for external dependencies used in tests\n */\n\nimport { jest } from '@jest/globals';\nimport type { MockPlanetaryPositions } from '../types/testUtils.d';\n\n// Mock planetary positions data\nexport const mockPlanetaryPositions: MockPlanetaryPositions = {\n  sun: { sign: 'aries', degree: 8.5, exactLongitude: 8.5, isRetrograde: false },\n  moon: { sign: 'aries', degree: 1.57, exactLongitude: 1.57, isRetrograde: false },\n  mercury: { sign: 'aries', degree: 0.85, exactLongitude: 0.85, isRetrograde: true },\n  venus: { sign: 'pisces', degree: 29.08, exactLongitude: 359.08, isRetrograde: true },\n  mars: { sign: 'cancer', degree: 22.63, exactLongitude: 112.63, isRetrograde: false },\n  jupiter: { sign: 'gemini', degree: 15.52, exactLongitude: 75.52, isRetrograde: false },\n  saturn: { sign: 'pisces', degree: 24.12, exactLongitude: 354.12, isRetrograde: false },\n  uranus: { sign: 'taurus', degree: 24.62, exactLongitude: 54.62, isRetrograde: false },\n  neptune: { sign: 'pisces', degree: 29.93, exactLongitude: 359.93, isRetrograde: false },\n  pluto: { sign: 'aquarius', degree: 3.5, exactLongitude: 333.5, isRetrograde: false },\n  northNode: { sign: 'pisces', degree: 26.88, exactLongitude: 356.88, isRetrograde: true },\n  southNode: { sign: 'virgo', degree: 26.88, exactLongitude: 176.88, isRetrograde: true }\n};\n\n// Mock logger implementation\nexport const mockLogger = {\n  info: jest.fn(),\n  debug: jest.fn(),\n  warn: jest.fn(),\n  error: jest.fn(),\n  log: jest.fn()\n};\n\n// Mock createLogger function\nexport const mockCreateLogger = jest.fn(() => mockLogger);\n\n// Mock Next.js router\nexport const mockRouter = {\n  push: jest.fn(),\n  replace: jest.fn(),\n  prefetch: jest.fn(),\n  back: jest.fn(),\n  forward: jest.fn(),\n  refresh: jest.fn(),\n  pathname: '/',\n  query: {},\n  asPath: '/'\n};\n\n// Mock useRouter hook\nexport const mockUseRouter = () => mockRouter;\n\n// Mock reliable astronomy utility\nexport const mockReliableAstronomy = {\n  getReliablePlanetaryPositions: jest.fn(() => Promise.resolve(mockPlanetaryPositions))\n};\n\n// Mock agent hooks\nexport const mockAgentHooks = {\n  useAgentHooks: () => ({\n    hookState: { isActive: false, lastRun: null, results: [] },\n    startAgentHooks: jest.fn(),\n    stopAgentHooks: jest.fn(),\n    triggerValidation: jest.fn()\n  }),\n  usePlanetaryDataValidationHook: () => ({ \n    isValid: true,\n    validationResult: { isValid: true, issues: [] },\n    validatePlanetaryData: jest.fn()\n  }),\n  useIngredientConsistencyHook: () => ({ \n    isConsistent: true,\n    validationResult: { isValid: true, issues: [] },\n    validateIngredients: jest.fn()\n  }),\n  useTypeScriptCampaignHook: () => ({ \n    campaignActive: false,\n    campaignTrigger: { triggered: false },\n    checkErrorThreshold: jest.fn()\n  }),\n  useBuildQualityMonitoringHook: () => ({ \n    quality: 'good',\n    qualityResult: { isValid: true, issues: [] },\n    monitorBuildQuality: jest.fn()\n  }),\n  useQualityMetricsHook: () => ({ \n    metrics: {},\n    updateMetrics: jest.fn()\n  })\n};\n\n// Mock MCP server integration\nexport const mockMCPServerIntegration = {\n  useMCPServerIntegration: () => ({\n    isConnected: true,\n    serverStatus: 'connected',\n    availableTools: [],\n    getAstrologicalData: jest.fn(),\n    getNutritionalData: jest.fn(),\n    getRecipeData: jest.fn(),\n    testFallbackStrategy: jest.fn(() => Promise.resolve({\n      overallReliability: 0.95,\n      astrological: { source: 'primary' },\n      nutritional: { source: 'primary' },\n      recipes: { source: 'primary' }\n    })),\n    getServerStatus: jest.fn(() => ({ connected: true, status: 'healthy' }))\n  })\n};\n\n// Mock development experience optimizations\nexport const mockDevelopmentExperienceOptimizations = {\n  useDevelopmentExperienceOptimizations: () => ({\n    optimizationsActive: true,\n    performanceMetrics: {},\n    updatePerformanceMetrics: jest.fn(),\n    getDevelopmentMetrics: jest.fn(() => ({})),\n    getPerformanceOptimizationRecommendations: jest.fn(() => []),\n    applyAutomaticOptimizations: jest.fn(() => ({ applied: [], errors: [] }))\n  })\n};\n\n// Mock state preservation hooks\nexport const mockStatePreservationHooks = {\n  useNavigationState: () => ({\n    saveState: jest.fn(),\n    getState: jest.fn(() => null)\n  }),\n  useScrollPreservation: () => ({\n    restoreScrollPosition: jest.fn()\n  }),\n  useAutoStateCleanup: jest.fn(),\n  useAstrologicalStatePreservation: () => ({\n    saveAstrologicalState: jest.fn(),\n    restoreAstrologicalState: jest.fn(),\n    validateElementalCompatibility: jest.fn(),\n    getArchitecturalGuidance: jest.fn(),\n    getTechnologyStackGuidance: jest.fn()\n  }),\n  useCulturalSensitivityGuidance: () => ({\n    validateCulturalContent: jest.fn(),\n    getInclusiveLanguageGuidelines: jest.fn()\n  }),\n  usePerformanceOptimizationGuidance: () => ({\n    getOptimizationRecommendations: jest.fn(),\n    validatePerformanceMetrics: jest.fn()\n  })\n};\n\n// Mock error handling\nexport const mockErrorHandler = {\n  useErrorHandler: () => ({\n    handleError: jest.fn(),\n    clearErrors: jest.fn(),\n    errors: []\n  })\n};\n\n// Mock steering file intelligence\nexport const mockSteeringFileIntelligence = {\n  useSteeringFileIntelligence: () => ({\n    getGuidance: jest.fn(() => Promise.resolve({}))\n  })\n};\n\n// Mock alchemical context\nexport const mockAlchemicalContext = {\n  useAlchemical: () => ({\n    state: {\n      astrologicalState: { sunSign: 'Aries' },\n      elementalBalance: { Fire: 0.25, Water: 0.25, Earth: 0.25, Air: 0.25 }\n    },\n    planetaryPositions: mockPlanetaryPositions,\n    isDaytime: true\n  })\n};\n\n// Export all mocks for easy importing\nexport const allMocks = {\n  mockPlanetaryPositions,\n  mockLogger,\n  mockCreateLogger,\n  mockRouter,\n  mockUseRouter,\n  mockReliableAstronomy,\n  mockAgentHooks,\n  mockMCPServerIntegration,\n  mockDevelopmentExperienceOptimizations,\n  mockStatePreservationHooks,\n  mockErrorHandler,\n  mockSteeringFileIntelligence,\n  mockAlchemicalContext\n};"],"version":3}