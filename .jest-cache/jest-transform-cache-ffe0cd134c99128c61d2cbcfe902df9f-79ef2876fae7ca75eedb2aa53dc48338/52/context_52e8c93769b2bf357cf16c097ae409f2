c3c8013b53413bede2bfc95a13e5c426
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.AlchemicalContext = exports.defaultState = void 0;
const react_1 = require("react");
// Define default state
exports.defaultState = {
    currentSeason: 'spring',
    timeOfDay: 'morning',
    astrologicalState: {
        currentZodiac: 'aries',
        sunSign: 'aries',
        lunarPhase: 'new moon',
        moonPhase: 'new moon',
        activePlanets: ['sun', 'moon']
    },
    currentEnergy: {
        zodiacEnergy: '',
        lunarEnergy: '',
        planetaryEnergy: ''
    },
    elementalPreference: {
        Fire: 0.32,
        Water: 0.28,
        Earth: 0.18,
        Air: 0.22
    },
    elementalState: {
        Fire: 0.32,
        Water: 0.28,
        Earth: 0.18,
        Air: 0.22
    },
    celestialPositions: {
        sun: {
            sign: 'aries',
            degree: 0
        },
        moon: {
            sign: 'taurus',
            degree: 0
        }
    },
    error: false,
    errorMessage: '',
    errors: [],
    zodiacEnergy: '',
    lunarEnergy: '',
    planetaryEnergy: [],
    alchemicalValues: {
        Spirit: 0.29,
        Essence: 0.28,
        Matter: 0.21,
        Substance: 0.22
    },
    lunarPhase: 'new moon',
    currentTime: new Date(),
    lastUpdated: new Date(),
    planetaryPositions: {},
    normalizedPositions: {},
    dominantElement: 'Fire',
    planetaryHour: 'Sun',
    svgRepresentation: null
};
// Create the context with default values
exports.AlchemicalContext = (0, react_1.createContext)({
    state: exports.defaultState,
    dispatch: () => { },
    planetaryPositions: {},
    isDaytime: true,
    updatePlanetaryPositions: () => { },
    refreshPlanetaryPositions: async () => ({}),
    setDaytime: () => { },
    updateState: () => { }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL0dyZWdDYXN0cm8vRGVza3RvcC9XaGF0VG9FYXROZXh0L3NyYy9jb250ZXh0cy9BbGNoZW1pY2FsQ29udGV4dC9jb250ZXh0LnRzeCIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxDQUFDOzs7QUFFYixpQ0FBc0M7QUFJdEMsdUJBQXVCO0FBQ1YsUUFBQSxZQUFZLEdBQW9CO0lBQzNDLGFBQWEsRUFBRSxRQUFRO0lBQ3ZCLFNBQVMsRUFBRSxTQUFTO0lBQ3BCLGlCQUFpQixFQUFFO1FBQ2pCLGFBQWEsRUFBRSxPQUFPO1FBQ3RCLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLFVBQVUsRUFBRSxVQUFVO1FBQ3RCLFNBQVMsRUFBRSxVQUFVO1FBQ3JCLGFBQWEsRUFBRSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUM7S0FDL0I7SUFDRCxhQUFhLEVBQUU7UUFDYixZQUFZLEVBQUUsRUFBRTtRQUNoQixXQUFXLEVBQUUsRUFBRTtRQUNmLGVBQWUsRUFBRSxFQUFFO0tBQ3BCO0lBQ0QsbUJBQW1CLEVBQUU7UUFDbkIsSUFBSSxFQUFFLElBQUk7UUFDVixLQUFLLEVBQUUsSUFBSTtRQUNYLEtBQUssRUFBRSxJQUFJO1FBQ1gsR0FBRyxFQUFFLElBQUk7S0FDVjtJQUNELGNBQWMsRUFBRTtRQUNkLElBQUksRUFBRSxJQUFJO1FBQ1YsS0FBSyxFQUFFLElBQUk7UUFDWCxLQUFLLEVBQUUsSUFBSTtRQUNYLEdBQUcsRUFBRSxJQUFJO0tBQ1Y7SUFDRCxrQkFBa0IsRUFBRTtRQUNsQixHQUFHLEVBQUU7WUFDSCxJQUFJLEVBQUUsT0FBTztZQUNiLE1BQU0sRUFBRSxDQUFDO1NBQ1Y7UUFDRCxJQUFJLEVBQUU7WUFDSixJQUFJLEVBQUUsUUFBUTtZQUNkLE1BQU0sRUFBRSxDQUFDO1NBQ1Y7S0FDRjtJQUNELEtBQUssRUFBRSxLQUFLO0lBQ1osWUFBWSxFQUFFLEVBQUU7SUFDaEIsTUFBTSxFQUFFLEVBQUU7SUFDVixZQUFZLEVBQUUsRUFBRTtJQUNoQixXQUFXLEVBQUUsRUFBRTtJQUNmLGVBQWUsRUFBRSxFQUFFO0lBQ25CLGdCQUFnQixFQUFFO1FBQ2hCLE1BQU0sRUFBRSxJQUFJO1FBQ1osT0FBTyxFQUFFLElBQUk7UUFDYixNQUFNLEVBQUUsSUFBSTtRQUNaLFNBQVMsRUFBRSxJQUFJO0tBQ2hCO0lBQ0QsVUFBVSxFQUFFLFVBQVU7SUFDdEIsV0FBVyxFQUFFLElBQUksSUFBSSxFQUFFO0lBQ3ZCLFdBQVcsRUFBRSxJQUFJLElBQUksRUFBRTtJQUN2QixrQkFBa0IsRUFBRSxFQUFFO0lBQ3RCLG1CQUFtQixFQUFFLEVBQUU7SUFDdkIsZUFBZSxFQUFFLE1BQU07SUFDdkIsYUFBYSxFQUFFLEtBQUs7SUFDcEIsaUJBQWlCLEVBQUUsSUFBSTtDQUN4QixDQUFDO0FBRUYseUNBQXlDO0FBQzVCLFFBQUEsaUJBQWlCLEdBQUcsSUFBQSxxQkFBYSxFQUF3QjtJQUNwRSxLQUFLLEVBQUUsb0JBQVk7SUFDbkIsUUFBUSxFQUFFLEdBQUcsRUFBRSxHQUFFLENBQUM7SUFDbEIsa0JBQWtCLEVBQUUsRUFBRTtJQUN0QixTQUFTLEVBQUUsSUFBSTtJQUNmLHdCQUF3QixFQUFFLEdBQUcsRUFBRSxHQUFFLENBQUM7SUFDbEMseUJBQXlCLEVBQUUsS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUMzQyxVQUFVLEVBQUUsR0FBRyxFQUFFLEdBQUUsQ0FBQztJQUNwQixXQUFXLEVBQUUsR0FBRyxFQUFFLEdBQUUsQ0FBQztDQUN0QixDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL0dyZWdDYXN0cm8vRGVza3RvcC9XaGF0VG9FYXROZXh0L3NyYy9jb250ZXh0cy9BbGNoZW1pY2FsQ29udGV4dC9jb250ZXh0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IEFsY2hlbWljYWxTdGF0ZSwgQWxjaGVtaWNhbENvbnRleHRUeXBlLCBQbGFuZXRhcnlQb3NpdGlvbnNUeXBlIH0gZnJvbSAnLi90eXBlcyc7XG5cbi8vIERlZmluZSBkZWZhdWx0IHN0YXRlXG5leHBvcnQgY29uc3QgZGVmYXVsdFN0YXRlOiBBbGNoZW1pY2FsU3RhdGUgPSB7XG4gIGN1cnJlbnRTZWFzb246ICdzcHJpbmcnLFxuICB0aW1lT2ZEYXk6ICdtb3JuaW5nJyxcbiAgYXN0cm9sb2dpY2FsU3RhdGU6IHtcbiAgICBjdXJyZW50Wm9kaWFjOiAnYXJpZXMnLFxuICAgIHN1blNpZ246ICdhcmllcycsXG4gICAgbHVuYXJQaGFzZTogJ25ldyBtb29uJyxcbiAgICBtb29uUGhhc2U6ICduZXcgbW9vbicsXG4gICAgYWN0aXZlUGxhbmV0czogWydzdW4nLCAnbW9vbiddXG4gIH0sXG4gIGN1cnJlbnRFbmVyZ3k6IHtcbiAgICB6b2RpYWNFbmVyZ3k6ICcnLFxuICAgIGx1bmFyRW5lcmd5OiAnJyxcbiAgICBwbGFuZXRhcnlFbmVyZ3k6ICcnXG4gIH0sXG4gIGVsZW1lbnRhbFByZWZlcmVuY2U6IHtcbiAgICBGaXJlOiAwLjMyLFxuICAgIFdhdGVyOiAwLjI4LCBcbiAgICBFYXJ0aDogMC4xOCxcbiAgICBBaXI6IDAuMjJcbiAgfSxcbiAgZWxlbWVudGFsU3RhdGU6IHtcbiAgICBGaXJlOiAwLjMyLFxuICAgIFdhdGVyOiAwLjI4LCBcbiAgICBFYXJ0aDogMC4xOCxcbiAgICBBaXI6IDAuMjJcbiAgfSxcbiAgY2VsZXN0aWFsUG9zaXRpb25zOiB7XG4gICAgc3VuOiB7XG4gICAgICBzaWduOiAnYXJpZXMnLFxuICAgICAgZGVncmVlOiAwXG4gICAgfSxcbiAgICBtb29uOiB7XG4gICAgICBzaWduOiAndGF1cnVzJyxcbiAgICAgIGRlZ3JlZTogMFxuICAgIH1cbiAgfSxcbiAgZXJyb3I6IGZhbHNlLFxuICBlcnJvck1lc3NhZ2U6ICcnLFxuICBlcnJvcnM6IFtdLFxuICB6b2RpYWNFbmVyZ3k6ICcnLFxuICBsdW5hckVuZXJneTogJycsXG4gIHBsYW5ldGFyeUVuZXJneTogW10sXG4gIGFsY2hlbWljYWxWYWx1ZXM6IHtcbiAgICBTcGlyaXQ6IDAuMjksXG4gICAgRXNzZW5jZTogMC4yOCxcbiAgICBNYXR0ZXI6IDAuMjEsXG4gICAgU3Vic3RhbmNlOiAwLjIyXG4gIH0sXG4gIGx1bmFyUGhhc2U6ICduZXcgbW9vbicsXG4gIGN1cnJlbnRUaW1lOiBuZXcgRGF0ZSgpLFxuICBsYXN0VXBkYXRlZDogbmV3IERhdGUoKSxcbiAgcGxhbmV0YXJ5UG9zaXRpb25zOiB7fSxcbiAgbm9ybWFsaXplZFBvc2l0aW9uczoge30sXG4gIGRvbWluYW50RWxlbWVudDogJ0ZpcmUnLFxuICBwbGFuZXRhcnlIb3VyOiAnU3VuJyxcbiAgc3ZnUmVwcmVzZW50YXRpb246IG51bGxcbn07XG5cbi8vIENyZWF0ZSB0aGUgY29udGV4dCB3aXRoIGRlZmF1bHQgdmFsdWVzXG5leHBvcnQgY29uc3QgQWxjaGVtaWNhbENvbnRleHQgPSBjcmVhdGVDb250ZXh0PEFsY2hlbWljYWxDb250ZXh0VHlwZT4oe1xuICBzdGF0ZTogZGVmYXVsdFN0YXRlLFxuICBkaXNwYXRjaDogKCkgPT4ge30sXG4gIHBsYW5ldGFyeVBvc2l0aW9uczoge30sXG4gIGlzRGF5dGltZTogdHJ1ZSxcbiAgdXBkYXRlUGxhbmV0YXJ5UG9zaXRpb25zOiAoKSA9PiB7fSxcbiAgcmVmcmVzaFBsYW5ldGFyeVBvc2l0aW9uczogYXN5bmMgKCkgPT4gKHt9KSxcbiAgc2V0RGF5dGltZTogKCkgPT4ge30sXG4gIHVwZGF0ZVN0YXRlOiAoKSA9PiB7fVxufSk7XG5cbi8vIEV4cG9ydCB0aGUgQWxjaGVtaWNhbENvbnRleHRUeXBlIGZvciBkaXJlY3QgaW1wb3J0c1xuZXhwb3J0IHR5cGUgeyBBbGNoZW1pY2FsQ29udGV4dFR5cGUgfSBmcm9tICcuL3R5cGVzJzsgIl0sInZlcnNpb24iOjN9