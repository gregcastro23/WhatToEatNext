{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/contexts/AlchemicalContext/context.tsx","mappings":";AAAA,YAAY,CAAC;;;AAEb,iCAAsC;AAItC,uBAAuB;AACV,QAAA,YAAY,GAAoB;IAC3C,aAAa,EAAE,QAAQ;IACvB,SAAS,EAAE,SAAS;IACpB,iBAAiB,EAAE;QACjB,aAAa,EAAE,OAAO;QACtB,OAAO,EAAE,OAAO;QAChB,UAAU,EAAE,UAAU;QACtB,SAAS,EAAE,UAAU;QACrB,aAAa,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;KAC/B;IACD,aAAa,EAAE;QACb,YAAY,EAAE,EAAE;QAChB,WAAW,EAAE,EAAE;QACf,eAAe,EAAE,EAAE;KACpB;IACD,mBAAmB,EAAE;QACnB,IAAI,EAAE,IAAI;QACV,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,IAAI;QACX,GAAG,EAAE,IAAI;KACV;IACD,cAAc,EAAE;QACd,IAAI,EAAE,IAAI;QACV,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,IAAI;QACX,GAAG,EAAE,IAAI;KACV;IACD,kBAAkB,EAAE;QAClB,GAAG,EAAE;YACH,IAAI,EAAE,OAAO;YACb,MAAM,EAAE,CAAC;SACV;QACD,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;YACd,MAAM,EAAE,CAAC;SACV;KACF;IACD,KAAK,EAAE,KAAK;IACZ,YAAY,EAAE,EAAE;IAChB,MAAM,EAAE,EAAE;IACV,YAAY,EAAE,EAAE;IAChB,WAAW,EAAE,EAAE;IACf,eAAe,EAAE,EAAE;IACnB,gBAAgB,EAAE;QAChB,MAAM,EAAE,IAAI;QACZ,OAAO,EAAE,IAAI;QACb,MAAM,EAAE,IAAI;QACZ,SAAS,EAAE,IAAI;KAChB;IACD,UAAU,EAAE,UAAU;IACtB,WAAW,EAAE,IAAI,IAAI,EAAE;IACvB,WAAW,EAAE,IAAI,IAAI,EAAE;IACvB,kBAAkB,EAAE,EAAE;IACtB,mBAAmB,EAAE,EAAE;IACvB,eAAe,EAAE,MAAM;IACvB,aAAa,EAAE,KAAK;IACpB,iBAAiB,EAAE,IAAI;CACxB,CAAC;AAEF,yCAAyC;AAC5B,QAAA,iBAAiB,GAAG,IAAA,qBAAa,EAAwB;IACpE,KAAK,EAAE,oBAAY;IACnB,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;IAClB,kBAAkB,EAAE,EAAE;IACtB,SAAS,EAAE,IAAI;IACf,wBAAwB,EAAE,GAAG,EAAE,GAAE,CAAC;IAClC,yBAAyB,EAAE,KAAK,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;IAC3C,UAAU,EAAE,GAAG,EAAE,GAAE,CAAC;IACpB,WAAW,EAAE,GAAG,EAAE,GAAE,CAAC;CACtB,CAAC,CAAC","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/contexts/AlchemicalContext/context.tsx"],"sourcesContent":["'use client';\n\nimport { createContext } from 'react';\n\nimport { AlchemicalState, AlchemicalContextType, PlanetaryPositionsType } from './types';\n\n// Define default state\nexport const defaultState: AlchemicalState = {\n  currentSeason: 'spring',\n  timeOfDay: 'morning',\n  astrologicalState: {\n    currentZodiac: 'aries',\n    sunSign: 'aries',\n    lunarPhase: 'new moon',\n    moonPhase: 'new moon',\n    activePlanets: ['sun', 'moon']\n  },\n  currentEnergy: {\n    zodiacEnergy: '',\n    lunarEnergy: '',\n    planetaryEnergy: ''\n  },\n  elementalPreference: {\n    Fire: 0.32,\n    Water: 0.28, \n    Earth: 0.18,\n    Air: 0.22\n  },\n  elementalState: {\n    Fire: 0.32,\n    Water: 0.28, \n    Earth: 0.18,\n    Air: 0.22\n  },\n  celestialPositions: {\n    sun: {\n      sign: 'aries',\n      degree: 0\n    },\n    moon: {\n      sign: 'taurus',\n      degree: 0\n    }\n  },\n  error: false,\n  errorMessage: '',\n  errors: [],\n  zodiacEnergy: '',\n  lunarEnergy: '',\n  planetaryEnergy: [],\n  alchemicalValues: {\n    Spirit: 0.29,\n    Essence: 0.28,\n    Matter: 0.21,\n    Substance: 0.22\n  },\n  lunarPhase: 'new moon',\n  currentTime: new Date(),\n  lastUpdated: new Date(),\n  planetaryPositions: {},\n  normalizedPositions: {},\n  dominantElement: 'Fire',\n  planetaryHour: 'Sun',\n  svgRepresentation: null\n};\n\n// Create the context with default values\nexport const AlchemicalContext = createContext<AlchemicalContextType>({\n  state: defaultState,\n  dispatch: () => {},\n  planetaryPositions: {},\n  isDaytime: true,\n  updatePlanetaryPositions: () => {},\n  refreshPlanetaryPositions: async () => ({}),\n  setDaytime: () => {},\n  updateState: () => {}\n});\n\n// Export the AlchemicalContextType for direct imports\nexport type { AlchemicalContextType } from './types'; "],"version":3}