{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/ProgressReportingSystem.test.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/ProgressReportingSystem.test.ts"],"sourcesContent":["/**\n * Progress Reporting System Tests\n * Perfect Codebase Campaign - Comprehensive Testing\n */\n\nimport {\n  ProgressReportingSystem,\n  CampaignSummaryReport,\n  CampaignStatus,\n} from './ProgressReportingSystem';\nimport { MetricsCollectionSystem } from './MetricsCollectionSystem';\nimport { MilestoneValidationSystem } from './MilestoneValidationSystem';\nimport { PhaseStatus } from '../../types/campaign';\nimport * as fs from 'fs';\n\n// Mock dependencies\njest.mock('./MetricsCollectionSystem');\njest.mock('./MilestoneValidationSystem');\njest.mock('fs');\n\nconst MockMetricsCollectionSystem = MetricsCollectionSystem as jest.MockedClass<\n  typeof MetricsCollectionSystem\n>;\nconst MockMilestoneValidationSystem =\n  MilestoneValidationSystem as jest.MockedClass<\n    typeof MilestoneValidationSystem\n  >;\nconst mockFs = fs as jest.Mocked<typeof fs>;\n\ndescribe('ProgressReportingSystem', () => {\n  let reportingSystem: ProgressReportingSystem;\n  let mockMetricsCollector: jest.Mocked<MetricsCollectionSystem>;\n  let mockValidationSystem: jest.Mocked<MilestoneValidationSystem>;\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n\n    mockMetricsCollector =\n      new MockMetricsCollectionSystem() as jest.Mocked<MetricsCollectionSystem>;\n    mockValidationSystem =\n      new MockMilestoneValidationSystem() as jest.Mocked<MilestoneValidationSystem>;\n\n    reportingSystem = new ProgressReportingSystem();\n    (reportingSystem as any).metricsCollector = mockMetricsCollector;\n    (reportingSystem as any).validationSystem = mockValidationSystem;\n  });\n\n  describe('Campaign Summary Report Generation', () => {\n    test('should generate comprehensive campaign summary report', async () => {\n      // Mock successful campaign metrics\n      mockMetricsCollector.collectDetailedMetrics.mockResolvedValue({\n        timestamp: new Date(),\n        typeScriptErrors: {\n          current: 0,\n          target: 0,\n          reduction: 86,\n          percentage: 100,\n        },\n        lintingWarnings: {\n          current: 0,\n          target: 0,\n          reduction: 4506,\n          percentage: 100,\n        },\n        buildPerformance: {\n          currentTime: 8,\n          targetTime: 10,\n          cacheHitRate: 0.85,\n          memoryUsage: 45,\n        },\n        enterpriseSystems: {\n          current: 250,\n          target: 200,\n          transformedExports: 250,\n        },\n        errorBreakdown: {},\n        warningBreakdown: {},\n        buildMetrics: {\n          buildTime: 8,\n          bundleSize: 420,\n          cacheHitRate: 0.85,\n          memoryUsage: 45,\n          cpuUsage: 15,\n          diskUsage: 1024,\n          compilationSpeed: 25,\n        },\n        resourceMetrics: {\n          nodeMemoryUsage: process.memoryUsage(),\n          systemMemory: { total: 8192, used: 4096, free: 4096, percentage: 50 },\n          diskSpace: {\n            total: 1000000,\n            used: 500000,\n            free: 500000,\n            percentage: 50,\n          },\n        },\n        trendData: {\n          errorReductionRate: 10,\n          warningReductionRate: 50,\n          buildTimeImprovement: 2,\n          systemGrowthRate: 5,\n        },\n      });\n\n      // Mock successful phase validations\n      mockValidationSystem.validateAllPhases.mockResolvedValue([\n        {\n          phaseId: 'phase1',\n          phaseName: 'TypeScript Error Elimination',\n          overallSuccess: true,\n          completionPercentage: 100,\n          milestones: [\n            {\n              milestone: 'Zero TypeScript Errors',\n              phase: 'phase1',\n              success: true,\n              timestamp: new Date(),\n              metrics: {} as any,\n              criteria: [],\n              failureReasons: [],\n              recommendations: [],\n            },\n          ],\n          criticalFailures: [],\n          nextSteps: ['Phase 1 complete - proceed to Phase 2'],\n        },\n        {\n          phaseId: 'phase2',\n          phaseName: 'Linting Excellence Achievement',\n          overallSuccess: true,\n          completionPercentage: 100,\n          milestones: [\n            {\n              milestone: 'Zero Linting Warnings',\n              phase: 'phase2',\n              success: true,\n              timestamp: new Date(),\n              metrics: {} as any,\n              criteria: [],\n              failureReasons: [],\n              recommendations: [],\n            },\n          ],\n          criticalFailures: [],\n          nextSteps: ['Phase 2 complete - proceed to Phase 3'],\n        },\n        {\n          phaseId: 'phase3',\n          phaseName: 'Enterprise Intelligence Transformation',\n          overallSuccess: true,\n          completionPercentage: 100,\n          milestones: [\n            {\n              milestone: 'Enterprise System Count Target',\n              phase: 'phase3',\n              success: true,\n              timestamp: new Date(),\n              metrics: {} as any,\n              criteria: [],\n              failureReasons: [],\n              recommendations: [],\n            },\n          ],\n          criticalFailures: [],\n          nextSteps: ['Phase 3 complete - proceed to Phase 4'],\n        },\n        {\n          phaseId: 'phase4',\n          phaseName: 'Performance Optimization Maintenance',\n          overallSuccess: true,\n          completionPercentage: 100,\n          milestones: [\n            {\n              milestone: 'Build Performance Targets',\n              phase: 'phase4',\n              success: true,\n              timestamp: new Date(),\n              metrics: {} as any,\n              criteria: [],\n              failureReasons: [],\n              recommendations: [],\n            },\n          ],\n          criticalFailures: [],\n          nextSteps: ['Perfect Codebase Campaign Complete! 🎉'],\n        },\n      ]);\n\n      const report = await reportingSystem.generateCampaignSummaryReport();\n\n      expect(report.campaignId).toBe('perfect-codebase-campaign');\n      expect(report.overallStatus).toBe(CampaignStatus.COMPLETED);\n      expect(report.overallProgress).toBe(100);\n      expect(report.phases).toHaveLength(4);\n      expect(report.keyAchievements.length).toBeGreaterThan(0);\n      expect(report.criticalIssues).toHaveLength(0);\n      expect(report.executiveSummary).toContain('completed successfully');\n    });\n\n    test('should generate report for campaign in progress', async () => {\n      // Mock partial progress metrics\n      mockMetricsCollector.collectDetailedMetrics.mockResolvedValue({\n        timestamp: new Date(),\n        typeScriptErrors: {\n          current: 10,\n          target: 0,\n          reduction: 76,\n          percentage: 88,\n        },\n        lintingWarnings: {\n          current: 500,\n          target: 0,\n          reduction: 4006,\n          percentage: 89,\n        },\n        buildPerformance: {\n          currentTime: 12,\n          targetTime: 10,\n          cacheHitRate: 0.75,\n          memoryUsage: 55,\n        },\n        enterpriseSystems: {\n          current: 150,\n          target: 200,\n          transformedExports: 150,\n        },\n        errorBreakdown: { TS2352: 5, TS2345: 3, TS2698: 2 },\n        warningBreakdown: {\n          '@typescript-eslint/no-explicit-any': 200,\n          'no-unused-vars': 300,\n        },\n        buildMetrics: {\n          buildTime: 12,\n          bundleSize: 480,\n          cacheHitRate: 0.75,\n          memoryUsage: 55,\n          cpuUsage: 25,\n          diskUsage: 1200,\n          compilationSpeed: 20,\n        },\n        resourceMetrics: {\n          nodeMemoryUsage: process.memoryUsage(),\n          systemMemory: { total: 8192, used: 5120, free: 3072, percentage: 62 },\n          diskSpace: {\n            total: 1000000,\n            used: 600000,\n            free: 400000,\n            percentage: 60,\n          },\n        },\n        trendData: {\n          errorReductionRate: 5,\n          warningReductionRate: 25,\n          buildTimeImprovement: 1,\n          systemGrowthRate: 3,\n        },\n      });\n\n      // Mock mixed phase validations\n      mockValidationSystem.validateAllPhases.mockResolvedValue([\n        {\n          phaseId: 'phase1',\n          phaseName: 'TypeScript Error Elimination',\n          overallSuccess: false,\n          completionPercentage: 88,\n          milestones: [\n            {\n              milestone: 'Zero TypeScript Errors',\n              phase: 'phase1',\n              success: false,\n              timestamp: new Date(),\n              metrics: {} as any,\n              criteria: [],\n              failureReasons: ['10 errors remaining'],\n              recommendations: [],\n            },\n          ],\n          criticalFailures: ['TypeScript Error Count: expected 0, got 10'],\n          nextSteps: ['Continue with Enhanced TypeScript Error Fixer v3.0'],\n        },\n        {\n          phaseId: 'phase2',\n          phaseName: 'Linting Excellence Achievement',\n          overallSuccess: false,\n          completionPercentage: 75,\n          milestones: [],\n          criticalFailures: ['Linting Warning Count: expected 0, got 500'],\n          nextSteps: ['Continue with systematic linting fixes'],\n        },\n        {\n          phaseId: 'phase3',\n          phaseName: 'Enterprise Intelligence Transformation',\n          overallSuccess: false,\n          completionPercentage: 60,\n          milestones: [],\n          criticalFailures: [\n            'Enterprise System Count: expected >= 200, got 150',\n          ],\n          nextSteps: ['Continue transforming exports to reach 200+ systems'],\n        },\n        {\n          phaseId: 'phase4',\n          phaseName: 'Performance Optimization Maintenance',\n          overallSuccess: false,\n          completionPercentage: 40,\n          milestones: [],\n          criticalFailures: ['Build Time: expected <= 10s, got 12s'],\n          nextSteps: ['Optimize build performance with caching improvements'],\n        },\n      ]);\n\n      const report = await reportingSystem.generateCampaignSummaryReport();\n\n      expect(report.overallStatus).toBe(CampaignStatus.BLOCKED);\n      expect(report.overallProgress).toBeLessThan(100);\n      expect(report.criticalIssues.length).toBeGreaterThan(0);\n      expect(report.recommendations.length).toBeGreaterThan(0);\n      expect(report.executiveSummary).toContain('currently blocked');\n    });\n  });\n\n  describe('Phase Completion Reports', () => {\n    test('should generate detailed phase completion report', async () => {\n      mockMetricsCollector.collectDetailedMetrics.mockResolvedValue({\n        timestamp: new Date(),\n        typeScriptErrors: {\n          current: 0,\n          target: 0,\n          reduction: 86,\n          percentage: 100,\n        },\n        lintingWarnings: {\n          current: 0,\n          target: 0,\n          reduction: 4506,\n          percentage: 100,\n        },\n        buildPerformance: {\n          currentTime: 8,\n          targetTime: 10,\n          cacheHitRate: 0.85,\n          memoryUsage: 45,\n        },\n        enterpriseSystems: {\n          current: 250,\n          target: 200,\n          transformedExports: 250,\n        },\n        errorBreakdown: {},\n        warningBreakdown: {},\n        buildMetrics: {\n          buildTime: 8,\n          bundleSize: 420,\n          cacheHitRate: 0.85,\n          memoryUsage: 45,\n          cpuUsage: 15,\n          diskUsage: 1024,\n          compilationSpeed: 25,\n        },\n        resourceMetrics: {\n          nodeMemoryUsage: process.memoryUsage(),\n          systemMemory: { total: 8192, used: 4096, free: 4096, percentage: 50 },\n          diskSpace: {\n            total: 1000000,\n            used: 500000,\n            free: 500000,\n            percentage: 50,\n          },\n        },\n        trendData: {\n          errorReductionRate: 10,\n          warningReductionRate: 50,\n          buildTimeImprovement: 2,\n          systemGrowthRate: 5,\n        },\n      });\n\n      mockValidationSystem.validatePhase1.mockResolvedValue({\n        phaseId: 'phase1',\n        phaseName: 'TypeScript Error Elimination',\n        overallSuccess: true,\n        completionPercentage: 100,\n        milestones: [\n          {\n            milestone: 'Zero TypeScript Errors',\n            phase: 'phase1',\n            success: true,\n            timestamp: new Date(),\n            metrics: {} as any,\n            criteria: [],\n            failureReasons: [],\n            recommendations: [],\n          },\n        ],\n        criticalFailures: [],\n        nextSteps: ['Phase 1 complete - proceed to Phase 2'],\n      });\n\n      const report =\n        await reportingSystem.generatePhaseCompletionReport('phase1');\n\n      expect(report.phaseId).toBe('phase1');\n      expect(report.phaseName).toBe('TypeScript Error Elimination');\n      expect(report.status).toBe(PhaseStatus.COMPLETED);\n      expect(report.achievements.length).toBeGreaterThan(0);\n      expect(report.issues).toHaveLength(0);\n    });\n\n    test('should handle invalid phase ID', async () => {\n      await expect(\n        reportingSystem.generatePhaseCompletionReport('invalid-phase')\n      ).rejects.toThrow('Unknown phase: invalid-phase');\n    });\n  });\n\n  describe('Visualization Data Generation', () => {\n    test('should generate comprehensive visualization data', async () => {\n      // Mock snapshots for time series data\n      mockMetricsCollector.getSnapshots.mockReturnValue([\n        {\n          id: 'snapshot1',\n          timestamp: new Date('2024-01-01'),\n          metrics: {\n            timestamp: new Date('2024-01-01'),\n            typeScriptErrors: {\n              current: 50,\n              target: 0,\n              reduction: 36,\n              percentage: 42,\n            },\n            lintingWarnings: {\n              current: 2000,\n              target: 0,\n              reduction: 2506,\n              percentage: 56,\n            },\n            buildPerformance: {\n              currentTime: 15,\n              targetTime: 10,\n              cacheHitRate: 0.7,\n              memoryUsage: 60,\n            },\n            enterpriseSystems: {\n              current: 100,\n              target: 200,\n              transformedExports: 100,\n            },\n            errorBreakdown: { TS2352: 20, TS2345: 15 },\n            warningBreakdown: { '@typescript-eslint/no-explicit-any': 800 },\n            buildMetrics: {\n              buildTime: 15,\n              bundleSize: 500,\n              cacheHitRate: 0.7,\n              memoryUsage: 60,\n              cpuUsage: 30,\n              diskUsage: 1500,\n              compilationSpeed: 15,\n            },\n            resourceMetrics: {\n              nodeMemoryUsage: process.memoryUsage(),\n              systemMemory: {\n                total: 8192,\n                used: 4915,\n                free: 3277,\n                percentage: 60,\n              },\n              diskSpace: {\n                total: 1000000,\n                used: 600000,\n                free: 400000,\n                percentage: 60,\n              },\n            },\n            trendData: {\n              errorReductionRate: 8,\n              warningReductionRate: 40,\n              buildTimeImprovement: 1.5,\n              systemGrowthRate: 4,\n            },\n          },\n          phase: 'phase1',\n        },\n      ]);\n\n      mockValidationSystem.validateAllPhases.mockResolvedValue([\n        {\n          phaseId: 'phase1',\n          phaseName: 'TypeScript Error Elimination',\n          overallSuccess: false,\n          completionPercentage: 75,\n          milestones: [],\n          criticalFailures: [],\n          nextSteps: [],\n        },\n      ]);\n\n      mockMetricsCollector.collectDetailedMetrics.mockResolvedValue({\n        timestamp: new Date(),\n        typeScriptErrors: {\n          current: 10,\n          target: 0,\n          reduction: 76,\n          percentage: 88,\n        },\n        lintingWarnings: {\n          current: 500,\n          target: 0,\n          reduction: 4006,\n          percentage: 89,\n        },\n        buildPerformance: {\n          currentTime: 12,\n          targetTime: 10,\n          cacheHitRate: 0.75,\n          memoryUsage: 55,\n        },\n        enterpriseSystems: {\n          current: 150,\n          target: 200,\n          transformedExports: 150,\n        },\n        errorBreakdown: { TS2352: 5, TS2345: 3, TS2698: 2 },\n        warningBreakdown: {\n          '@typescript-eslint/no-explicit-any': 200,\n          'no-unused-vars': 300,\n        },\n        buildMetrics: {\n          buildTime: 12,\n          bundleSize: 480,\n          cacheHitRate: 0.75,\n          memoryUsage: 55,\n          cpuUsage: 25,\n          diskUsage: 1200,\n          compilationSpeed: 20,\n        },\n        resourceMetrics: {\n          nodeMemoryUsage: process.memoryUsage(),\n          systemMemory: { total: 8192, used: 5120, free: 3072, percentage: 62 },\n          diskSpace: {\n            total: 1000000,\n            used: 600000,\n            free: 400000,\n            percentage: 60,\n          },\n        },\n        trendData: {\n          errorReductionRate: 5,\n          warningReductionRate: 25,\n          buildTimeImprovement: 1,\n          systemGrowthRate: 3,\n        },\n      });\n\n      const visualizationData =\n        await reportingSystem.generateVisualizationData();\n\n      expect(visualizationData.timeSeriesData).toHaveLength(1);\n      expect(visualizationData.phaseProgressChart).toHaveLength(1);\n      expect(visualizationData.errorDistributionChart.length).toBeGreaterThan(\n        0\n      );\n      expect(visualizationData.performanceTrendChart).toHaveLength(1);\n\n      // Verify time series data structure\n      const timeSeriesPoint = visualizationData.timeSeriesData[0];\n      expect(timeSeriesPoint.timestamp).toBeInstanceOf(Date);\n      expect(typeof timeSeriesPoint.typeScriptErrors).toBe('number');\n      expect(typeof timeSeriesPoint.lintingWarnings).toBe('number');\n      expect(typeof timeSeriesPoint.buildTime).toBe('number');\n      expect(typeof timeSeriesPoint.enterpriseSystems).toBe('number');\n    });\n  });\n\n  describe('Report Export Functionality', () => {\n    test('should export report in JSON format', async () => {\n      const mockReport: CampaignSummaryReport = {\n        campaignId: 'perfect-codebase-campaign',\n        generatedAt: new Date(),\n        overallStatus: CampaignStatus.IN_PROGRESS,\n        overallProgress: 75,\n        phases: [],\n        keyAchievements: [],\n        criticalIssues: [],\n        performanceMetrics: {\n          typeScriptErrors: {\n            initial: 86,\n            current: 20,\n            reduction: 66,\n            reductionRate: 5,\n          },\n          lintingWarnings: {\n            initial: 4506,\n            current: 1000,\n            reduction: 3506,\n            reductionRate: 25,\n          },\n          buildPerformance: {\n            currentTime: 12,\n            targetTime: 10,\n            improvement: 1,\n            cacheEfficiency: 0.75,\n          },\n          enterpriseSystems: {\n            initial: 0,\n            current: 150,\n            target: 200,\n            growthRate: 3,\n          },\n        },\n        recommendations: [],\n        estimatedCompletion: new Date(),\n        executiveSummary: 'Campaign in progress',\n      };\n\n      mockFs.writeFileSync.mockImplementation();\n\n      const exportedFiles = await reportingSystem.exportReport(mockReport, [\n        'json',\n      ]);\n\n      expect(exportedFiles).toHaveLength(1);\n      expect(exportedFiles[0]).toMatch(/campaign-report-.*\\.json$/);\n      expect(mockFs.writeFileSync).toHaveBeenCalledWith(\n        expect.stringMatching(/campaign-report-.*\\.json$/),\n        expect.stringContaining('\"campaignId\": \"perfect-codebase-campaign\"')\n      );\n    });\n\n    test('should export report in multiple formats', async () => {\n      const mockReport: CampaignSummaryReport = {\n        campaignId: 'perfect-codebase-campaign',\n        generatedAt: new Date(),\n        overallStatus: CampaignStatus.COMPLETED,\n        overallProgress: 100,\n        phases: [\n          {\n            phaseId: 'phase1',\n            phaseName: 'TypeScript Error Elimination',\n            status: PhaseStatus.COMPLETED,\n            progress: 100,\n            keyMetrics: {},\n            milestones: [],\n            blockers: [],\n          },\n        ],\n        keyAchievements: [\n          {\n            title: 'Zero TypeScript Errors',\n            description: 'All errors eliminated',\n            phase: 'phase1',\n            achievedAt: new Date(),\n            impact: 'CRITICAL' as any,\n            metrics: {},\n          },\n        ],\n        criticalIssues: [],\n        performanceMetrics: {\n          typeScriptErrors: {\n            initial: 86,\n            current: 0,\n            reduction: 86,\n            reductionRate: 10,\n          },\n          lintingWarnings: {\n            initial: 4506,\n            current: 0,\n            reduction: 4506,\n            reductionRate: 50,\n          },\n          buildPerformance: {\n            currentTime: 8,\n            targetTime: 10,\n            improvement: 2,\n            cacheEfficiency: 0.85,\n          },\n          enterpriseSystems: {\n            initial: 0,\n            current: 250,\n            target: 200,\n            growthRate: 5,\n          },\n        },\n        recommendations: [],\n        estimatedCompletion: new Date(),\n        executiveSummary: 'Campaign completed successfully',\n      };\n\n      mockFs.writeFileSync.mockImplementation();\n\n      const exportedFiles = await reportingSystem.exportReport(mockReport, [\n        'json',\n        'html',\n        'markdown',\n        'csv',\n      ]);\n\n      expect(exportedFiles).toHaveLength(4);\n      expect(exportedFiles.some(f => f.endsWith('.json'))).toBe(true);\n      expect(exportedFiles.some(f => f.endsWith('.html'))).toBe(true);\n      expect(exportedFiles.some(f => f.endsWith('.md'))).toBe(true);\n      expect(exportedFiles.some(f => f.endsWith('.csv'))).toBe(true);\n      expect(mockFs.writeFileSync).toHaveBeenCalledTimes(4);\n    });\n  });\n\n  describe('Dashboard Data Generation', () => {\n    test('should generate real-time dashboard data', async () => {\n      // Mock all required data\n      mockMetricsCollector.collectDetailedMetrics.mockResolvedValue({\n        timestamp: new Date(),\n        typeScriptErrors: {\n          current: 0,\n          target: 0,\n          reduction: 86,\n          percentage: 100,\n        },\n        lintingWarnings: {\n          current: 0,\n          target: 0,\n          reduction: 4506,\n          percentage: 100,\n        },\n        buildPerformance: {\n          currentTime: 8,\n          targetTime: 10,\n          cacheHitRate: 0.85,\n          memoryUsage: 45,\n        },\n        enterpriseSystems: {\n          current: 250,\n          target: 200,\n          transformedExports: 250,\n        },\n        errorBreakdown: {},\n        warningBreakdown: {},\n        buildMetrics: {\n          buildTime: 8,\n          bundleSize: 420,\n          cacheHitRate: 0.85,\n          memoryUsage: 45,\n          cpuUsage: 15,\n          diskUsage: 1024,\n          compilationSpeed: 25,\n        },\n        resourceMetrics: {\n          nodeMemoryUsage: process.memoryUsage(),\n          systemMemory: { total: 8192, used: 4096, free: 4096, percentage: 50 },\n          diskSpace: {\n            total: 1000000,\n            used: 500000,\n            free: 500000,\n            percentage: 50,\n          },\n        },\n        trendData: {\n          errorReductionRate: 10,\n          warningReductionRate: 50,\n          buildTimeImprovement: 2,\n          systemGrowthRate: 5,\n        },\n      });\n\n      mockValidationSystem.validateAllPhases.mockResolvedValue([\n        {\n          phaseId: 'phase1',\n          phaseName: 'TypeScript Error Elimination',\n          overallSuccess: true,\n          completionPercentage: 100,\n          milestones: [],\n          criticalFailures: [],\n          nextSteps: [],\n        },\n      ]);\n\n      mockMetricsCollector.getSnapshots.mockReturnValue([]);\n\n      const dashboardData = await reportingSystem.generateDashboardData();\n\n      expect(dashboardData.summary).toBeDefined();\n      expect(dashboardData.visualization).toBeDefined();\n      expect(dashboardData.recentActivity).toBeDefined();\n      expect(Array.isArray(dashboardData.recentActivity)).toBe(true);\n    });\n  });\n\n  describe('Report History Management', () => {\n    test('should maintain report history', async () => {\n      mockMetricsCollector.collectDetailedMetrics.mockResolvedValue({\n        timestamp: new Date(),\n        typeScriptErrors: {\n          current: 0,\n          target: 0,\n          reduction: 86,\n          percentage: 100,\n        },\n        lintingWarnings: {\n          current: 0,\n          target: 0,\n          reduction: 4506,\n          percentage: 100,\n        },\n        buildPerformance: {\n          currentTime: 8,\n          targetTime: 10,\n          cacheHitRate: 0.85,\n          memoryUsage: 45,\n        },\n        enterpriseSystems: {\n          current: 250,\n          target: 200,\n          transformedExports: 250,\n        },\n        errorBreakdown: {},\n        warningBreakdown: {},\n        buildMetrics: {\n          buildTime: 8,\n          bundleSize: 420,\n          cacheHitRate: 0.85,\n          memoryUsage: 45,\n          cpuUsage: 15,\n          diskUsage: 1024,\n          compilationSpeed: 25,\n        },\n        resourceMetrics: {\n          nodeMemoryUsage: process.memoryUsage(),\n          systemMemory: { total: 8192, used: 4096, free: 4096, percentage: 50 },\n          diskSpace: {\n            total: 1000000,\n            used: 500000,\n            free: 500000,\n            percentage: 50,\n          },\n        },\n        trendData: {\n          errorReductionRate: 10,\n          warningReductionRate: 50,\n          buildTimeImprovement: 2,\n          systemGrowthRate: 5,\n        },\n      });\n\n      mockValidationSystem.validateAllPhases.mockResolvedValue([]);\n\n      expect(reportingSystem.getReportHistory()).toHaveLength(0);\n\n      await reportingSystem.generateCampaignSummaryReport();\n      expect(reportingSystem.getReportHistory()).toHaveLength(1);\n\n      await reportingSystem.generateCampaignSummaryReport();\n      expect(reportingSystem.getReportHistory()).toHaveLength(2);\n\n      reportingSystem.clearReportHistory();\n      expect(reportingSystem.getReportHistory()).toHaveLength(0);\n    });\n  });\n\n  describe('Error Handling', () => {\n    test('should handle metrics collection errors gracefully', async () => {\n      mockMetricsCollector.collectDetailedMetrics.mockRejectedValue(\n        new Error('Metrics collection failed')\n      );\n      mockValidationSystem.validateAllPhases.mockResolvedValue([]);\n\n      await expect(\n        reportingSystem.generateCampaignSummaryReport()\n      ).rejects.toThrow('Metrics collection failed');\n    });\n\n    test('should handle validation system errors gracefully', async () => {\n      mockMetricsCollector.collectDetailedMetrics.mockResolvedValue({} as any);\n      mockValidationSystem.validateAllPhases.mockRejectedValue(\n        new Error('Validation failed')\n      );\n\n      await expect(\n        reportingSystem.generateCampaignSummaryReport()\n      ).rejects.toThrow('Validation failed');\n    });\n  });\n});\n"],"version":3}