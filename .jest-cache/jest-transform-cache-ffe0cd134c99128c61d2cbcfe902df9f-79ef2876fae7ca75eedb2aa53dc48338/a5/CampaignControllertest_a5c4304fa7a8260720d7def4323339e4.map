{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/__tests__/CampaignController.test.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/__tests__/CampaignController.test.ts"],"sourcesContent":["/**\n * Unit Tests for CampaignController\n * Perfect Codebase Campaign - Testing Infrastructure\n */\n\nimport {\n  CampaignConfig,\n  CampaignPhase,\n  PhaseResult,\n  ProgressMetrics,\n  ValidationResult,\n  SafetySettings,\n  ProgressTargets,\n  ToolConfiguration,\n  SafetyLevel,\n  PhaseStatus\n} from '../../../types/campaign';\nimport { CampaignController } from '../CampaignController';\n\n// Mock dependencies\njest.mock('child_process');\njest.mock('fs');\n\ndescribe('CampaignController', () => {\n  let controller: CampaignController;\n  let mockConfig: CampaignConfig;\n\n  beforeEach(() => {\n    // Setup mock configuration\n    mockConfig = {\n      phases: [\n        {\n          id: 'phase1',\n          name: 'TypeScript Error Elimination',\n          description: 'Eliminate all TypeScript compilation errors',\n          tools: [\n            {\n              scriptPath: 'scripts/typescript-fixes/fix-typescript-errors-enhanced-v3.js',\n              parameters: { maxFiles: 15, autoFix: true, validateSafety: true },\n              batchSize: 15,\n              safetyLevel: SafetyLevel.MAXIMUM\n            }\n          ],\n          successCriteria: {\n            typeScriptErrors: 0\n          },\n          safetyCheckpoints: []\n        },\n        {\n          id: 'phase2',\n          name: 'Linting Excellence Achievement',\n          description: 'Eliminate all linting warnings',\n          tools: [\n            {\n              scriptPath: 'scripts/typescript-fixes/fix-explicit-any-systematic.js',\n              parameters: { maxFiles: 25, autoFix: true },\n              batchSize: 25,\n              safetyLevel: SafetyLevel.HIGH\n            }\n          ],\n          successCriteria: {\n            lintingWarnings: 0\n          },\n          safetyCheckpoints: []\n        }\n      ],\n      safetySettings: {\n        maxFilesPerBatch: 25,\n        buildValidationFrequency: 5,\n        testValidationFrequency: 10,\n        corruptionDetectionEnabled: true,\n        automaticRollbackEnabled: true,\n        stashRetentionDays: 7\n      },\n      progressTargets: {\n        typeScriptErrors: 0,\n        lintingWarnings: 0,\n        buildTime: 10,\n        enterpriseSystems: 200\n      },\n      toolConfiguration: {\n        enhancedErrorFixer: 'scripts/typescript-fixes/fix-typescript-errors-enhanced-v3.js',\n        explicitAnyFixer: 'scripts/typescript-fixes/fix-explicit-any-systematic.js',\n        unusedVariablesFixer: 'scripts/typescript-fixes/fix-unused-variables-enhanced.js',\n        consoleStatementFixer: 'scripts/lint-fixes/fix-console-statements-only.js'\n      }\n    };\n\n    controller = new CampaignController(mockConfig);\n  });\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Constructor', () => {\n    it('should initialize with provided configuration', () => {\n      expect(controller).toBeInstanceOf(CampaignController);\n    });\n\n    it('should initialize with empty safety events', () => {\n      const events = (controller as unknown as { safetyEvents: unknown[] }).safetyEvents;\n      expect(events).toEqual([]);\n    });\n\n    it('should set current phase to null initially', () => {\n      const currentPhase = (controller as unknown as { currentPhase: CampaignPhase | null }).currentPhase;\n      expect(currentPhase).toBeNull();\n    });\n  });\n\n  describe('executePhase', () => {\n    let mockPhase: CampaignPhase;\n\n    beforeEach(() => {\n      mockPhase = mockConfig.phases[0];\n      \n      // Mock private methods\n      jest.spyOn(controller as unknown as { createSafetyCheckpoint: () => Promise<string> }, 'createSafetyCheckpoint').mockResolvedValue('checkpoint_123');\n      jest.spyOn(controller as unknown as { getCurrentMetrics: () => Promise<ProgressMetrics> }, 'getCurrentMetrics').mockResolvedValue({\n        typeScriptErrors: { current: 86, target: 0, reduction: 0, percentage: 0 },\n        lintingWarnings: { current: 4506, target: 0, reduction: 0, percentage: 0 },\n        buildPerformance: { currentTime: 8.5, targetTime: 10, cacheHitRate: 0.8, memoryUsage: 45 },\n        enterpriseSystems: { current: 0, target: 200, transformedExports: 0 }\n      });\n      jest.spyOn(controller as unknown as { executeTool: (tool: ToolConfiguration, phase: CampaignPhase) => Promise<Record<string, unknown>> }, 'executeTool').mockResolvedValue({\n        filesProcessed: ['file1.ts', 'file2.ts'],\n        changesApplied: 5,\n        success: true\n      });\n      jest.spyOn(controller as unknown as { validatePhaseProgress: (phase: CampaignPhase) => Promise<ValidationResult> }, 'validatePhaseProgress').mockResolvedValue({\n        success: true,\n        errors: [],\n        warnings: []\n      });\n    });\n\n    it('should execute phase successfully', async () => {\n      const result = await controller.executePhase(mockPhase);\n\n      expect(result.success).toBe(true);\n      expect(result.phaseId).toBe('phase1');\n      expect(result.filesProcessed).toBe(2);\n      expect(result.errorsFixed).toBe(5);\n      expect(result.executionTime).toBeGreaterThan(0);\n    });\n\n    it('should create safety checkpoint before execution', async () => {\n      await controller.executePhase(mockPhase);\n\n      expect(controller['createSafetyCheckpoint']).toHaveBeenCalledWith(\n        'Pre-phase checkpoint: TypeScript Error Elimination'\n      );\n    });\n\n    it('should execute all tools in sequence', async () => {\n      await controller.executePhase(mockPhase);\n\n      expect(controller['executeTool']).toHaveBeenCalledTimes(1);\n      expect(controller['executeTool']).toHaveBeenCalledWith(mockPhase.tools[0]);\n    });\n\n    it('should validate progress after each tool execution', async () => {\n      await controller.executePhase(mockPhase);\n\n      expect(controller['validatePhaseProgress']).toHaveBeenCalledWith(mockPhase);\n    });\n\n    it('should handle execution failure gracefully', async () => {\n      jest.spyOn(controller as any, 'executeTool').mockRejectedValue(new Error('Tool execution failed'));\n\n      const result = await controller.executePhase(mockPhase);\n\n      expect(result.success).toBe(false);\n      expect(result.phaseId).toBe('phase1');\n      expect(result.filesProcessed).toBe(0);\n      expect(result.errorsFixed).toBe(0);\n    });\n\n    it('should rollback on validation failure when automatic rollback is enabled', async () => {\n      jest.spyOn(controller as unknown as { validatePhaseProgress: (phase: CampaignPhase) => Promise<ValidationResult> }, 'validatePhaseProgress').mockResolvedValue({\n        success: false,\n        errors: ['Validation failed'],\n        warnings: []\n      });\n      jest.spyOn(controller, 'rollbackToCheckpoint').mockResolvedValue();\n\n      await expect(controller.executePhase(mockPhase)).rejects.toThrow('Tool execution failed: Validation failed');\n      expect(controller.rollbackToCheckpoint).toHaveBeenCalledWith('checkpoint_123');\n    });\n\n    it('should record safety events during execution', async () => {\n      await controller.executePhase(mockPhase);\n\n      const events = (controller as unknown as { safetyEvents: unknown[] }).safetyEvents;\n      expect(events.length).toBeGreaterThan(0);\n      expect(events[0].description).toContain('Starting phase: TypeScript Error Elimination');\n    });\n  });\n\n  describe('validatePhaseCompletion', () => {\n    let mockPhase: CampaignPhase;\n\n    beforeEach(() => {\n      mockPhase = mockConfig.phases[0];\n      jest.spyOn(controller as unknown as { getCurrentMetrics: () => Promise<ProgressMetrics> }, 'getCurrentMetrics').mockResolvedValue({\n        typeScriptErrors: { current: 0, target: 0, reduction: 86, percentage: 100 },\n        lintingWarnings: { current: 4506, target: 0, reduction: 0, percentage: 0 },\n        buildPerformance: { currentTime: 8.5, targetTime: 10, cacheHitRate: 0.8, memoryUsage: 45 },\n        enterpriseSystems: { current: 0, target: 200, transformedExports: 0 }\n      });\n    });\n\n    it('should validate successful phase completion', async () => {\n      const result = await controller.validatePhaseCompletion(mockPhase);\n\n      expect(result.success).toBe(true);\n      expect(result.errors).toEqual([]);\n      expect(result.warnings).toEqual([]);\n    });\n\n    it('should detect TypeScript error validation failure', async () => {\n      jest.spyOn(controller as unknown as { getCurrentMetrics: () => Promise<ProgressMetrics> }, 'getCurrentMetrics').mockResolvedValue({\n        typeScriptErrors: { current: 5, target: 0, reduction: 81, percentage: 94 },\n        lintingWarnings: { current: 4506, target: 0, reduction: 0, percentage: 0 },\n        buildPerformance: { currentTime: 8.5, targetTime: 10, cacheHitRate: 0.8, memoryUsage: 45 },\n        enterpriseSystems: { current: 0, target: 200, transformedExports: 0 }\n      });\n\n      const result = await controller.validatePhaseCompletion(mockPhase);\n\n      expect(result.success).toBe(false);\n      expect(result.errors).toContain('TypeScript errors: 5 > 0');\n    });\n\n    it('should detect linting warning validation failure', async () => {\n      const phaseWithLintingCriteria = {\n        ...mockPhase,\n        successCriteria: { lintingWarnings: 0 }\n      };\n\n      const result = await controller.validatePhaseCompletion(phaseWithLintingCriteria);\n\n      expect(result.success).toBe(false);\n      expect(result.errors).toContain('Linting warnings: 4506 > 0');\n    });\n\n    it('should detect build time validation warning', async () => {\n      const phaseWithBuildTimeCriteria = {\n        ...mockPhase,\n        successCriteria: { buildTime: 5 }\n      };\n\n      const result = await controller.validatePhaseCompletion(phaseWithBuildTimeCriteria);\n\n      expect(result.success).toBe(true);\n      expect(result.warnings).toContain('Build time: 8.5s > 5s');\n    });\n\n    it('should execute custom validation when provided', async () => {\n      const customValidation = jest.fn().mockResolvedValue(true);\n      const phaseWithCustomValidation = {\n        ...mockPhase,\n        successCriteria: { customValidation }\n      };\n\n      const result = await controller.validatePhaseCompletion(phaseWithCustomValidation);\n\n      expect(customValidation).toHaveBeenCalled();\n      expect(result.success).toBe(true);\n    });\n\n    it('should handle validation errors gracefully', async () => {\n      jest.spyOn(controller as any, 'getCurrentMetrics').mockRejectedValue(new Error('Metrics error'));\n\n      const result = await controller.validatePhaseCompletion(mockPhase);\n\n      expect(result.success).toBe(false);\n      expect(result.errors).toContain('Validation error: Metrics error');\n    });\n  });\n\n  describe('createSafetyCheckpoint', () => {\n    it('should create checkpoint with descriptive name', async () => {\n      const checkpointId = await controller.createSafetyCheckpoint('Test checkpoint');\n\n      expect(checkpointId).toMatch(/^checkpoint_\\d+$/);\n    });\n\n    it('should record safety event for checkpoint creation', async () => {\n      await controller.createSafetyCheckpoint('Test checkpoint');\n\n      const events = (controller as unknown as { safetyEvents: unknown[] }).safetyEvents;\n      expect(events.length).toBe(1);\n      expect(events[0].description).toContain('Safety checkpoint created: Test checkpoint');\n    });\n  });\n\n  describe('rollbackToCheckpoint', () => {\n    it('should record safety event for rollback', async () => {\n      await controller.rollbackToCheckpoint('checkpoint_123');\n\n      const events = (controller as unknown as { safetyEvents: unknown[] }).safetyEvents;\n      expect(events.length).toBe(1);\n      expect(events[0].description).toContain('Rolling back to checkpoint: checkpoint_123');\n    });\n  });\n\n  describe('getProgressMetrics', () => {\n    it('should return current metrics', async () => {\n      const mockMetrics = {\n        typeScriptErrors: { current: 86, target: 0, reduction: 0, percentage: 0 },\n        lintingWarnings: { current: 4506, target: 0, reduction: 0, percentage: 0 },\n        buildPerformance: { currentTime: 8.5, targetTime: 10, cacheHitRate: 0.8, memoryUsage: 45 },\n        enterpriseSystems: { current: 0, target: 200, transformedExports: 0 }\n      };\n\n      jest.spyOn(controller as any, 'getCurrentMetrics').mockResolvedValue(mockMetrics);\n\n      const result = await controller.getProgressMetrics();\n\n      expect(result).toEqual(mockMetrics);\n    });\n  });\n\n  describe('generatePhaseReport', () => {\n    let mockPhase: CampaignPhase;\n\n    beforeEach(() => {\n      mockPhase = mockConfig.phases[0];\n      jest.spyOn(controller as unknown as { getCurrentMetrics: () => Promise<ProgressMetrics> }, 'getCurrentMetrics').mockResolvedValue({\n        typeScriptErrors: { current: 0, target: 0, reduction: 86, percentage: 100 },\n        lintingWarnings: { current: 4506, target: 0, reduction: 0, percentage: 0 },\n        buildPerformance: { currentTime: 8.5, targetTime: 10, cacheHitRate: 0.8, memoryUsage: 45 },\n        enterpriseSystems: { current: 0, target: 200, transformedExports: 0 }\n      });\n      jest.spyOn(controller, 'validatePhaseCompletion').mockResolvedValue({\n        success: true,\n        errors: [],\n        warnings: []\n      });\n    });\n\n    it('should generate comprehensive phase report', async () => {\n      const report = await controller.generatePhaseReport(mockPhase);\n\n      expect(report.phaseId).toBe('phase1');\n      expect(report.phaseName).toBe('TypeScript Error Elimination');\n      expect(report.status).toBe(PhaseStatus.COMPLETED);\n      expect(report.achievements).toContain('Zero TypeScript errors achieved');\n      expect(report.issues).toEqual([]);\n    });\n\n    it('should show in-progress status for incomplete phase', async () => {\n      jest.spyOn(controller, 'validatePhaseCompletion').mockResolvedValue({\n        success: false,\n        errors: ['TypeScript errors: 5 > 0'],\n        warnings: []\n      });\n\n      const report = await controller.generatePhaseReport(mockPhase);\n\n      expect(report.status).toBe(PhaseStatus.IN_PROGRESS);\n      expect(report.issues).toContain('TypeScript errors: 5 > 0');\n    });\n  });\n\n  describe('loadConfiguration', () => {\n    it('should load default configuration', async () => {\n      const config = await CampaignController.loadConfiguration();\n\n      expect(config.phases).toHaveLength(2);\n      expect(config.phases[0].name).toBe('TypeScript Error Elimination');\n      expect(config.phases[1].name).toBe('Linting Excellence Achievement');\n      expect(config.safetySettings.automaticRollbackEnabled).toBe(true);\n    });\n\n    it('should have proper tool configuration', async () => {\n      const config = await CampaignController.loadConfiguration();\n\n      expect(config.toolConfiguration.enhancedErrorFixer).toContain('fix-typescript-errors-enhanced-v3.js');\n      expect(config.toolConfiguration.explicitAnyFixer).toContain('fix-explicit-any-systematic.js');\n    });\n\n    it('should have proper progress targets', async () => {\n      const config = await CampaignController.loadConfiguration();\n\n      expect(config.progressTargets.typeScriptErrors).toBe(0);\n      expect(config.progressTargets.lintingWarnings).toBe(0);\n      expect(config.progressTargets.buildTime).toBe(10);\n      expect(config.progressTargets.enterpriseSystems).toBe(200);\n    });\n  });\n\n  describe('Safety Event Management', () => {\n    it('should limit safety events to prevent memory issues', async () => {\n      // Add many safety events\n      for (let i = 0; i < 1100; i++) {\n        (controller as unknown as { addSafetyEvent: (event: Record<string, unknown>) => void }).addSafetyEvent({\n          type: 'CHECKPOINT_CREATED',\n          timestamp: new Date(),\n          description: `Event ${i}`,\n          severity: 'INFO',\n          action: 'TEST'\n        });\n      }\n\n      const events = (controller as unknown as { safetyEvents: unknown[] }).safetyEvents;\n      expect(events.length).toBe(500); // Should be trimmed to 500\n    });\n\n    it('should preserve most recent events when trimming', async () => {\n      // Add many safety events\n      for (let i = 0; i < 1100; i++) {\n        (controller as unknown as { addSafetyEvent: (event: Record<string, unknown>) => void }).addSafetyEvent({\n          type: 'CHECKPOINT_CREATED',\n          timestamp: new Date(),\n          description: `Event ${i}`,\n          severity: 'INFO',\n          action: 'TEST'\n        });\n      }\n\n      const events = (controller as unknown as { safetyEvents: unknown[] }).safetyEvents;\n      expect(events[events.length - 1].description).toBe('Event 1099');\n    });\n  });\n\n  describe('Metrics Improvement Calculation', () => {\n    it('should calculate metrics improvement correctly', () => {\n      const initialMetrics = {\n        typeScriptErrors: { current: 86, target: 0, reduction: 0, percentage: 0 },\n        lintingWarnings: { current: 4506, target: 0, reduction: 0, percentage: 0 },\n        buildPerformance: { currentTime: 10.5, targetTime: 10, cacheHitRate: 0.7, memoryUsage: 55 },\n        enterpriseSystems: { current: 0, target: 200, transformedExports: 0 }\n      };\n\n      const finalMetrics = {\n        typeScriptErrors: { current: 50, target: 0, reduction: 36, percentage: 42 },\n        lintingWarnings: { current: 3000, target: 0, reduction: 1506, percentage: 33 },\n        buildPerformance: { currentTime: 8.5, targetTime: 10, cacheHitRate: 0.8, memoryUsage: 45 },\n        enterpriseSystems: { current: 50, target: 200, transformedExports: 50 }\n      };\n\n      const improvement = (controller as unknown as { calculateMetricsImprovement: (initial: ProgressMetrics, final: ProgressMetrics) => Record<string, unknown> }).calculateMetricsImprovement(initialMetrics, finalMetrics);\n\n      expect(improvement.typeScriptErrorsReduced).toBe(36);\n      expect(improvement.lintingWarningsReduced).toBe(1506);\n      expect(improvement.buildTimeImproved).toBe(2);\n      expect(improvement.enterpriseSystemsAdded).toBe(50);\n    });\n  });\n\n  describe('Achievement Generation', () => {\n    it('should generate achievements for zero TypeScript errors', () => {\n      const metrics = {\n        typeScriptErrors: { current: 0, target: 0, reduction: 86, percentage: 100 },\n        lintingWarnings: { current: 4506, target: 0, reduction: 0, percentage: 0 },\n        buildPerformance: { currentTime: 8.5, targetTime: 10, cacheHitRate: 0.8, memoryUsage: 45 },\n        enterpriseSystems: { current: 0, target: 200, transformedExports: 0 }\n      };\n\n      const achievements = (controller as unknown as { generateAchievements: (phase: CampaignPhase, metrics: ProgressMetrics) => string[] }).generateAchievements(mockConfig.phases[0], metrics);\n\n      expect(achievements).toContain('Zero TypeScript errors achieved');\n      expect(achievements).toContain('Build time under 10 seconds maintained');\n    });\n\n    it('should generate achievements for zero linting warnings', () => {\n      const metrics = {\n        typeScriptErrors: { current: 5, target: 0, reduction: 81, percentage: 94 },\n        lintingWarnings: { current: 0, target: 0, reduction: 4506, percentage: 100 },\n        buildPerformance: { currentTime: 8.5, targetTime: 10, cacheHitRate: 0.8, memoryUsage: 45 },\n        enterpriseSystems: { current: 0, target: 200, transformedExports: 0 }\n      };\n\n      const achievements = (controller as any).generateAchievements(mockConfig.phases[1], metrics);\n\n      expect(achievements).toContain('Zero linting warnings achieved');\n      expect(achievements).toContain('Build time under 10 seconds maintained');\n    });\n  });\n\n  describe('Recommendation Generation', () => {\n    it('should recommend addressing validation errors', () => {\n      const validation = {\n        success: false,\n        errors: ['TypeScript errors: 5 > 0'],\n        warnings: []\n      };\n\n      const recommendations = (controller as unknown as { generateRecommendations: (phase: CampaignPhase, validation: ValidationResult) => string[] }).generateRecommendations(mockConfig.phases[0], validation);\n\n      expect(recommendations).toContain('Address validation errors before proceeding');\n    });\n\n    it('should recommend addressing warnings', () => {\n      const validation = {\n        success: true,\n        errors: [],\n        warnings: ['Build time: 12s > 10s']\n      };\n\n      const recommendations = (controller as unknown as { generateRecommendations: (phase: CampaignPhase, validation: ValidationResult) => string[] }).generateRecommendations(mockConfig.phases[0], validation);\n\n      expect(recommendations).toContain('Consider addressing warnings for optimal performance');\n    });\n  });\n});"],"version":3}