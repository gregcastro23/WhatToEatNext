cb1654c9f3a79cfcced3e4e85e05a746
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ELEMENTAL_THRESHOLDS = exports.ELEMENT_COMPATIBILITY = exports.ELEMENT_COMPLEMENTS = exports.ELEMENT_AFFINITIES = exports.ELEMENT_COMBINATIONS = void 0;
exports.ELEMENT_COMBINATIONS = {
    // Same elements have highest harmony (like reinforces like)
    harmonious: [
        ['Fire', 'Fire'],
        ['Water', 'Water'],
        ['Earth', 'Earth'],
        ['Air', 'Air']
    ],
    // All different element combinations are compatible (good harmony)
    compatible: [
        ['Fire', 'Water'],
        ['Fire', 'Earth'],
        ['Fire', 'Air'],
        ['Water', 'Earth'],
        ['Water', 'Air'],
        ['Earth', 'Air']
    ]
};
// Element affinities - each element works best with itself
exports.ELEMENT_AFFINITIES = {
    Fire: ['Fire'],
    Water: ['Water'],
    Air: ['Air'],
    Earth: ['Earth'] // Earth reinforces Earth
};
// Element complementary relationships - elements complement themselves
exports.ELEMENT_COMPLEMENTS = {
    Fire: 'Fire',
    Air: 'Air',
    Earth: 'Earth',
    Water: 'Water'
};
// Element compatibility scores
exports.ELEMENT_COMPATIBILITY = {
    Fire: { Fire: 0.9, Water: 0.7, Earth: 0.7, Air: 0.7 },
    Water: { Water: 0.9, Fire: 0.7, Earth: 0.7, Air: 0.7 },
    Earth: { Earth: 0.9, Fire: 0.7, Water: 0.7, Air: 0.7 },
    Air: { Air: 0.9, Fire: 0.7, Water: 0.7, Earth: 0.7 }
};
exports.ELEMENTAL_THRESHOLDS = {
    LOW: 0.33,
    MEDIUM: 0.66,
    HIGH: 1.0,
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL0dyZWdDYXN0cm8vRGVza3RvcC9XaGF0VG9FYXROZXh0L3NyYy91dGlscy9jb25zdGFudHMvZWxlbWVudHMudHMiLCJtYXBwaW5ncyI6Ijs7O0FBT2EsUUFBQSxvQkFBb0IsR0FBd0I7SUFDdkQsNERBQTREO0lBQzVELFVBQVUsRUFBRTtRQUNWLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQztRQUNoQixDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUM7UUFDbEIsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDO1FBQ2xCLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQztLQUNmO0lBQ0QsbUVBQW1FO0lBQ25FLFVBQVUsRUFBRTtRQUNWLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQztRQUNqQixDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUM7UUFDakIsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDO1FBQ2YsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDO1FBQ2xCLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQztRQUNoQixDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUM7S0FDakI7Q0FDRixDQUFDO0FBRUYsMkRBQTJEO0FBQzlDLFFBQUEsa0JBQWtCLEdBQStCO0lBQzVELElBQUksRUFBRSxDQUFDLE1BQU0sQ0FBQztJQUNkLEtBQUssRUFBRSxDQUFDLE9BQU8sQ0FBQztJQUNoQixHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUM7SUFDWixLQUFLLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyx5QkFBeUI7Q0FDM0MsQ0FBQztBQUVGLHVFQUF1RTtBQUMxRCxRQUFBLG1CQUFtQixHQUE2QjtJQUMzRCxJQUFJLEVBQUUsTUFBTTtJQUNaLEdBQUcsRUFBRSxLQUFLO0lBQ1YsS0FBSyxFQUFFLE9BQU87SUFDZCxLQUFLLEVBQUUsT0FBTztDQUNmLENBQUM7QUFFRiwrQkFBK0I7QUFDbEIsUUFBQSxxQkFBcUIsR0FBNkM7SUFDN0UsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRTtJQUNyRCxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFO0lBQ3RELEtBQUssRUFBRSxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUU7SUFDdEQsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRTtDQUNyRCxDQUFDO0FBRVcsUUFBQSxvQkFBb0IsR0FBRztJQUNsQyxHQUFHLEVBQUUsSUFBSTtJQUNULE1BQU0sRUFBRSxJQUFJO0lBQ1osSUFBSSxFQUFFLEdBQUc7Q0FDVixDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9HcmVnQ2FzdHJvL0Rlc2t0b3AvV2hhdFRvRWF0TmV4dC9zcmMvdXRpbHMvY29uc3RhbnRzL2VsZW1lbnRzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgRWxlbWVudCB9IGZyb20gJ0AvdHlwZXMvYWxjaGVteSc7XG5cbmludGVyZmFjZSBFbGVtZW50Q29tYmluYXRpb25zIHtcbiAgaGFybW9uaW91czogW0VsZW1lbnQsIEVsZW1lbnRdW107XG4gIGNvbXBhdGlibGU6IFtFbGVtZW50LCBFbGVtZW50XVtdO1xufVxuXG5leHBvcnQgY29uc3QgRUxFTUVOVF9DT01CSU5BVElPTlM6IEVsZW1lbnRDb21iaW5hdGlvbnMgPSB7XG4gIC8vIFNhbWUgZWxlbWVudHMgaGF2ZSBoaWdoZXN0IGhhcm1vbnkgKGxpa2UgcmVpbmZvcmNlcyBsaWtlKVxuICBoYXJtb25pb3VzOiBbXG4gICAgWydGaXJlJywgJ0ZpcmUnXSxcbiAgICBbJ1dhdGVyJywgJ1dhdGVyJ10sXG4gICAgWydFYXJ0aCcsICdFYXJ0aCddLCBcbiAgICBbJ0FpcicsICdBaXInXVxuICBdLFxuICAvLyBBbGwgZGlmZmVyZW50IGVsZW1lbnQgY29tYmluYXRpb25zIGFyZSBjb21wYXRpYmxlIChnb29kIGhhcm1vbnkpXG4gIGNvbXBhdGlibGU6IFtcbiAgICBbJ0ZpcmUnLCAnV2F0ZXInXSxcbiAgICBbJ0ZpcmUnLCAnRWFydGgnXSxcbiAgICBbJ0ZpcmUnLCAnQWlyJ10sXG4gICAgWydXYXRlcicsICdFYXJ0aCddLFxuICAgIFsnV2F0ZXInLCAnQWlyJ10sXG4gICAgWydFYXJ0aCcsICdBaXInXVxuICBdXG59O1xuXG4vLyBFbGVtZW50IGFmZmluaXRpZXMgLSBlYWNoIGVsZW1lbnQgd29ya3MgYmVzdCB3aXRoIGl0c2VsZlxuZXhwb3J0IGNvbnN0IEVMRU1FTlRfQUZGSU5JVElFUzogUmVjb3JkPEVsZW1lbnQsIEVsZW1lbnRbXT4gPSB7XG4gIEZpcmU6IFsnRmlyZSddLCAvLyBGaXJlIHJlaW5mb3JjZXMgRmlyZVxuICBXYXRlcjogWydXYXRlciddLCAvLyBXYXRlciByZWluZm9yY2VzIFdhdGVyXG4gIEFpcjogWydBaXInXSwgLy8gQWlyIHJlaW5mb3JjZXMgQWlyXG4gIEVhcnRoOiBbJ0VhcnRoJ10gLy8gRWFydGggcmVpbmZvcmNlcyBFYXJ0aFxufTtcblxuLy8gRWxlbWVudCBjb21wbGVtZW50YXJ5IHJlbGF0aW9uc2hpcHMgLSBlbGVtZW50cyBjb21wbGVtZW50IHRoZW1zZWx2ZXNcbmV4cG9ydCBjb25zdCBFTEVNRU5UX0NPTVBMRU1FTlRTOiBSZWNvcmQ8RWxlbWVudCwgRWxlbWVudD4gPSB7XG4gIEZpcmU6ICdGaXJlJyxcbiAgQWlyOiAnQWlyJywgXG4gIEVhcnRoOiAnRWFydGgnLFxuICBXYXRlcjogJ1dhdGVyJ1xufTtcblxuLy8gRWxlbWVudCBjb21wYXRpYmlsaXR5IHNjb3Jlc1xuZXhwb3J0IGNvbnN0IEVMRU1FTlRfQ09NUEFUSUJJTElUWTogUmVjb3JkPEVsZW1lbnQsIFJlY29yZDxFbGVtZW50LCBudW1iZXI+PiA9IHtcbiAgRmlyZTogeyBGaXJlOiAwLjksIFdhdGVyOiAwLjcsIEVhcnRoOiAwLjcsIEFpcjogMC43IH0sXG4gIFdhdGVyOiB7IFdhdGVyOiAwLjksIEZpcmU6IDAuNywgRWFydGg6IDAuNywgQWlyOiAwLjcgfSxcbiAgRWFydGg6IHsgRWFydGg6IDAuOSwgRmlyZTogMC43LCBXYXRlcjogMC43LCBBaXI6IDAuNyB9LFxuICBBaXI6IHsgQWlyOiAwLjksIEZpcmU6IDAuNywgV2F0ZXI6IDAuNywgRWFydGg6IDAuNyB9XG59O1xuXG5leHBvcnQgY29uc3QgRUxFTUVOVEFMX1RIUkVTSE9MRFMgPSB7XG4gIExPVzogMC4zMyxcbiAgTUVESVVNOiAwLjY2LFxuICBISUdIOiAxLjAsXG59OyAiXSwidmVyc2lvbiI6M30=