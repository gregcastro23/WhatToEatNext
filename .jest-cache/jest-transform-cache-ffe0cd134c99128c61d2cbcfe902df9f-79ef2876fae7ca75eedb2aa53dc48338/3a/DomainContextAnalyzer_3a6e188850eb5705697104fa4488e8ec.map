{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/DomainContextAnalyzer.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/DomainContextAnalyzer.ts"],"sourcesContent":["/**\n * Domain Context Analyzer\n * Provides domain-specific analysis for astrological, recipe, campaign, and service code\n *\n * Features:\n * - File path analysis to determine code domain\n * - Content analysis for domain-specific patterns\n * - Subdomain classification for specialized areas\n * - Domain-specific type suggestions and preservation reasons\n */\n\nimport {\n    ClassificationContext,\n    CodeDomain,\n    DomainContext,\n    IntentionalityHint\n} from './types';\n\nexport class DomainContextAnalyzer {\n  private domainPatterns: Map<CodeDomain, RegExp[]>;\n  private typeMapping: Map<CodeDomain, string[]>;\n  private pathPatterns: Map<CodeDomain, RegExp[]>;\n  private contentPatterns: Map<CodeDomain, RegExp[]>;\n  private subDomainPatterns: Map<CodeDomain, Map<string, RegExp[]>>;\n\n  constructor() {\n    this.domainPatterns = this.initializeDomainPatterns();\n    this.typeMapping = this.initializeTypeMapping();\n    this.pathPatterns = this.initializePathPatterns();\n    this.contentPatterns = this.initializeContentPatterns();\n    this.subDomainPatterns = this.initializeSubDomainPatterns();\n  }\n\n  /**\n   * Analyze the domain context for a given classification context\n   */\n  async analyzeDomain(context: ClassificationContext): Promise<DomainContext> {\n    const domain = this.detectDomain(context);\n    const subDomain = this.detectSubDomain(context, domain);\n    const intentionalityHints = this.generateIntentionalityHints(context, domain);\n    const suggestedTypes = this.getDomainSpecificSuggestions(domain, context);\n    const preservationReasons = this.getPreservationReasons(context, domain);\n\n    return {\n      domain,\n      subDomain,\n      intentionalityHints,\n      suggestedTypes,\n      preservationReasons\n    };\n  }\n\n  /**\n   * Get domain-specific type suggestions\n   */\n  getDomainSpecificSuggestions(domain: CodeDomain, context: ClassificationContext): string[] {\n    const baseSuggestions = this.typeMapping.get(domain) || ['unknown'];\n    const contextualSuggestions = this.getContextualSuggestions(context, domain);\n    const variableNameSuggestions = this.getVariableNameBasedSuggestions(context, domain);\n    const patternBasedSuggestions = this.getPatternBasedSuggestions(context, domain);\n\n    return [...new Set([\n      ...contextualSuggestions,      // Prioritize contextual suggestions\n      ...variableNameSuggestions,    // Then variable name suggestions\n      ...patternBasedSuggestions,    // Then pattern-based suggestions\n      ...baseSuggestions             // Finally base suggestions\n    ])];\n  }\n\n  /**\n   * Get type suggestions based on variable names and patterns\n   */\n  private getVariableNameBasedSuggestions(context: ClassificationContext, domain: CodeDomain): string[] {\n    const suggestions: string[] = [];\n\n    // Extract variable name from code snippet\n    const variableMatch = context.codeSnippet.match(/(?:const|let|var)\\s+(\\w+)\\s*:/);\n    const variableName = variableMatch ? variableMatch[1].toLowerCase() : '';\n\n    if (!variableName) return suggestions;\n\n    switch (domain) {\n      case CodeDomain.ASTROLOGICAL:\n        if (variableName.includes('planet')) suggestions.push('PlanetaryPosition', 'Planet');\n        if (variableName.includes('sun')) suggestions.push('SunPosition');\n        if (variableName.includes('moon')) suggestions.push('MoonPosition');\n        if (variableName.includes('mercury')) suggestions.push('MercuryPosition');\n        if (variableName.includes('venus')) suggestions.push('VenusPosition');\n        if (variableName.includes('mars')) suggestions.push('MarsPosition');\n        if (variableName.includes('jupiter')) suggestions.push('JupiterPosition');\n        if (variableName.includes('saturn')) suggestions.push('SaturnPosition');\n        if (variableName.includes('element')) suggestions.push('ElementalProperties');\n        if (variableName.includes('sign')) suggestions.push('ZodiacSign');\n        if (variableName.includes('position')) suggestions.push('PlanetaryPosition');\n        if (variableName.includes('transit')) suggestions.push('TransitData');\n        if (variableName.includes('ephemeris')) suggestions.push('EphemerisData');\n        break;\n\n      case CodeDomain.RECIPE:\n        if (variableName.includes('ingredient')) suggestions.push('Ingredient');\n        if (variableName.includes('recipe')) suggestions.push('Recipe');\n        if (variableName.includes('spice')) suggestions.push('Spice');\n        if (variableName.includes('herb')) suggestions.push('Herb');\n        if (variableName.includes('vegetable')) suggestions.push('Vegetable');\n        if (variableName.includes('fruit')) suggestions.push('Fruit');\n        if (variableName.includes('cooking')) suggestions.push('CookingMethod');\n        if (variableName.includes('nutrition')) suggestions.push('NutritionalInfo');\n        if (variableName.includes('flavor')) suggestions.push('FlavorProfile');\n        if (variableName.includes('cuisine')) suggestions.push('CuisineType');\n        break;\n\n      case CodeDomain.CAMPAIGN:\n        if (variableName.includes('metrics')) suggestions.push('ProgressMetrics', 'MetricsData');\n        if (variableName.includes('config')) suggestions.push('CampaignConfig');\n        if (variableName.includes('result')) suggestions.push('CampaignResult');\n        if (variableName.includes('error')) suggestions.push('TypeScriptError', 'ValidationResult');\n        if (variableName.includes('typescript')) suggestions.push('TypeScriptError');\n        if (variableName.includes('lint')) suggestions.push('LintingResult');\n        if (variableName.includes('performance')) suggestions.push('PerformanceMetrics');\n        if (variableName.includes('safety')) suggestions.push('SafetyEvent');\n        break;\n\n      case CodeDomain.SERVICE:\n        if (variableName.includes('response')) suggestions.push('ApiResponse<T>', 'HttpResponse');\n        if (variableName.includes('request')) suggestions.push('ApiRequest', 'RequestConfig');\n        if (variableName.includes('api')) suggestions.push('ApiResponse<T>', 'ApiRequest');\n        if (variableName.includes('service')) suggestions.push('ServiceData');\n        if (variableName.includes('data')) suggestions.push('ServiceData');\n        break;\n\n      case CodeDomain.COMPONENT:\n        if (variableName.includes('props')) suggestions.push('ComponentProps');\n        if (variableName.includes('state')) suggestions.push('ComponentState');\n        if (variableName.includes('event')) suggestions.push('React.SyntheticEvent');\n        if (variableName.includes('ref')) suggestions.push('React.RefObject<T>');\n        if (variableName.includes('context')) suggestions.push('ContextValue');\n        break;\n\n      case CodeDomain.TEST:\n        if (variableName.includes('mock')) suggestions.push('jest.Mock', 'MockData');\n        if (variableName.includes('spy')) suggestions.push('jest.SpyInstance');\n        if (variableName.includes('test')) suggestions.push('TestData');\n        if (variableName.includes('fixture')) suggestions.push('TestFixture');\n        break;\n    }\n\n    return suggestions;\n  }\n\n  /**\n   * Get type suggestions based on code patterns and usage\n   */\n  private getPatternBasedSuggestions(context: ClassificationContext, domain: CodeDomain): string[] {\n    const suggestions: string[] = [];\n    const codeSnippet = context.codeSnippet;\n\n    // Array pattern analysis\n    if (codeSnippet.includes('any[]')) {\n      switch (domain) {\n        case CodeDomain.ASTROLOGICAL:\n          suggestions.push('PlanetaryPosition[]', 'Planet[]', 'ZodiacSign[]');\n          break;\n        case CodeDomain.RECIPE:\n          suggestions.push('Ingredient[]', 'Recipe[]', 'CookingMethod[]');\n          break;\n        case CodeDomain.CAMPAIGN:\n          suggestions.push('TypeScriptError[]', 'ValidationResult[]', 'SafetyEvent[]');\n          break;\n        case CodeDomain.COMPONENT:\n          suggestions.push('React.ReactNode[]', 'ComponentProps[]');\n          break;\n        default:\n          suggestions.push('unknown[]');\n      }\n    }\n\n    // Record pattern analysis\n    if (codeSnippet.includes('Record<') || codeSnippet.includes('{ [key:')) {\n      switch (domain) {\n        case CodeDomain.ASTROLOGICAL:\n          suggestions.push('Record<string, PlanetaryPosition>', 'Record<Planet, number>');\n          break;\n        case CodeDomain.RECIPE:\n          suggestions.push('Record<string, Ingredient>', 'Record<string, number>');\n          break;\n        case CodeDomain.CAMPAIGN:\n          suggestions.push('Record<string, MetricsData>', 'Record<string, number>');\n          break;\n        default:\n          suggestions.push('Record<string, unknown>');\n      }\n    }\n\n    // Function parameter analysis\n    if (codeSnippet.includes('(') && codeSnippet.includes('any')) {\n      const paramMatch = codeSnippet.match(/\\(\\s*\\w+\\s*:\\s*any/);\n      if (paramMatch) {\n        switch (domain) {\n          case CodeDomain.ASTROLOGICAL:\n            suggestions.push('PlanetaryPosition', 'ElementalProperties');\n            break;\n          case CodeDomain.RECIPE:\n            suggestions.push('Ingredient', 'Recipe');\n            break;\n          case CodeDomain.CAMPAIGN:\n            suggestions.push('CampaignConfig', 'ProgressMetrics');\n            break;\n          case CodeDomain.COMPONENT:\n            suggestions.push('ComponentProps', 'React.SyntheticEvent');\n            break;\n          default:\n            suggestions.push('unknown');\n        }\n      }\n    }\n\n    // Return type analysis\n    if (codeSnippet.includes('): any')) {\n      switch (domain) {\n        case CodeDomain.ASTROLOGICAL:\n          suggestions.push('PlanetaryPosition', 'ElementalProperties', 'AstronomicalCalculation');\n          break;\n        case CodeDomain.RECIPE:\n          suggestions.push('Recipe', 'Ingredient', 'CookingMethod');\n          break;\n        case CodeDomain.CAMPAIGN:\n          suggestions.push('CampaignResult', 'ProgressMetrics', 'ValidationResult');\n          break;\n        case CodeDomain.SERVICE:\n          suggestions.push('ApiResponse<T>', 'ServiceData');\n          break;\n        case CodeDomain.COMPONENT:\n          suggestions.push('JSX.Element', 'React.ReactNode');\n          break;\n        default:\n          suggestions.push('unknown');\n      }\n    }\n\n    // Promise pattern analysis\n    if (codeSnippet.includes('Promise<any>')) {\n      switch (domain) {\n        case CodeDomain.ASTROLOGICAL:\n          suggestions.push('Promise<PlanetaryPosition>', 'Promise<ElementalProperties>');\n          break;\n        case CodeDomain.RECIPE:\n          suggestions.push('Promise<Recipe>', 'Promise<Ingredient>');\n          break;\n        case CodeDomain.SERVICE:\n          suggestions.push('Promise<ApiResponse<T>>', 'Promise<ServiceData>');\n          break;\n        default:\n          suggestions.push('Promise<unknown>');\n      }\n    }\n\n    return suggestions;\n  }\n\n  /**\n   * Detect the primary domain based on file path and content analysis\n   */\n  private detectDomain(context: ClassificationContext): CodeDomain {\n    // First, try path-based detection (most reliable)\n    const pathDomain = this.detectDomainByPath(context.filePath);\n    if (pathDomain !== CodeDomain.UTILITY) {\n      return pathDomain;\n    }\n\n    // Then try content-based detection\n    const contentDomain = this.detectDomainByContent(context);\n    if (contentDomain !== CodeDomain.UTILITY) {\n      return contentDomain;\n    }\n\n    // Finally, try import/dependency analysis\n    const importDomain = this.detectDomainByImports(context);\n    return importDomain;\n  }\n\n  /**\n   * Detect domain based on file path patterns\n   * Uses priority order - first match wins\n   */\n  private detectDomainByPath(filePath: string): CodeDomain {\n    const normalizedPath = filePath.toLowerCase().replace(/\\\\/g, '/');\n\n    // Check in priority order (test files first, then components, etc.)\n    const orderedDomains = [\n      CodeDomain.TEST,\n      CodeDomain.COMPONENT,\n      CodeDomain.ASTROLOGICAL,\n      CodeDomain.CAMPAIGN,\n      CodeDomain.RECIPE,\n      CodeDomain.SERVICE,\n      CodeDomain.UTILITY\n    ];\n\n    for (const domain of orderedDomains) {\n      const patterns = this.pathPatterns.get(domain) || [];\n      if (patterns.some(pattern => pattern.test(normalizedPath))) {\n        return domain;\n      }\n    }\n\n    return CodeDomain.UTILITY;\n  }\n\n  /**\n   * Detect domain based on code content patterns\n   */\n  private detectDomainByContent(context: ClassificationContext): CodeDomain {\n    const codeContent = [context.codeSnippet, ...context.surroundingLines]\n      .join('\\n')\n      .toLowerCase();\n\n    // Score each domain based on pattern matches\n    const domainScores = new Map<CodeDomain, number>();\n\n    for (const [domain, patterns] of this.contentPatterns.entries()) {\n      let score = 0;\n      for (const pattern of patterns) {\n        const matches = codeContent.match(pattern);\n        if (matches) {\n          score += matches.length;\n        }\n      }\n      if (score > 0) {\n        domainScores.set(domain, score);\n      }\n    }\n\n    // Return the domain with the highest score\n    if (domainScores.size > 0) {\n      const sortedDomains = Array.from(domainScores.entries())\n        .sort(([, a], [, b]) => b - a);\n      return sortedDomains[0][0];\n    }\n\n    return CodeDomain.UTILITY;\n  }\n\n  /**\n   * Detect domain based on import statements and dependencies\n   */\n  private detectDomainByImports(context: ClassificationContext): CodeDomain {\n    const codeContent = [context.codeSnippet, ...context.surroundingLines].join('\\n');\n\n    // Look for import patterns\n    const importMatches = codeContent.match(/import.*from\\s+['\"`]([^'\"`]+)['\"`]/g) || [];\n    const requireMatches = codeContent.match(/require\\(['\"`]([^'\"`]+)['\"`]\\)/g) || [];\n\n    const allImports = [...importMatches, ...requireMatches].join(' ').toLowerCase();\n\n    // Priority order for import-based detection\n    if (allImports.includes('jest') ||\n        allImports.includes('@testing-library') ||\n        allImports.includes('vitest')) {\n      return CodeDomain.TEST;\n    }\n\n    if (allImports.includes('react') ||\n        allImports.includes('@/components') ||\n        allImports.includes('next/') ||\n        allImports.includes('jsx') ||\n        allImports.includes('tsx')) {\n      return CodeDomain.COMPONENT;\n    }\n\n    if (allImports.includes('astronomia') ||\n        allImports.includes('astronomy-engine') ||\n        allImports.includes('suncalc') ||\n        allImports.includes('/calculations/') ||\n        allImports.includes('/astro')) {\n      return CodeDomain.ASTROLOGICAL;\n    }\n\n    if (allImports.includes('/campaign') ||\n        allImports.includes('metrics') ||\n        allImports.includes('intelligence')) {\n      return CodeDomain.CAMPAIGN;\n    }\n\n    if (allImports.includes('/recipe') ||\n        allImports.includes('/ingredient') ||\n        allImports.includes('/food')) {\n      return CodeDomain.RECIPE;\n    }\n\n    if (allImports.includes('/service') ||\n        allImports.includes('/api') ||\n        allImports.includes('axios') ||\n        allImports.includes('fetch')) {\n      return CodeDomain.SERVICE;\n    }\n\n    return CodeDomain.UTILITY;\n  }\n\n  /**\n   * Detect specialized subdomain within the primary domain\n   */\n  private detectSubDomain(context: ClassificationContext, domain: CodeDomain): string | undefined {\n    const filePath = context.filePath.toLowerCase().replace(/\\\\/g, '/');\n    const codeContent = [context.codeSnippet, ...context.surroundingLines]\n      .join('\\n')\n      .toLowerCase();\n\n    const subDomainPatterns = this.subDomainPatterns.get(domain);\n    if (!subDomainPatterns) {\n      return undefined;\n    }\n\n    // Score each subdomain based on pattern matches\n    const subDomainScores = new Map<string, number>();\n\n    for (const [subDomain, patterns] of subDomainPatterns.entries()) {\n      let score = 0;\n\n      // Check file path patterns\n      for (const pattern of patterns) {\n        if (pattern.test(filePath)) {\n          score += 2; // Path matches are weighted higher\n        }\n      }\n\n      if (score > 0) {\n        subDomainScores.set(subDomain, score);\n      }\n    }\n\n    // Return the subdomain with the highest score\n    if (subDomainScores.size > 0) {\n      const sortedSubDomains = Array.from(subDomainScores.entries())\n        .sort(([, a], [, b]) => b - a);\n      return sortedSubDomains[0][0];\n    }\n\n    return undefined;\n  }\n\n  private generateIntentionalityHints(context: ClassificationContext, domain: CodeDomain): IntentionalityHint[] {\n    const hints: IntentionalityHint[] = [];\n\n    switch (domain) {\n      case CodeDomain.ASTROLOGICAL:\n        hints.push({\n          reason: 'Astrological calculations often require flexible typing for external astronomical data',\n          confidence: 0.8,\n          suggestedAction: 'preserve'\n        });\n\n        if (context.codeSnippet.includes('position') || context.codeSnippet.includes('planetary')) {\n          hints.push({\n            reason: 'Planetary position data from external APIs may need any type for compatibility',\n            confidence: 0.9,\n            suggestedAction: 'document'\n          });\n        }\n        break;\n\n      case CodeDomain.RECIPE:\n        if (context.codeSnippet.includes('ingredient') || context.codeSnippet.includes('recipe')) {\n          hints.push({\n            reason: 'Recipe and ingredient data can often use specific types',\n            confidence: 0.7,\n            suggestedAction: 'replace'\n          });\n        }\n        break;\n\n      case CodeDomain.CAMPAIGN:\n        hints.push({\n          reason: 'Campaign system requires flexibility for dynamic configurations and metrics',\n          confidence: 0.85,\n          suggestedAction: 'preserve'\n        });\n\n        if (context.codeSnippet.includes('metrics') || context.codeSnippet.includes('config')) {\n          hints.push({\n            reason: 'Dynamic campaign configurations benefit from flexible typing',\n            confidence: 0.9,\n            suggestedAction: 'document'\n          });\n        }\n        break;\n\n      case CodeDomain.TEST:\n        hints.push({\n          reason: 'Test files often need flexible typing for mocks and test data',\n          confidence: 0.8,\n          suggestedAction: 'preserve'\n        });\n        break;\n\n      case CodeDomain.SERVICE:\n        if (context.codeSnippet.includes('api') || context.codeSnippet.includes('response')) {\n          hints.push({\n            reason: 'API responses may require any type for external service compatibility',\n            confidence: 0.8,\n            suggestedAction: 'document'\n          });\n        } else {\n          hints.push({\n            reason: 'Service layer can often use more specific types',\n            confidence: 0.6,\n            suggestedAction: 'review'\n          });\n        }\n        break;\n\n      default:\n        hints.push({\n          reason: 'No domain-specific patterns detected, consider replacement',\n          confidence: 0.5,\n          suggestedAction: 'review'\n        });\n    }\n\n    return hints;\n  }\n\n  private getContextualSuggestions(context: ClassificationContext, domain: CodeDomain): string[] {\n    const suggestions: string[] = [];\n    const codeContent = context.codeSnippet.toLowerCase();\n    const surroundingContent = context.surroundingLines.join('\\n').toLowerCase();\n    const allContent = `${codeContent} ${surroundingContent}`;\n\n    switch (domain) {\n      case CodeDomain.ASTROLOGICAL:\n        suggestions.push(...this.getAstrologicalTypeSuggestions(allContent, context));\n        break;\n\n      case CodeDomain.RECIPE:\n        suggestions.push(...this.getRecipeTypeSuggestions(allContent, context));\n        break;\n\n      case CodeDomain.CAMPAIGN:\n        suggestions.push(...this.getCampaignTypeSuggestions(allContent, context));\n        break;\n\n      case CodeDomain.SERVICE:\n        suggestions.push(...this.getServiceTypeSuggestions(allContent, context));\n        break;\n\n      case CodeDomain.COMPONENT:\n        suggestions.push(...this.getComponentTypeSuggestions(allContent, context));\n        break;\n\n      case CodeDomain.UTILITY:\n        suggestions.push(...this.getUtilityTypeSuggestions(allContent, context));\n        break;\n\n      case CodeDomain.TEST:\n        suggestions.push(...this.getTestTypeSuggestions(allContent, context));\n        break;\n    }\n\n    return [...new Set(suggestions)]; // Remove duplicates\n  }\n\n  /**\n   * Get astrological type suggestions based on content analysis\n   */\n  private getAstrologicalTypeSuggestions(content: string, context: ClassificationContext): string[] {\n    const suggestions: string[] = [];\n\n    // Planetary position analysis\n    if (content.includes('position') || content.includes('degree') || content.includes('longitude')) {\n      suggestions.push('PlanetaryPosition');\n\n      // Specific planet positions\n      if (content.includes('sun')) suggestions.push('SunPosition');\n      if (content.includes('moon')) suggestions.push('MoonPosition');\n      if (content.includes('mercury')) suggestions.push('MercuryPosition');\n      if (content.includes('venus')) suggestions.push('VenusPosition');\n      if (content.includes('mars')) suggestions.push('MarsPosition');\n      if (content.includes('jupiter')) suggestions.push('JupiterPosition');\n      if (content.includes('saturn')) suggestions.push('SaturnPosition');\n      if (content.includes('uranus')) suggestions.push('UranusPosition');\n      if (content.includes('neptune')) suggestions.push('NeptunePosition');\n      if (content.includes('pluto')) suggestions.push('PlutoPosition');\n    }\n\n    // Elemental analysis\n    if (content.includes('element') || content.includes('fire') || content.includes('water') ||\n        content.includes('earth') || content.includes('air')) {\n      suggestions.push('ElementalProperties');\n\n      if (content.includes('fire')) suggestions.push('FireElement');\n      if (content.includes('water')) suggestions.push('WaterElement');\n      if (content.includes('earth')) suggestions.push('EarthElement');\n      if (content.includes('air')) suggestions.push('AirElement');\n      if (content.includes('compatibility')) suggestions.push('ElementalCompatibility');\n    }\n\n    // Zodiac and sign analysis\n    if (content.includes('sign') || content.includes('zodiac') ||\n        /aries|taurus|gemini|cancer|leo|virgo|libra|scorpio|sagittarius|capricorn|aquarius|pisces/.test(content)) {\n      suggestions.push('ZodiacSign');\n    }\n\n    // Lunar analysis\n    if (content.includes('moon') || content.includes('lunar') || content.includes('phase')) {\n      suggestions.push('LunarPhase');\n    }\n\n    // Transit and ephemeris analysis\n    if (content.includes('transit') || content.includes('ephemeris')) {\n      suggestions.push('TransitData', 'EphemerisData');\n    }\n\n    // Calculation analysis\n    if (content.includes('calculate') || content.includes('compute') || content.includes('algorithm')) {\n      suggestions.push('AstronomicalCalculation');\n    }\n\n    // Coordinate system analysis\n    if (content.includes('coordinate') || content.includes('latitude') || content.includes('longitude')) {\n      suggestions.push('CoordinateSystem');\n    }\n\n    // General astrological data\n    if (content.includes('astro') || content.includes('planet')) {\n      suggestions.push('Planet', 'AstrologicalData');\n    }\n\n    return suggestions;\n  }\n\n  /**\n   * Get recipe/ingredient type suggestions based on content analysis\n   */\n  private getRecipeTypeSuggestions(content: string, context: ClassificationContext): string[] {\n    const suggestions: string[] = [];\n\n    // Core recipe analysis\n    if (content.includes('recipe')) {\n      suggestions.push('Recipe');\n      if (content.includes('step')) suggestions.push('RecipeStep');\n      if (content.includes('instruction')) suggestions.push('CookingInstruction');\n    }\n\n    // Ingredient analysis\n    if (content.includes('ingredient')) {\n      suggestions.push('Ingredient');\n      if (content.includes('quantity') || content.includes('amount')) suggestions.push('IngredientQuantity');\n    }\n\n    // Specific ingredient types\n    if (content.includes('spice')) suggestions.push('Spice');\n    if (content.includes('herb')) suggestions.push('Herb');\n    if (content.includes('vegetable')) suggestions.push('Vegetable');\n    if (content.includes('fruit')) suggestions.push('Fruit');\n    if (content.includes('protein') || content.includes('meat') || content.includes('fish')) suggestions.push('Protein');\n    if (content.includes('grain') || content.includes('rice') || content.includes('wheat')) suggestions.push('Grain');\n    if (content.includes('dairy') || content.includes('milk') || content.includes('cheese')) suggestions.push('Dairy');\n\n    // Cooking method analysis\n    if (content.includes('cooking') || content.includes('method') ||\n        /bake|boil|fry|steam|grill|roast|sauté/.test(content)) {\n      suggestions.push('CookingMethod');\n    }\n\n    // Nutrition analysis\n    if (content.includes('nutrition') || content.includes('calorie') || content.includes('vitamin')) {\n      suggestions.push('NutritionalInfo');\n    }\n\n    // Flavor and profile analysis\n    if (content.includes('flavor') || content.includes('taste') || content.includes('profile')) {\n      suggestions.push('FlavorProfile');\n    }\n\n    // Cuisine analysis\n    if (content.includes('cuisine') || /italian|chinese|mexican|indian|french|thai|japanese/.test(content)) {\n      suggestions.push('CuisineType');\n    }\n\n    // Dietary restrictions\n    if (content.includes('dietary') || content.includes('restriction') ||\n        /vegan|vegetarian|gluten|dairy/.test(content)) {\n      suggestions.push('DietaryRestriction');\n    }\n\n    // Seasonal analysis\n    if (content.includes('seasonal') || /spring|summer|fall|winter|autumn/.test(content)) {\n      suggestions.push('SeasonalAvailability');\n    }\n\n    // Elemental properties (shared with astrological domain)\n    if (content.includes('element') || content.includes('fire') || content.includes('water') ||\n        content.includes('earth') || content.includes('air')) {\n      suggestions.push('ElementalProperties');\n    }\n\n    return suggestions;\n  }\n\n  /**\n   * Get campaign system type suggestions based on content analysis\n   */\n  private getCampaignTypeSuggestions(content: string, context: ClassificationContext): string[] {\n    const suggestions: string[] = [];\n\n    // Core campaign types\n    if (content.includes('campaign')) {\n      suggestions.push('CampaignConfig', 'CampaignResult');\n    }\n\n    // Metrics analysis\n    if (content.includes('metrics') || content.includes('progress')) {\n      suggestions.push('ProgressMetrics', 'MetricsData');\n    }\n\n    // TypeScript error analysis\n    if (content.includes('typescript') || content.includes('ts') || /ts\\d+/.test(content)) {\n      suggestions.push('TypeScriptError', 'CompilationResult', 'ErrorAnalysis');\n    }\n\n    // Compilation analysis\n    if (content.includes('compile') || content.includes('build')) {\n      suggestions.push('CompilationResult', 'BuildMetrics');\n    }\n\n    // Error and fix analysis\n    if (content.includes('error') || content.includes('fix')) {\n      suggestions.push('ValidationResult', 'FixAttempt');\n    }\n\n    // Linting analysis\n    if (content.includes('lint') || content.includes('eslint')) {\n      suggestions.push('LintingResult', 'ESLintRule', 'LintingWarning');\n    }\n\n    // Performance analysis\n    if (content.includes('performance') || content.includes('memory') || content.includes('bundle')) {\n      suggestions.push('PerformanceMetrics');\n      if (content.includes('memory')) suggestions.push('MemoryUsage');\n      if (content.includes('bundle')) suggestions.push('BundleAnalysis');\n    }\n\n    // Safety and validation\n    if (content.includes('safety') || content.includes('validation')) {\n      suggestions.push('SafetyEvent', 'ValidationResult');\n    }\n\n    // Intelligence analysis\n    if (content.includes('intelligence') || content.includes('pattern') || content.includes('analysis')) {\n      suggestions.push('IntelligenceData', 'PatternAnalysis');\n    }\n\n    // Predictive analysis\n    if (content.includes('predict') || content.includes('forecast')) {\n      suggestions.push('PredictiveMetrics');\n    }\n\n    return suggestions;\n  }\n\n  /**\n   * Get service type suggestions based on content analysis\n   */\n  private getServiceTypeSuggestions(content: string, context: ClassificationContext): string[] {\n    const suggestions: string[] = [];\n\n    // API analysis\n    if (content.includes('api') || content.includes('endpoint')) {\n      suggestions.push('ApiResponse<T>', 'ApiRequest');\n    }\n\n    // HTTP analysis\n    if (content.includes('http') || content.includes('response') || content.includes('request')) {\n      suggestions.push('HttpResponse', 'RestApiResponse', 'RequestConfig');\n    }\n\n    // Service-specific analysis\n    if (content.includes('recommendation')) suggestions.push('RecommendationService');\n    if (content.includes('astro')) suggestions.push('AstrologicalService');\n    if (content.includes('recipe')) suggestions.push('RecipeService');\n    if (content.includes('ingredient')) suggestions.push('IngredientService');\n\n    // Data processing\n    if (content.includes('data') || content.includes('process')) {\n      suggestions.push('ServiceData', 'DataTransform');\n    }\n\n    // Validation and schema\n    if (content.includes('validate') || content.includes('schema')) {\n      suggestions.push('ValidationSchema');\n    }\n\n    // Cache analysis\n    if (content.includes('cache')) {\n      suggestions.push('CacheEntry');\n    }\n\n    // Error handling\n    if (content.includes('error')) {\n      suggestions.push('ServiceError');\n    }\n\n    return suggestions;\n  }\n\n  /**\n   * Get React component type suggestions based on content analysis\n   */\n  private getComponentTypeSuggestions(content: string, context: ClassificationContext): string[] {\n    const suggestions: string[] = [];\n\n    // Props analysis\n    if (content.includes('props')) {\n      suggestions.push('ComponentProps', 'React.ComponentProps<T>');\n\n      // Specific component props\n      if (content.includes('button')) suggestions.push('ButtonProps');\n      if (content.includes('input')) suggestions.push('InputProps');\n      if (content.includes('form')) suggestions.push('FormProps');\n      if (content.includes('modal')) suggestions.push('ModalProps');\n      if (content.includes('chart')) suggestions.push('ChartProps');\n      if (content.includes('recipe')) suggestions.push('RecipeCardProps');\n      if (content.includes('ingredient')) suggestions.push('IngredientCardProps');\n    }\n\n    // Component types\n    if (content.includes('component')) {\n      suggestions.push('React.FC<T>', 'React.Component<T>');\n    }\n\n    // Event analysis\n    if (content.includes('event') || content.includes('onclick') || content.includes('onchange')) {\n      suggestions.push('React.SyntheticEvent');\n      if (content.includes('click') || content.includes('mouse')) suggestions.push('React.MouseEvent');\n      if (content.includes('change') || content.includes('input')) suggestions.push('React.ChangeEvent');\n      if (content.includes('form') || content.includes('submit')) suggestions.push('React.FormEvent');\n    }\n\n    // State analysis\n    if (content.includes('state') || content.includes('usestate')) {\n      suggestions.push('ComponentState', 'HookState');\n    }\n\n    // Context analysis\n    if (content.includes('context') || content.includes('usecontext')) {\n      suggestions.push('ContextValue');\n    }\n\n    // JSX analysis\n    if (content.includes('jsx') || content.includes('element') || content.includes('render')) {\n      suggestions.push('JSX.Element', 'React.ReactNode');\n    }\n\n    return suggestions;\n  }\n\n  /**\n   * Get utility type suggestions based on content analysis\n   */\n  private getUtilityTypeSuggestions(content: string, context: ClassificationContext): string[] {\n    const suggestions: string[] = [];\n\n    // Basic type analysis\n    if (content.includes('string')) suggestions.push('string');\n    if (content.includes('number')) suggestions.push('number');\n    if (content.includes('boolean')) suggestions.push('boolean');\n    if (content.includes('date')) suggestions.push('Date');\n    if (content.includes('array')) suggestions.push('Array<unknown>');\n    if (content.includes('promise')) suggestions.push('Promise<unknown>');\n\n    // Object analysis\n    if (content.includes('object') || content.includes('record')) {\n      suggestions.push('Record<string, unknown>', 'object');\n    }\n\n    return suggestions;\n  }\n\n  /**\n   * Get test type suggestions based on content analysis\n   */\n  private getTestTypeSuggestions(content: string, context: ClassificationContext): string[] {\n    const suggestions: string[] = [];\n\n    // Jest analysis\n    if (content.includes('jest') || content.includes('mock')) {\n      suggestions.push('jest.Mock', 'jest.MockedFunction<T>');\n      if (content.includes('spy')) suggestions.push('jest.SpyInstance');\n    }\n\n    // Testing library analysis\n    if (content.includes('render') || content.includes('@testing-library')) {\n      suggestions.push('RenderResult', 'Screen');\n    }\n\n    if (content.includes('fireevent')) {\n      suggestions.push('FireEvent');\n    }\n\n    // Test data analysis\n    if (content.includes('test') || content.includes('mock')) {\n      suggestions.push('TestData', 'MockData');\n    }\n\n    if (content.includes('fixture')) {\n      suggestions.push('TestFixture');\n    }\n\n    if (content.includes('context')) {\n      suggestions.push('TestContext');\n    }\n\n    if (content.includes('case')) {\n      suggestions.push('TestCase');\n    }\n\n    return suggestions;\n  }\n\n  private getPreservationReasons(context: ClassificationContext, domain: CodeDomain): string[] {\n    const reasons: string[] = [];\n\n    if (domain === CodeDomain.ASTROLOGICAL) {\n      reasons.push('Astrological calculations require compatibility with external astronomical libraries');\n      reasons.push('Planetary position data structures vary between different API sources');\n    }\n\n    if (domain === CodeDomain.CAMPAIGN) {\n      reasons.push('Campaign system needs flexibility for evolving metrics and configurations');\n      reasons.push('Dynamic tool integration requires adaptable type structures');\n    }\n\n    if (domain === CodeDomain.TEST) {\n      reasons.push('Test flexibility for mocking and test data generation');\n      reasons.push('Jest and testing library compatibility requirements');\n    }\n\n    if (context.isInTestFile) {\n      reasons.push('Test file context allows for more flexible typing patterns');\n    }\n\n    if (context.hasExistingComment) {\n      reasons.push('Existing documentation suggests intentional usage');\n    }\n\n    return reasons;\n  }\n\n  /**\n   * Initialize path-based domain detection patterns\n   * Order matters - more specific patterns should come first\n   */\n  private initializePathPatterns(): Map<CodeDomain, RegExp[]> {\n    return new Map([\n      [CodeDomain.TEST, [\n        /__tests__/i,\n        /\\.test\\./i,\n        /\\.spec\\./i,\n        /\\/test/i,\n        /\\/spec/i\n      ]],\n      [CodeDomain.COMPONENT, [\n        /\\/component/i,\n        /\\.tsx$/i,\n        /\\.jsx$/i,\n        /\\/ui\\//i,\n        /\\/pages\\//i,\n        /\\/app\\//i\n      ]],\n      [CodeDomain.ASTROLOGICAL, [\n        /\\/calculations\\//i,\n        /\\/astro/i,\n        /planetary/i,\n        /elemental/i,\n        /lunar/i,\n        /solar/i,\n        /zodiac/i,\n        /ephemeris/i\n      ]],\n      [CodeDomain.CAMPAIGN, [\n        /\\/campaign/i,\n        /\\/intelligence/i,\n        /typescript.*error/i,\n        /linting/i,\n        /validation/i,\n        /metrics/i,\n        /progress/i\n      ]],\n      [CodeDomain.RECIPE, [\n        /\\/recipe/i,\n        /\\/ingredient/i,\n        /\\/food/i,\n        /\\/culinary/i,\n        /\\/cooking/i,\n        /\\/nutrition/i,\n        /\\/data\\/.*ingredient/i,\n        /\\/data\\/.*recipe/i\n      ]],\n      [CodeDomain.SERVICE, [\n        /\\/service/i,\n        /\\/api/i,\n        /\\/client/i,\n        /\\/adapter/i,\n        /recommendation.*service/i\n      ]],\n      [CodeDomain.UTILITY, [\n        /\\/utils/i,\n        /\\/helper/i,\n        /\\/common/i,\n        /\\/shared/i,\n        /\\/lib/i\n      ]]\n    ]);\n  }\n\n  /**\n   * Initialize content-based domain detection patterns\n   */\n  private initializeContentPatterns(): Map<CodeDomain, RegExp[]> {\n    return new Map([\n      [CodeDomain.ASTROLOGICAL, [\n        /planetary|planet|astro|zodiac|sign|element|lunar|solar/gi,\n        /position|degree|longitude|latitude|ephemeris/gi,\n        /fire|water|earth|air|elemental/gi,\n        /astronomia|astronomy-engine|suncalc/gi,\n        /PlanetaryPosition|ElementalProperties|ZodiacSign/gi\n      ]],\n      [CodeDomain.RECIPE, [\n        /recipe|ingredient|food|culinary|cooking|nutrition/gi,\n        /flavor|taste|spice|herb|vegetable|fruit/gi,\n        /meal|dish|cuisine|dietary/gi,\n        /Ingredient|Recipe|NutritionalInfo|CookingMethod/gi\n      ]],\n      [CodeDomain.CAMPAIGN, [\n        /campaign|metrics|progress|typescript|linting|error/gi,\n        /validation|safety|rollback|checkpoint/gi,\n        /intelligence|enterprise|automation/gi,\n        /CampaignConfig|ProgressMetrics|ValidationResult/gi\n      ]],\n      [CodeDomain.SERVICE, [\n        /service|api|request|response|client|server/gi,\n        /endpoint|http|fetch|axios|data/gi,\n        /ApiResponse|ServiceData|RequestConfig/gi\n      ]],\n      [CodeDomain.COMPONENT, [\n        /component|props|state|render|jsx|tsx/gi,\n        /react|hook|context|provider/gi,\n        /ComponentProps|React\\.Component|JSX\\.Element/gi\n      ]],\n      [CodeDomain.UTILITY, [\n        /util|helper|common|shared|lib/gi,\n        /function|method|tool|format/gi\n      ]],\n      [CodeDomain.TEST, [\n        /test|spec|mock|jest|describe|it|expect/gi,\n        /fixture|stub|spy|beforeEach|afterEach/gi,\n        /jest\\.Mock|MockedFunction|TestData/gi\n      ]]\n    ]);\n  }\n\n  /**\n   * Initialize subdomain detection patterns\n   */\n  private initializeSubDomainPatterns(): Map<CodeDomain, Map<string, RegExp[]>> {\n    return new Map([\n      [CodeDomain.ASTROLOGICAL, new Map([\n        ['planetary', [/planetary|planet/gi, /position|degree|longitude/gi]],\n        ['elemental', [/elemental|element/gi, /fire|water|earth|air/gi]],\n        ['lunar', [/lunar|moon/gi, /phase|cycle/gi]],\n        ['solar', [/solar|sun/gi, /sunrise|sunset/gi]],\n        ['zodiac', [/zodiac|sign/gi, /aries|taurus|gemini|cancer|leo|virgo|libra|scorpio|sagittarius|capricorn|aquarius|pisces/gi]],\n        ['calculations', [/calculation|compute|algorithm/gi, /ephemeris|transit/gi]]\n      ])],\n      [CodeDomain.RECIPE, new Map([\n        ['ingredients', [/ingredient/gi, /spice|herb|vegetable|fruit/gi]],\n        ['cooking-methods', [/cooking|method/gi, /bake|boil|fry|steam|grill/gi]],\n        ['nutrition', [/nutrition|nutrient/gi, /calorie|vitamin|mineral/gi]],\n        ['cuisines', [/cuisine|cultural/gi, /italian|chinese|mexican|indian/gi]],\n        ['recipes', [/recipe|dish|meal/gi, /preparation|instruction/gi]]\n      ])],\n      [CodeDomain.CAMPAIGN, new Map([\n        ['typescript-errors', [/typescript|ts\\d+/gi, /error|compilation/gi]],\n        ['linting', [/lint|eslint/gi, /warning|rule/gi]],\n        ['performance', [/performance|optimization/gi, /memory|speed|bundle/gi]],\n        ['metrics', [/metrics|progress/gi, /tracking|measurement/gi]],\n        ['intelligence', [/intelligence|enterprise/gi, /analytics|insights/gi]],\n        ['safety', [/safety|validation/gi, /rollback|checkpoint/gi]]\n      ])],\n      [CodeDomain.SERVICE, new Map([\n        ['recommendation', [/recommendation|suggest/gi, /algorithm|matching/gi]],\n        ['api-integration', [/api|integration/gi, /request|response|endpoint/gi]],\n        ['data-processing', [/data|processing/gi, /transform|parse|validate/gi]],\n        ['caching', [/cache|storage/gi, /redis|memory/gi]]\n      ])],\n      [CodeDomain.COMPONENT, new Map([\n        ['ui-components', [/component|ui/gi, /button|input|modal/gi]],\n        ['pages', [/page|route/gi, /navigation|layout/gi]],\n        ['hooks', [/hook|use[A-Z]/gi, /state|effect|context/gi]],\n        ['forms', [/form|input/gi, /validation|submit/gi]]\n      ])],\n      [CodeDomain.TEST, new Map([\n        ['unit-tests', [/unit|test/gi, /describe|it|expect/gi]],\n        ['integration-tests', [/integration|e2e/gi, /workflow|scenario/gi]],\n        ['mocks', [/mock|stub|spy/gi, /jest\\.mock|mockImplementation/gi]]\n      ])],\n      [CodeDomain.UTILITY, new Map([\n        ['validation', [/validation|validate/gi, /schema|rule/gi]],\n        ['formatting', [/format|transform/gi, /string|date|number/gi]],\n        ['helpers', [/helper|utility/gi, /common|shared/gi]]\n      ])]\n    ]);\n  }\n\n  /**\n   * Legacy method for backward compatibility\n   */\n  private initializeDomainPatterns(): Map<CodeDomain, RegExp[]> {\n    // This method is kept for backward compatibility\n    // The actual patterns are now in initializeContentPatterns\n    return this.initializeContentPatterns();\n  }\n\n  private initializeTypeMapping(): Map<CodeDomain, string[]> {\n    return new Map([\n      [CodeDomain.ASTROLOGICAL, [\n        // Core astrological types\n        'PlanetaryPosition',\n        'ElementalProperties',\n        'ZodiacSign',\n        'Planet',\n        'AstrologicalData',\n        'LunarPhase',\n        'TransitData',\n        'EphemerisData',\n        // Specific planetary types\n        'SunPosition',\n        'MoonPosition',\n        'MercuryPosition',\n        'VenusPosition',\n        'MarsPosition',\n        'JupiterPosition',\n        'SaturnPosition',\n        'UranusPosition',\n        'NeptunePosition',\n        'PlutoPosition',\n        // Elemental and calculation types\n        'FireElement',\n        'WaterElement',\n        'EarthElement',\n        'AirElement',\n        'ElementalCompatibility',\n        'AstronomicalCalculation',\n        'CoordinateSystem',\n        'unknown'\n      ]],\n      [CodeDomain.RECIPE, [\n        // Core recipe types\n        'Ingredient',\n        'Recipe',\n        'NutritionalInfo',\n        'CookingMethod',\n        'CulinaryData',\n        'ElementalProperties',\n        // Specific ingredient types\n        'Spice',\n        'Herb',\n        'Vegetable',\n        'Fruit',\n        'Protein',\n        'Grain',\n        'Dairy',\n        // Recipe-related types\n        'RecipeStep',\n        'CookingInstruction',\n        'IngredientQuantity',\n        'FlavorProfile',\n        'CuisineType',\n        'DietaryRestriction',\n        'SeasonalAvailability',\n        'unknown'\n      ]],\n      [CodeDomain.CAMPAIGN, [\n        // Core campaign types\n        'ProgressMetrics',\n        'CampaignConfig',\n        'CampaignResult',\n        'ValidationResult',\n        'SafetyEvent',\n        'MetricsData',\n        // TypeScript-specific types\n        'TypeScriptError',\n        'CompilationResult',\n        'ErrorAnalysis',\n        'FixAttempt',\n        // Linting types\n        'LintingResult',\n        'ESLintRule',\n        'LintingWarning',\n        // Performance types\n        'PerformanceMetrics',\n        'BuildMetrics',\n        'MemoryUsage',\n        'BundleAnalysis',\n        // Intelligence types\n        'IntelligenceData',\n        'PatternAnalysis',\n        'PredictiveMetrics',\n        'Record<string, unknown>'\n      ]],\n      [CodeDomain.SERVICE, [\n        // API types\n        'ApiResponse<T>',\n        'ApiRequest',\n        'ServiceData',\n        'RequestConfig',\n        'ResponseData',\n        'HttpResponse',\n        'RestApiResponse',\n        // Service-specific types\n        'RecommendationService',\n        'AstrologicalService',\n        'RecipeService',\n        'IngredientService',\n        // Data processing types\n        'DataTransform',\n        'ValidationSchema',\n        'CacheEntry',\n        'ServiceError',\n        'unknown'\n      ]],\n      [CodeDomain.COMPONENT, [\n        // React component types\n        'ComponentProps',\n        'React.ComponentProps<T>',\n        'React.ReactNode',\n        'JSX.Element',\n        'React.FC<T>',\n        'React.Component<T>',\n        // Event types\n        'React.SyntheticEvent',\n        'React.MouseEvent',\n        'React.ChangeEvent',\n        'React.FormEvent',\n        // State and context types\n        'ComponentState',\n        'ContextValue',\n        'HookState',\n        // Prop-specific types\n        'ButtonProps',\n        'InputProps',\n        'FormProps',\n        'ModalProps',\n        'ChartProps',\n        'RecipeCardProps',\n        'IngredientCardProps',\n        'unknown'\n      ]],\n      [CodeDomain.UTILITY, [\n        'unknown',\n        'Record<string, unknown>',\n        'object',\n        'string',\n        'number',\n        'boolean',\n        'Date',\n        'Array<unknown>',\n        'Promise<unknown>'\n      ]],\n      [CodeDomain.TEST, [\n        // Jest types\n        'jest.Mock',\n        'jest.MockedFunction<T>',\n        'jest.SpyInstance',\n        'MockedFunction<T>',\n        // Testing library types\n        'RenderResult',\n        'FireEvent',\n        'Screen',\n        // Test data types\n        'TestData',\n        'MockData',\n        'TestFixture',\n        'TestContext',\n        'TestCase',\n        'unknown'\n      ]]\n    ]);\n  }\n}\n"],"version":3}