{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/utils/elementalMappings/ingredients.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/utils/elementalMappings/ingredients.ts"],"sourcesContent":["import { \n  ElementalProperties, \n  ZodiacSign, \n  Element,\n  Season\n} from '@/types/alchemy';\nimport { IngredientMapping } from '@/data/ingredients/types';\n\n// Helper function to standardize ingredient mappings\nfunction createIngredientMapping(\n  id: string,\n  properties: Partial<IngredientMapping>\n): IngredientMapping {\n  return {\n    name: id, // Add the required name property\n    elementalProperties: properties.elementalProperties || { \n      Earth: 0.25, \n      Water: 0.25, \n      Fire: 0.25, \n      Air: 0.25 \n    },\n    ...properties\n  } as IngredientMapping;\n}\n\nexport const ingredientMappings = {\n  // Aromatics\n  ginger: createIngredientMapping('ginger', {\n    elementalProperties: {\n      Fire: 0.7,\n      Earth: 0.2,\n      Air: 0.1,\n      Water: 0\n    },\n    astrologicalProfile: {\n      rulingPlanets: ['Mars', 'Sun'],\n      favorableZodiac: ['aries', 'leo', 'sagittarius'], // Convert to lowercase\n      elementalAffinity: {\n        base: 'Fire',\n        decanModifiers: {\n          first: { element: 'Fire', planet: 'Mars' },\n          second: { element: 'Air', planet: 'Sun' },\n          third: { element: 'Earth', planet: 'Saturn' }\n        }\n      }\n    },\n    season: ['all']\n  }),\n  \n  garlic: createIngredientMapping('garlic', {\n    elementalProperties: {\n      Fire: 0.6,\n      Earth: 0.3,\n      Air: 0.1,\n      Water: 0\n    },\n    astrologicalProfile: {\n      rulingPlanets: ['Mars', 'Pluto'],\n      favorableZodiac: ['scorpio', 'capricorn'], // Convert to lowercase\n      elementalAffinity: {\n        base: 'Fire',\n        decanModifiers: {\n          first: { element: 'Fire', planet: 'Mars' },\n          second: { element: 'Earth', planet: 'Pluto' },\n          third: { element: 'Air', planet: 'Uranus' }\n        }\n      }\n    },\n    season: ['all']\n  }),\n  \n  // Spices\n  cinnamon: createIngredientMapping('cinnamon', {\n    elementalProperties: {\n      Fire: 0.8,\n      Air: 0.2,\n      Earth: 0,\n      Water: 0\n    },\n    astrologicalProfile: {\n      rulingPlanets: ['Sun', 'Jupiter'],\n      favorableZodiac: ['leo', 'sagittarius'], // Convert to lowercase\n      elementalAffinity: 'Fire'\n    },\n    season: ['fall', 'winter']\n  }),\n  \n  cardamom: createIngredientMapping('cardamom', {\n    elementalProperties: {\n      Air: 0.6,\n      Fire: 0.3,\n      Earth: 0.1,\n      Water: 0\n    },\n    astrologicalProfile: {\n      rulingPlanets: ['Mercury', 'Venus'],\n      favorableZodiac: ['gemini', 'libra'], // Convert to lowercase\n      elementalAffinity: 'Air'\n    },\n    season: ['fall', 'winter']\n  }),\n  \n  clove: createIngredientMapping('clove', { // Add name\n    elementalProperties: {\n      Fire: 0.7,\n      Air: 0.2,\n      Earth: 0.1,\n      Water: 0\n    },\n    season: ['fall', 'winter']\n  }),\n  \n  // Cooling Ingredients\n  mint: createIngredientMapping('mint', {\n    elementalProperties: {\n      Water: 0.6,\n      Air: 0.4,\n      Fire: 0,\n      Earth: 0\n    },\n    astrologicalProfile: {\n      rulingPlanets: ['Moon', 'Neptune'],\n      favorableZodiac: ['cancer', 'pisces'], // Convert to lowercase\n      elementalAffinity: 'Water'\n    },\n    season: ['spring', 'summer']\n  }),\n  \n  cucumber: createIngredientMapping('cucumber', { // Add name\n    elementalProperties: {\n      Water: 0.8,\n      Air: 0.2,\n      Fire: 0,\n      Earth: 0\n    },\n    season: ['summer']\n  }),\n  \n  // Earthy Ingredients\n  mushroom: createIngredientMapping('mushroom', {\n    elementalProperties: {\n      Earth: 0.7,\n      Water: 0.3,\n      Fire: 0,\n      Air: 0\n    },\n    astrologicalProfile: {\n      rulingPlanets: ['Saturn', 'Pluto'],\n      favorableZodiac: ['capricorn', 'scorpio'], // Convert to lowercase\n      elementalAffinity: 'Earth'\n    },\n    season: ['fall', 'spring']\n  }),\n  \n  seaweed: createIngredientMapping('seaweed', { // Add name\n    elementalProperties: {\n      Water: 0.6,\n      Earth: 0.4,\n      Fire: 0,\n      Air: 0\n    },\n    season: ['all']\n  }),\n  \n  // Proteins\n  fish: createIngredientMapping('fish', { // Add name\n    elementalProperties: {\n      Water: 0.7,\n      Air: 0.2,\n      Earth: 0.1,\n      Fire: 0\n    },\n    season: ['all']\n  }),\n  \n  beef: createIngredientMapping('beef', {\n    elementalProperties: {\n      Earth: 0.5,\n      Fire: 0.5,\n      Water: 0,\n      Air: 0\n    },\n    astrologicalProfile: {\n      rulingPlanets: ['Mars', 'Saturn'],\n      favorableZodiac: ['capricorn', 'taurus'], // Convert to lowercase\n      elementalAffinity: 'Earth'\n    },\n    season: ['all']\n  }),\n  \n  chicken: createIngredientMapping('chicken', {\n    elementalProperties: {\n      Air: 0.4,\n      Fire: 0.3,\n      Earth: 0.3,\n      Water: 0\n    },\n    astrologicalProfile: {\n      rulingPlanets: ['Mercury', 'Venus'],\n      favorableZodiac: ['virgo', 'taurus'], // Convert to lowercase\n      elementalAffinity: 'Air'\n    },\n    season: ['all']\n  }),\n  \n  // Dairy\n  dairy: createIngredientMapping('dairy', {\n    elementalProperties: {\n      Water: 0.5,\n      Earth: 0.5,\n      Fire: 0,\n      Air: 0\n    },\n    season: ['all']\n  }),\n\n  // Vegetables\n  'bitter greens': createIngredientMapping('bitter greens', {\n    elementalProperties: {\n      Earth: 0.4,\n      Air: 0.4,\n      Water: 0.2,\n      Fire: 0\n    },\n    season: ['spring', 'fall']\n  }),\n  \n  turmeric: createIngredientMapping('turmeric', {\n    elementalProperties: {\n      Fire: 0.6,\n      Earth: 0.4,\n      Water: 0,\n      Air: 0\n    },\n    season: ['all']\n  }),\n  \n  chili: createIngredientMapping('chili', {\n    elementalProperties: {\n      Fire: 0.9,\n      Air: 0.1,\n      Water: 0,\n      Earth: 0\n    },\n    season: ['summer', 'fall']\n  }),\n  \n  basil: createIngredientMapping('basil', {\n    elementalProperties: {\n      Air: 0.5,\n      Fire: 0.3,\n      Earth: 0.2,\n      Water: 0\n    },\n    season: ['summer']\n  }),\n  \n  sage: createIngredientMapping('sage', {\n    elementalProperties: {\n      Air: 0.4,\n      Earth: 0.4,\n      Fire: 0.2,\n      Water: 0\n    },\n    season: ['autumn', 'winter']\n  }),\n  \n  rosemary: createIngredientMapping('rosemary', {\n    elementalProperties: {\n      Fire: 0.4,\n      Air: 0.3,\n      Earth: 0.3,\n      Water: 0\n    },\n    season: ['all']\n  }),\n  \n  thyme: createIngredientMapping('thyme', {\n    elementalProperties: {\n      Air: 0.5,\n      Earth: 0.3,\n      Fire: 0.2,\n      Water: 0\n    },\n    season: ['all']\n  }),\n\n  // Grains\n  rice: createIngredientMapping('rice', {\n    elementalProperties: {\n      Earth: 0.6,\n      Water: 0.3,\n      Air: 0.1,\n      Fire: 0\n    },\n    astrologicalProfile: {\n      rulingPlanets: ['Moon', 'Saturn'],\n      favorableZodiac: ['cancer', 'virgo'], // Changed to lowercase\n      elementalAffinity: 'Earth'\n    },\n    season: ['all']\n  }),\n\n  // Fruits\n  'apple': createIngredientMapping('apple', {\n    elementalProperties: {\n      Earth: 0.5,\n      Water: 0.3,\n      Air: 0.2,\n      Fire: 0\n    },\n    astrologicalProfile: {\n      rulingPlanets: ['Venus', 'Saturn'],\n      favorableZodiac: ['taurus', 'capricorn'], // Changed to lowercase\n      elementalAffinity: {\n        base: 'Earth',\n        decanModifiers: {\n          first: { element: 'Earth', planet: 'Venus' },\n          second: { element: 'Water', planet: 'Saturn' },\n          third: { element: 'Air', planet: 'Mercury' }\n        }\n      }\n    },\n    season: ['fall']\n  }),\n  \n  'banana': createIngredientMapping('banana', {\n    elementalProperties: {\n      Earth: 0.4,\n      Water: 0.3,\n      Fire: 0.2,\n      Air: 0.1\n    },\n    astrologicalProfile: {\n      rulingPlanets: ['Venus', 'Moon'],\n      favorableZodiac: ['taurus', 'cancer'], // Changed to lowercase\n      elementalAffinity: {\n        base: 'Earth',\n        decanModifiers: {\n          first: { element: 'Earth', planet: 'Venus' },\n          second: { element: 'Water', planet: 'Moon' },\n          third: { element: 'Fire', planet: 'Sun' }\n        }\n      }\n    },\n    season: ['year-round']\n  }),\n\n  // Example ingredient with lunar phase modifiers\n  'brown_rice': createIngredientMapping('brown_rice', {\n    elementalProperties: { \n      Earth: 0.5, \n      Water: 0.3, \n      Air: 0.2,\n      Fire: 0 // Add missing required property\n    },\n    astrologicalProfile: {\n      rulingPlanets: ['Moon', 'Saturn'],\n      favorableZodiac: ['cancer', 'capricorn'], // Convert to lowercase\n      elementalAffinity: {\n        base: 'Earth',\n        decanModifiers: {\n          first: { element: 'Earth', planet: 'Moon' },\n          second: { element: 'Water', planet: 'Saturn' },\n          third: { element: 'Air', planet: 'Mercury' }\n        }\n      },\n      lunarPhaseModifiers: {\n        newMoon: {\n          elementalBoost: { Earth: 0.1, Water: 0.1 },\n          preparationTips: ['Best for soaking and sprouting']\n        },\n        fullMoon: {\n          elementalBoost: { Water: 0.2 },\n          preparationTips: ['Ideal for creamy rice dishes']\n        }\n      }\n    },\n    season: ['all']\n  })\n} as const;\n\n// Helper function to get ingredients by dominant element\nexport const getIngredientsByElement = (element: keyof ElementalProperties) => {\n  return Object.entries(ingredientMappings)\n    .filter(([_, mapping]) => {\n      const elements = Object.entries(mapping.elementalProperties);\n      const dominantElement = elements.reduce((max, curr) => \n        curr[1] > max[1] ? curr : max\n      );\n      return dominantElement[0] === element;\n    })\n    .map(([name]) => name);\n};\n\n// Helper function to get seasonal ingredients\nexport const getSeasonalIngredients = (season: string) => {\n  return Object.entries(ingredientMappings)\n    .filter(([_, mapping]) => (mapping.season as string[]).includes(season))\n    .map(([name]) => name);\n};\n\n// Helper function to get complementary ingredients\nexport const getComplementaryIngredients = (ingredient: keyof typeof ingredientMappings) => {\n  const baseElement = Object.entries(ingredientMappings[ingredient].elementalProperties)\n    .reduce((max, curr) => curr[1] > max[1] ? curr : max)[0];\n  \n  return Object.entries(ingredientMappings)\n    .filter(([name, mapping]) => {\n      if (name === ingredient) return false;\n      const complementaryElement = Object.entries(mapping.elementalProperties)\n        .reduce((max, curr) => curr[1] > max[1] ? curr : max)[0];\n      return isComplementaryElement(baseElement, complementaryElement);\n    })\n    .map(([name]) => name);\n};\n\n// Helper function to determine if elements are complementary\nconst isComplementaryElement = (element1: string, element2: string): boolean => {\n  const complementaryPairs = [\n    ['Fire', 'Air'],\n    ['Water', 'Earth']\n  ];\n  \n  return complementaryPairs.some(pair => \n    (pair[0] === element1 && pair[1] === element2) ||\n    (pair[1] === element1 && pair[0] === element2)\n  );\n}; "],"version":3}