005940d15bbdf71f7a897e69c01a0c0b
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getComplementaryIngredients = exports.getSeasonalIngredients = exports.getIngredientsByElement = exports.ingredientMappings = void 0;
// Helper function to standardize ingredient mappings
function createIngredientMapping(id, properties) {
    return {
        name: id,
        elementalProperties: properties.elementalProperties || {
            Earth: 0.25,
            Water: 0.25,
            Fire: 0.25,
            Air: 0.25
        },
        ...properties
    };
}
exports.ingredientMappings = {
    // Aromatics
    ginger: createIngredientMapping('ginger', {
        elementalProperties: {
            Fire: 0.7,
            Earth: 0.2,
            Air: 0.1,
            Water: 0
        },
        astrologicalProfile: {
            rulingPlanets: ['Mars', 'Sun'],
            favorableZodiac: ['aries', 'leo', 'sagittarius'],
            elementalAffinity: {
                base: 'Fire',
                decanModifiers: {
                    first: { element: 'Fire', planet: 'Mars' },
                    second: { element: 'Air', planet: 'Sun' },
                    third: { element: 'Earth', planet: 'Saturn' }
                }
            }
        },
        season: ['all']
    }),
    garlic: createIngredientMapping('garlic', {
        elementalProperties: {
            Fire: 0.6,
            Earth: 0.3,
            Air: 0.1,
            Water: 0
        },
        astrologicalProfile: {
            rulingPlanets: ['Mars', 'Pluto'],
            favorableZodiac: ['scorpio', 'capricorn'],
            elementalAffinity: {
                base: 'Fire',
                decanModifiers: {
                    first: { element: 'Fire', planet: 'Mars' },
                    second: { element: 'Earth', planet: 'Pluto' },
                    third: { element: 'Air', planet: 'Uranus' }
                }
            }
        },
        season: ['all']
    }),
    // Spices
    cinnamon: createIngredientMapping('cinnamon', {
        elementalProperties: {
            Fire: 0.8,
            Air: 0.2,
            Earth: 0,
            Water: 0
        },
        astrologicalProfile: {
            rulingPlanets: ['Sun', 'Jupiter'],
            favorableZodiac: ['leo', 'sagittarius'],
            elementalAffinity: 'Fire'
        },
        season: ['fall', 'winter']
    }),
    cardamom: createIngredientMapping('cardamom', {
        elementalProperties: {
            Air: 0.6,
            Fire: 0.3,
            Earth: 0.1,
            Water: 0
        },
        astrologicalProfile: {
            rulingPlanets: ['Mercury', 'Venus'],
            favorableZodiac: ['gemini', 'libra'],
            elementalAffinity: 'Air'
        },
        season: ['fall', 'winter']
    }),
    clove: createIngredientMapping('clove', {
        elementalProperties: {
            Fire: 0.7,
            Air: 0.2,
            Earth: 0.1,
            Water: 0
        },
        season: ['fall', 'winter']
    }),
    // Cooling Ingredients
    mint: createIngredientMapping('mint', {
        elementalProperties: {
            Water: 0.6,
            Air: 0.4,
            Fire: 0,
            Earth: 0
        },
        astrologicalProfile: {
            rulingPlanets: ['Moon', 'Neptune'],
            favorableZodiac: ['cancer', 'pisces'],
            elementalAffinity: 'Water'
        },
        season: ['spring', 'summer']
    }),
    cucumber: createIngredientMapping('cucumber', {
        elementalProperties: {
            Water: 0.8,
            Air: 0.2,
            Fire: 0,
            Earth: 0
        },
        season: ['summer']
    }),
    // Earthy Ingredients
    mushroom: createIngredientMapping('mushroom', {
        elementalProperties: {
            Earth: 0.7,
            Water: 0.3,
            Fire: 0,
            Air: 0
        },
        astrologicalProfile: {
            rulingPlanets: ['Saturn', 'Pluto'],
            favorableZodiac: ['capricorn', 'scorpio'],
            elementalAffinity: 'Earth'
        },
        season: ['fall', 'spring']
    }),
    seaweed: createIngredientMapping('seaweed', {
        elementalProperties: {
            Water: 0.6,
            Earth: 0.4,
            Fire: 0,
            Air: 0
        },
        season: ['all']
    }),
    // Proteins
    fish: createIngredientMapping('fish', {
        elementalProperties: {
            Water: 0.7,
            Air: 0.2,
            Earth: 0.1,
            Fire: 0
        },
        season: ['all']
    }),
    beef: createIngredientMapping('beef', {
        elementalProperties: {
            Earth: 0.5,
            Fire: 0.5,
            Water: 0,
            Air: 0
        },
        astrologicalProfile: {
            rulingPlanets: ['Mars', 'Saturn'],
            favorableZodiac: ['capricorn', 'taurus'],
            elementalAffinity: 'Earth'
        },
        season: ['all']
    }),
    chicken: createIngredientMapping('chicken', {
        elementalProperties: {
            Air: 0.4,
            Fire: 0.3,
            Earth: 0.3,
            Water: 0
        },
        astrologicalProfile: {
            rulingPlanets: ['Mercury', 'Venus'],
            favorableZodiac: ['virgo', 'taurus'],
            elementalAffinity: 'Air'
        },
        season: ['all']
    }),
    // Dairy
    dairy: createIngredientMapping('dairy', {
        elementalProperties: {
            Water: 0.5,
            Earth: 0.5,
            Fire: 0,
            Air: 0
        },
        season: ['all']
    }),
    // Vegetables
    'bitter greens': createIngredientMapping('bitter greens', {
        elementalProperties: {
            Earth: 0.4,
            Air: 0.4,
            Water: 0.2,
            Fire: 0
        },
        season: ['spring', 'fall']
    }),
    turmeric: createIngredientMapping('turmeric', {
        elementalProperties: {
            Fire: 0.6,
            Earth: 0.4,
            Water: 0,
            Air: 0
        },
        season: ['all']
    }),
    chili: createIngredientMapping('chili', {
        elementalProperties: {
            Fire: 0.9,
            Air: 0.1,
            Water: 0,
            Earth: 0
        },
        season: ['summer', 'fall']
    }),
    basil: createIngredientMapping('basil', {
        elementalProperties: {
            Air: 0.5,
            Fire: 0.3,
            Earth: 0.2,
            Water: 0
        },
        season: ['summer']
    }),
    sage: createIngredientMapping('sage', {
        elementalProperties: {
            Air: 0.4,
            Earth: 0.4,
            Fire: 0.2,
            Water: 0
        },
        season: ['autumn', 'winter']
    }),
    rosemary: createIngredientMapping('rosemary', {
        elementalProperties: {
            Fire: 0.4,
            Air: 0.3,
            Earth: 0.3,
            Water: 0
        },
        season: ['all']
    }),
    thyme: createIngredientMapping('thyme', {
        elementalProperties: {
            Air: 0.5,
            Earth: 0.3,
            Fire: 0.2,
            Water: 0
        },
        season: ['all']
    }),
    // Grains
    rice: createIngredientMapping('rice', {
        elementalProperties: {
            Earth: 0.6,
            Water: 0.3,
            Air: 0.1,
            Fire: 0
        },
        astrologicalProfile: {
            rulingPlanets: ['Moon', 'Saturn'],
            favorableZodiac: ['cancer', 'virgo'],
            elementalAffinity: 'Earth'
        },
        season: ['all']
    }),
    // Fruits
    'apple': createIngredientMapping('apple', {
        elementalProperties: {
            Earth: 0.5,
            Water: 0.3,
            Air: 0.2,
            Fire: 0
        },
        astrologicalProfile: {
            rulingPlanets: ['Venus', 'Saturn'],
            favorableZodiac: ['taurus', 'capricorn'],
            elementalAffinity: {
                base: 'Earth',
                decanModifiers: {
                    first: { element: 'Earth', planet: 'Venus' },
                    second: { element: 'Water', planet: 'Saturn' },
                    third: { element: 'Air', planet: 'Mercury' }
                }
            }
        },
        season: ['fall']
    }),
    'banana': createIngredientMapping('banana', {
        elementalProperties: {
            Earth: 0.4,
            Water: 0.3,
            Fire: 0.2,
            Air: 0.1
        },
        astrologicalProfile: {
            rulingPlanets: ['Venus', 'Moon'],
            favorableZodiac: ['taurus', 'cancer'],
            elementalAffinity: {
                base: 'Earth',
                decanModifiers: {
                    first: { element: 'Earth', planet: 'Venus' },
                    second: { element: 'Water', planet: 'Moon' },
                    third: { element: 'Fire', planet: 'Sun' }
                }
            }
        },
        season: ['year-round']
    }),
    // Example ingredient with lunar phase modifiers
    'brown_rice': createIngredientMapping('brown_rice', {
        elementalProperties: {
            Earth: 0.5,
            Water: 0.3,
            Air: 0.2,
            Fire: 0 // Add missing required property
        },
        astrologicalProfile: {
            rulingPlanets: ['Moon', 'Saturn'],
            favorableZodiac: ['cancer', 'capricorn'],
            elementalAffinity: {
                base: 'Earth',
                decanModifiers: {
                    first: { element: 'Earth', planet: 'Moon' },
                    second: { element: 'Water', planet: 'Saturn' },
                    third: { element: 'Air', planet: 'Mercury' }
                }
            },
            lunarPhaseModifiers: {
                newMoon: {
                    elementalBoost: { Earth: 0.1, Water: 0.1 },
                    preparationTips: ['Best for soaking and sprouting']
                },
                fullMoon: {
                    elementalBoost: { Water: 0.2 },
                    preparationTips: ['Ideal for creamy rice dishes']
                }
            }
        },
        season: ['all']
    })
};
// Helper function to get ingredients by dominant element
const getIngredientsByElement = (element) => {
    return Object.entries(exports.ingredientMappings)
        .filter(([_, mapping]) => {
        const elements = Object.entries(mapping.elementalProperties);
        const dominantElement = elements.reduce((max, curr) => curr[1] > max[1] ? curr : max);
        return dominantElement[0] === element;
    })
        .map(([name]) => name);
};
exports.getIngredientsByElement = getIngredientsByElement;
// Helper function to get seasonal ingredients
const getSeasonalIngredients = (season) => {
    return Object.entries(exports.ingredientMappings)
        .filter(([_, mapping]) => mapping.season.includes(season))
        .map(([name]) => name);
};
exports.getSeasonalIngredients = getSeasonalIngredients;
// Helper function to get complementary ingredients
const getComplementaryIngredients = (ingredient) => {
    const baseElement = Object.entries(exports.ingredientMappings[ingredient].elementalProperties)
        .reduce((max, curr) => curr[1] > max[1] ? curr : max)[0];
    return Object.entries(exports.ingredientMappings)
        .filter(([name, mapping]) => {
        if (name === ingredient)
            return false;
        const complementaryElement = Object.entries(mapping.elementalProperties)
            .reduce((max, curr) => curr[1] > max[1] ? curr : max)[0];
        return isComplementaryElement(baseElement, complementaryElement);
    })
        .map(([name]) => name);
};
exports.getComplementaryIngredients = getComplementaryIngredients;
// Helper function to determine if elements are complementary
const isComplementaryElement = (element1, element2) => {
    const complementaryPairs = [
        ['Fire', 'Air'],
        ['Water', 'Earth']
    ];
    return complementaryPairs.some(pair => (pair[0] === element1 && pair[1] === element2) ||
        (pair[1] === element1 && pair[0] === element2));
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,