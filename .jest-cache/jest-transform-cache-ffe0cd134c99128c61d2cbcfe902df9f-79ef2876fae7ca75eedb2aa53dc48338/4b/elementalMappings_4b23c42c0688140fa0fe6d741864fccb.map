{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/data/recipes/elementalMappings.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/data/recipes/elementalMappings.ts"],"sourcesContent":["import type { RecipeElementalMapping } from '@/types/recipes';\nimport { cookingMethods } from '@/data/cooking';\nimport { culinaryTraditions } from '@/data/cuisines/culinaryTraditions';\nimport { ELEMENTAL_CHARACTERISTICS } from '@/constants/elementalConstants';\nimport { ElementalRecommendationService } from '@/services/ElementalRecommendationService';\nimport { AstrologicalInfluence, ZodiacSign, Element } from '@/types/alchemy';\n\nexport { ELEMENTAL_CHARACTERISTICS };\n\n// Default astrologicalInfluence for when none is specified\nconst defaultAstrologicalInfluence: AstrologicalInfluence = {\n  planet: \"Universal\",\n  sign: \"aries\",\n  element: \"Fire\",\n  strength: 1.0,\n  aspects: []\n};\n\n// Helper function to safely access astrologicalInfluences\nconst safeGetAstrologicalInfluences = (method: unknown): AstrologicalInfluence[] => {\n  if (!method) return [defaultAstrologicalInfluence];\n  const methodData = method as { astrologicalInfluences?: AstrologicalInfluence | AstrologicalInfluence[] };\n  if (!methodData?.astrologicalInfluences) return [defaultAstrologicalInfluence];\n  if (Array.isArray(methodData.astrologicalInfluences)) {\n    return methodData.astrologicalInfluences;\n  }\n  return [methodData.astrologicalInfluences];\n};\n\n/**\n * Enhanced recipe mappings with comprehensive elemental properties\n */\nexport const recipeElementalMappings: Record<string, RecipeElementalMapping> = {\n  // French Cuisine\n  'coq_au_vin': {\n    elementalProperties: { Earth: 0.5, Fire: 0.3, Water: 0.15, Air: 0.05 },\n    astrologicalProfile: {\n      rulingPlanets: ['Venus', 'Mars'],\n      favorableZodiac: ['taurus', 'capricorn'],\n      optimalAspects: ['Venus trine Mars'],\n      techniqueEnhancers: safeGetAstrologicalInfluences(cookingMethods?.braising)\n    },\n    cuisine: culinaryTraditions.french,\n    ingredientBalance: {\n      base: ['chicken', 'red_wine'],\n      earth: ['mushroom', 'bacon'],\n      fire: ['brandy', 'pearl_onion'],\n      water: ['stock', 'garlic']\n    },\n    // Enhanced properties from expanded elemental characteristics\n    cookingTechniques: ['Slow cooking', 'Braising', 'Simmering'],\n    flavorProfiles: ['Rich', 'Complex', 'Umami', 'Earthy'],\n    healthBenefits: ['Nutritional density', 'Sustained energy'],\n    complementaryHerbs: ['Thyme', 'Bay leaf', 'Rosemary'],\n    idealTimeOfDay: ['Evening', 'Dinner'],\n    seasonalRecommendation: ['Autumn', 'Winter']\n  },\n\n  // Japanese Cuisine\n  'kaiseki_ryori': {\n    elementalProperties: { Water: 0.6, Earth: 0.3, Air: 0.05, Fire: 0.05 },\n    astrologicalProfile: {\n      rulingPlanets: ['Moon', 'Mercury'],\n      favorableZodiac: ['pisces', 'virgo'],\n      optimalAspects: ['Moon conjunct Mercury'],\n      techniqueEnhancers: safeGetAstrologicalInfluences(cookingMethods?.steaming)\n    },\n    cuisine: culinaryTraditions.japanese,\n    ingredientBalance: {\n      base: ['dashi', 'seasonal_fish'],\n      water: ['seaweed', 'tofu'],\n      earth: ['mushroom', 'rice'],\n      air: ['grated_daikon', 'shiso']\n    },\n    // Enhanced properties from expanded elemental characteristics\n    cookingTechniques: ['Steaming', 'Poaching', 'Simmering'],\n    flavorProfiles: ['Subtle', 'Umami', 'Light', 'Fresh'],\n    healthBenefits: ['Hydration', 'Detoxification', 'Emotional balance'],\n    complementaryHerbs: ['Shiso', 'Ginger', 'Wasabi'],\n    idealTimeOfDay: ['Evening', 'Night'],\n    seasonalRecommendation: ['Winter', 'Spring']\n  },\n\n  // Mexican Cuisine\n  'mole_poblano': {\n    elementalProperties: { Fire: 0.5, Earth: 0.4, Air: 0.05, Water: 0.05 },\n    astrologicalProfile: {\n      rulingPlanets: ['Sun', 'Jupiter'],\n      favorableZodiac: ['leo', 'sagittarius'],\n      optimalAspects: ['Sun trine Jupiter'],\n      techniqueEnhancers: safeGetAstrologicalInfluences(cookingMethods?.simmering)\n    },\n    cuisine: culinaryTraditions.mexican,\n    ingredientBalance: {\n      base: ['chocolate', 'chiles'],\n      fire: ['cinnamon', 'cloves'],\n      earth: ['sesame_seeds', 'tortilla'],\n      air: ['achiote', 'herbs']\n    },\n    // Enhanced properties from expanded elemental characteristics\n    cookingTechniques: ['Roasting', 'Simmering', 'Grinding', 'Blending'],\n    flavorProfiles: ['Spicy', 'Complex', 'Rich', 'Bitter', 'Sweet'],\n    healthBenefits: ['Metabolism boost', 'Circulation improvement'],\n    complementaryHerbs: ['Epazote', 'Mexican oregano', 'Cilantro'],\n    idealTimeOfDay: ['Noon', 'Early afternoon'],\n    seasonalRecommendation: ['Summer', 'Early autumn']\n  }\n};\n\n/**\n * Get enhanced elemental recommendations for a recipe\n * @param recipeId The recipe ID to get recommendations for\n * @returns Enhanced elemental recommendations\n */\nexport function getRecipeEnhancedRecommendations(recipeId: string) {\n  const recipe = recipeElementalMappings[recipeId];\n  if (!recipe) return null;\n  \n  // Get base recommendations from the ElementalRecommendationService\n  const baseRecommendation = ElementalRecommendationService.generateRecommendation(recipe.elementalProperties);\n  \n  // Merge with any recipe-specific overrides\n  return {\n    ...baseRecommendation,\n    cookingTechniques: recipe.cookingTechniques || baseRecommendation.cookingTechniques,\n    flavorProfiles: recipe.flavorProfiles || baseRecommendation.flavorProfiles,\n    healthBenefits: recipe.healthBenefits || baseRecommendation.healthBenefits,\n    culinaryHerbs: recipe.complementaryHerbs || baseRecommendation.culinaryHerbs,\n    timeOfDay: recipe.idealTimeOfDay || baseRecommendation.timeOfDay,\n    seasonalBest: recipe.seasonalRecommendation || baseRecommendation.seasonalBest\n  };\n} "],"version":3}