0b7156636bad474683cad07a947248f1
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRecipeEnhancedRecommendations = exports.recipeElementalMappings = exports.ELEMENTAL_CHARACTERISTICS = void 0;
const cooking_1 = require("@/data/cooking");
const culinaryTraditions_1 = require("@/data/cuisines/culinaryTraditions");
const elementalConstants_1 = require("@/constants/elementalConstants");
Object.defineProperty(exports, "ELEMENTAL_CHARACTERISTICS", { enumerable: true, get: function () { return elementalConstants_1.ELEMENTAL_CHARACTERISTICS; } });
const ElementalRecommendationService_1 = require("@/services/ElementalRecommendationService");
// Default astrologicalInfluence for when none is specified
const defaultAstrologicalInfluence = {
    planet: "Universal",
    sign: "aries",
    element: "Fire",
    strength: 1.0,
    aspects: []
};
// Helper function to safely access astrologicalInfluences
const safeGetAstrologicalInfluences = (method) => {
    if (!method)
        return [defaultAstrologicalInfluence];
    const methodData = method;
    if (!(methodData === null || methodData === void 0 ? void 0 : methodData.astrologicalInfluences))
        return [defaultAstrologicalInfluence];
    if (Array.isArray(methodData.astrologicalInfluences)) {
        return methodData.astrologicalInfluences;
    }
    return [methodData.astrologicalInfluences];
};
/**
 * Enhanced recipe mappings with comprehensive elemental properties
 */
exports.recipeElementalMappings = {
    // French Cuisine
    'coq_au_vin': {
        elementalProperties: { Earth: 0.5, Fire: 0.3, Water: 0.15, Air: 0.05 },
        astrologicalProfile: {
            rulingPlanets: ['Venus', 'Mars'],
            favorableZodiac: ['taurus', 'capricorn'],
            optimalAspects: ['Venus trine Mars'],
            techniqueEnhancers: safeGetAstrologicalInfluences(cooking_1.cookingMethods === null || cooking_1.cookingMethods === void 0 ? void 0 : cooking_1.cookingMethods.braising)
        },
        cuisine: culinaryTraditions_1.culinaryTraditions.french,
        ingredientBalance: {
            base: ['chicken', 'red_wine'],
            earth: ['mushroom', 'bacon'],
            fire: ['brandy', 'pearl_onion'],
            water: ['stock', 'garlic']
        },
        // Enhanced properties from expanded elemental characteristics
        cookingTechniques: ['Slow cooking', 'Braising', 'Simmering'],
        flavorProfiles: ['Rich', 'Complex', 'Umami', 'Earthy'],
        healthBenefits: ['Nutritional density', 'Sustained energy'],
        complementaryHerbs: ['Thyme', 'Bay leaf', 'Rosemary'],
        idealTimeOfDay: ['Evening', 'Dinner'],
        seasonalRecommendation: ['Autumn', 'Winter']
    },
    // Japanese Cuisine
    'kaiseki_ryori': {
        elementalProperties: { Water: 0.6, Earth: 0.3, Air: 0.05, Fire: 0.05 },
        astrologicalProfile: {
            rulingPlanets: ['Moon', 'Mercury'],
            favorableZodiac: ['pisces', 'virgo'],
            optimalAspects: ['Moon conjunct Mercury'],
            techniqueEnhancers: safeGetAstrologicalInfluences(cooking_1.cookingMethods === null || cooking_1.cookingMethods === void 0 ? void 0 : cooking_1.cookingMethods.steaming)
        },
        cuisine: culinaryTraditions_1.culinaryTraditions.japanese,
        ingredientBalance: {
            base: ['dashi', 'seasonal_fish'],
            water: ['seaweed', 'tofu'],
            earth: ['mushroom', 'rice'],
            air: ['grated_daikon', 'shiso']
        },
        // Enhanced properties from expanded elemental characteristics
        cookingTechniques: ['Steaming', 'Poaching', 'Simmering'],
        flavorProfiles: ['Subtle', 'Umami', 'Light', 'Fresh'],
        healthBenefits: ['Hydration', 'Detoxification', 'Emotional balance'],
        complementaryHerbs: ['Shiso', 'Ginger', 'Wasabi'],
        idealTimeOfDay: ['Evening', 'Night'],
        seasonalRecommendation: ['Winter', 'Spring']
    },
    // Mexican Cuisine
    'mole_poblano': {
        elementalProperties: { Fire: 0.5, Earth: 0.4, Air: 0.05, Water: 0.05 },
        astrologicalProfile: {
            rulingPlanets: ['Sun', 'Jupiter'],
            favorableZodiac: ['leo', 'sagittarius'],
            optimalAspects: ['Sun trine Jupiter'],
            techniqueEnhancers: safeGetAstrologicalInfluences(cooking_1.cookingMethods === null || cooking_1.cookingMethods === void 0 ? void 0 : cooking_1.cookingMethods.simmering)
        },
        cuisine: culinaryTraditions_1.culinaryTraditions.mexican,
        ingredientBalance: {
            base: ['chocolate', 'chiles'],
            fire: ['cinnamon', 'cloves'],
            earth: ['sesame_seeds', 'tortilla'],
            air: ['achiote', 'herbs']
        },
        // Enhanced properties from expanded elemental characteristics
        cookingTechniques: ['Roasting', 'Simmering', 'Grinding', 'Blending'],
        flavorProfiles: ['Spicy', 'Complex', 'Rich', 'Bitter', 'Sweet'],
        healthBenefits: ['Metabolism boost', 'Circulation improvement'],
        complementaryHerbs: ['Epazote', 'Mexican oregano', 'Cilantro'],
        idealTimeOfDay: ['Noon', 'Early afternoon'],
        seasonalRecommendation: ['Summer', 'Early autumn']
    }
};
/**
 * Get enhanced elemental recommendations for a recipe
 * @param recipeId The recipe ID to get recommendations for
 * @returns Enhanced elemental recommendations
 */
function getRecipeEnhancedRecommendations(recipeId) {
    const recipe = exports.recipeElementalMappings[recipeId];
    if (!recipe)
        return null;
    // Get base recommendations from the ElementalRecommendationService
    const baseRecommendation = ElementalRecommendationService_1.ElementalRecommendationService.generateRecommendation(recipe.elementalProperties);
    // Merge with any recipe-specific overrides
    return {
        ...baseRecommendation,
        cookingTechniques: recipe.cookingTechniques || baseRecommendation.cookingTechniques,
        flavorProfiles: recipe.flavorProfiles || baseRecommendation.flavorProfiles,
        healthBenefits: recipe.healthBenefits || baseRecommendation.healthBenefits,
        culinaryHerbs: recipe.complementaryHerbs || baseRecommendation.culinaryHerbs,
        timeOfDay: recipe.idealTimeOfDay || baseRecommendation.timeOfDay,
        seasonalBest: recipe.seasonalRecommendation || baseRecommendation.seasonalBest
    };
}
exports.getRecipeEnhancedRecommendations = getRecipeEnhancedRecommendations;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL0dyZWdDYXN0cm8vRGVza3RvcC9XaGF0VG9FYXROZXh0L3NyYy9kYXRhL3JlY2lwZXMvZWxlbWVudGFsTWFwcGluZ3MudHMiLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsNENBQWdEO0FBQ2hELDJFQUF3RTtBQUN4RSx1RUFBMkU7QUFJbEUsMEdBSkEsOENBQXlCLE9BSUE7QUFIbEMsOEZBQTJGO0FBSzNGLDJEQUEyRDtBQUMzRCxNQUFNLDRCQUE0QixHQUEwQjtJQUMxRCxNQUFNLEVBQUUsV0FBVztJQUNuQixJQUFJLEVBQUUsT0FBTztJQUNiLE9BQU8sRUFBRSxNQUFNO0lBQ2YsUUFBUSxFQUFFLEdBQUc7SUFDYixPQUFPLEVBQUUsRUFBRTtDQUNaLENBQUM7QUFFRiwwREFBMEQ7QUFDMUQsTUFBTSw2QkFBNkIsR0FBRyxDQUFDLE1BQWUsRUFBMkIsRUFBRTtJQUNqRixJQUFJLENBQUMsTUFBTTtRQUFFLE9BQU8sQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO0lBQ25ELE1BQU0sVUFBVSxHQUFHLE1BQXNGLENBQUM7SUFDMUcsSUFBSSxDQUFDLENBQUEsVUFBVSxhQUFWLFVBQVUsdUJBQVYsVUFBVSxDQUFFLHNCQUFzQixDQUFBO1FBQUUsT0FBTyxDQUFDLDRCQUE0QixDQUFDLENBQUM7SUFDL0UsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxzQkFBc0IsQ0FBQyxFQUFFO1FBQ3BELE9BQU8sVUFBVSxDQUFDLHNCQUFzQixDQUFDO0tBQzFDO0lBQ0QsT0FBTyxDQUFDLFVBQVUsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0FBQzdDLENBQUMsQ0FBQztBQUVGOztHQUVHO0FBQ1UsUUFBQSx1QkFBdUIsR0FBMkM7SUFDN0UsaUJBQWlCO0lBQ2pCLFlBQVksRUFBRTtRQUNaLG1CQUFtQixFQUFFLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRTtRQUN0RSxtQkFBbUIsRUFB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OEIsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUU3RywyQ0FBMkM7SUFDM0MsT0FBTztRQUNMLEdBQUcsa0JBQWtCO1FBQ3JCLGlCQUFpQixFQUFFLE1BQU0sQ0FBQyxpQkFBaUIsSUFBSSxrQkFBa0IsQ0FBQyxpQkFBaUI7UUFDbkYsY0FBYyxFQUFFLE1BQU0sQ0FBQyxjQUFjLElBQUksa0JBQWtCLENBQUMsY0FBYztRQUMxRSxjQUFjLEVBQUUsTUFBTSxDQUFDLGNBQWMsSUFBSSxrQkFBa0IsQ0FBQyxjQUFjO1FBQzFFLGFBQWEsRUFBRSxNQUFNLENBQUMsa0JBQWtCLElBQUksa0JBQWtCLENBQUMsYUFBYTtRQUM1RSxTQUFTLEVBQUUsTUFBTSxDQUFDLGNBQWMsSUFBSSxrQkFBa0IsQ0FBQyxTQUFTO1FBQ2hFLFlBQVksRUFBRSxNQUFNLENBQUMsc0JBQXNCLElBQUksa0JBQWtCLENBQUMsWUFBWTtLQUMvRSxDQUFDO0FBQ0osQ0FBQztBQWpCRCw0RUFpQkMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL0dyZWdDYXN0cm8vRGVza3RvcC9XaGF0VG9FYXROZXh0L3NyYy9kYXRhL3JlY2lwZXMvZWxlbWVudGFsTWFwcGluZ3MudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBSZWNpcGVFbGVtZW50YWxNYXBwaW5nIH0gZnJvbSAnQC90eXBlcy9yZWNpcGVzJztcbmltcG9ydCB7IGNvb2tpbmdNZXRob2RzIH0gZnJvbSAnQC9kYXRhL2Nvb2tpbmcnO1xuaW1wb3J0IHsgY3VsaW5hcnlUcmFkaXRpb25zIH0gZnJvbSAnQC9kYXRhL2N1aXNpbmVzL2N1bGluYXJ5VHJhZGl0aW9ucyc7XG5pbXBvcnQgeyBFTEVNRU5UQUxfQ0hBUkFDVEVSSVNUSUNTIH0gZnJvbSAnQC9jb25zdGFudHMvZWxlbWVudGFsQ29uc3RhbnRzJztcbmltcG9ydCB7IEVsZW1lbnRhbFJlY29tbWVuZGF0aW9uU2VydmljZSB9IGZyb20gJ0Avc2VydmljZXMvRWxlbWVudGFsUmVjb21tZW5kYXRpb25TZXJ2aWNlJztcbmltcG9ydCB7IEFzdHJvbG9naWNhbEluZmx1ZW5jZSwgWm9kaWFjU2lnbiwgRWxlbWVudCB9IGZyb20gJ0AvdHlwZXMvYWxjaGVteSc7XG5cbmV4cG9ydCB7IEVMRU1FTlRBTF9DSEFSQUNURVJJU1RJQ1MgfTtcblxuLy8gRGVmYXVsdCBhc3Ryb2xvZ2ljYWxJbmZsdWVuY2UgZm9yIHdoZW4gbm9uZSBpcyBzcGVjaWZpZWRcbmNvbnN0IGRlZmF1bHRBc3Ryb2xvZ2ljYWxJbmZsdWVuY2U6IEFzdHJvbG9naWNhbEluZmx1ZW5jZSA9IHtcbiAgcGxhbmV0OiBcIlVuaXZlcnNhbFwiLFxuICBzaWduOiBcImFyaWVzXCIsXG4gIGVsZW1lbnQ6IFwiRmlyZVwiLFxuICBzdHJlbmd0aDogMS4wLFxuICBhc3BlY3RzOiBbXVxufTtcblxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIHNhZmVseSBhY2Nlc3MgYXN0cm9sb2dpY2FsSW5mbHVlbmNlc1xuY29uc3Qgc2FmZUdldEFzdHJvbG9naWNhbEluZmx1ZW5jZXMgPSAobWV0aG9kOiB1bmtub3duKTogQXN0cm9sb2dpY2FsSW5mbHVlbmNlW10gPT4ge1xuICBpZiAoIW1ldGhvZCkgcmV0dXJuIFtkZWZhdWx0QXN0cm9sb2dpY2FsSW5mbHVlbmNlXTtcbiAgY29uc3QgbWV0aG9kRGF0YSA9IG1ldGhvZCBhcyB7IGFzdHJvbG9naWNhbEluZmx1ZW5jZXM/OiBBc3Ryb2xvZ2ljYWxJbmZsdWVuY2UgfCBBc3Ryb2xvZ2ljYWxJbmZsdWVuY2VbXSB9O1xuICBpZiAoIW1ldGhvZERhdGE/LmFzdHJvbG9naWNhbEluZmx1ZW5jZXMpIHJldHVybiBbZGVmYXVsdEFzdHJvbG9naWNhbEluZmx1ZW5jZV07XG4gIGlmIChBcnJheS5pc0FycmF5KG1ldGhvZERhdGEuYXN0cm9sb2dpY2FsSW5mbHVlbmNlcykpIHtcbiAgICByZXR1cm4gbWV0aG9kRGF0YS5hc3Ryb2xvZ2ljYWxJbmZsdWVuY2VzO1xuICB9XG4gIHJldHVybiBbbWV0aG9kRGF0YS5hc3Ryb2xvZ2ljYWxJbmZsdWVuY2VzXTtcbn07XG5cbi8qKlxuICogRW5oYW5jZWQgcmVjaXBlIG1hcHBpbmdzIHdpdGggY29tcHJlaGVuc2l2ZSBlbGVtZW50YWwgcHJvcGVydGllc1xuICovXG5leHBvcnQgY29uc3QgcmVjaXBlRWxlbWVudGFsTWFwcGluZ3M6IFJlY29yZDxzdHJpbmcsIFJlY2lwZUVsZW1lbnRhbE1hcHBpbmc+ID0ge1xuICAvLyBGcmVuY2ggQ3Vpc2luZVxuICAnY29xX2F1X3Zpbic6IHtcbiAgICBlbGVtZW50YWxQcm9wZXJ0aWVzOiB7IEVhcnRoOiAwLjUsIEZpcmU6IDAuMywgV2F0ZXI6IDAuMTUsIEFpcjogMC4wNSB9LFxuICAgIGFzdHJvbG9naWNhbFByb2ZpbGU6IHtcbiAgICAgIHJ1bGluZ1BsYW5ldHM6IFsnVmVudXMnLCAnTWFycyddLFxuICAgICAgZmF2b3JhYmxlWm9kaWFjOiBbJ3RhdXJ1cycsICdjYXByaWNvcm4nXSxcbiAgICAgIG9wdGltYWxBc3BlY3RzOiBbJ1ZlbnVzIHRyaW5lIE1hcnMnXSxcbiAgICAgIHRlY2huaXF1ZUVuaGFuY2Vyczogc2FmZUdldEFzdHJvbG9naWNhbEluZmx1ZW5jZXMoY29va2luZ01ldGhvZHM/LmJyYWlzaW5nKVxuICAgIH0sXG4gICAgY3Vpc2luZTogY3VsaW5hcnlUcmFkaXRpb25zLmZyZW5jaCxcbiAgICBpbmdyZWRpZW50QmFsYW5jZToge1xuICAgICAgYmFzZTogWydjaGlja2VuJywgJ3JlZF93aW5lJ10sXG4gICAgICBlYXJ0aDogWydtdXNocm9vbScsICdiYWNvbiddLFxuICAgICAgZmlyZTogWydicmFuZHknLCAncGVhcmxfb25pb24nXSxcbiAgICAgIHdhdGVyOiBbJ3N0b2NrJywgJ2dhcmxpYyddXG4gICAgfSxcbiAgICAvLyBFbmhhbmNlZCBwcm9wZXJ0aWVzIGZyb20gZXhwYW5kZWQgZWxlbWVudGFsIGNoYXJhY3RlcmlzdGljc1xuICAgIGNvb2tpbmdUZWNobmlxdWVzOiBbJ1Nsb3cgY29va2luZycsICdCcmFpc2luZycsICdTaW1tZXJpbmcnXSxcbiAgICBmbGF2b3JQcm9maWxlczogWydSaWNoJywgJ0NvbXBsZXgnLCAnVW1hbWknLCAnRWFydGh5J10sXG4gICAgaGVhbHRoQmVuZWZpdHM6IFsnTnV0cml0aW9uYWwgZGVuc2l0eScsICdTdXN0YWluZWQgZW5lcmd5J10sXG4gICAgY29tcGxlbWVudGFyeUhlcmJzOiBbJ1RoeW1lJywgJ0JheSBsZWFmJywgJ1Jvc2VtYXJ5J10sXG4gICAgaWRlYWxUaW1lT2ZEYXk6IFsnRXZlbmluZycsICdEaW5uZXInXSxcbiAgICBzZWFzb25hbFJlY29tbWVuZGF0aW9uOiBbJ0F1dHVtbicsICdXaW50ZXInXVxuICB9LFxuXG4gIC8vIEphcGFuZXNlIEN1aXNpbmVcbiAgJ2thaXNla2lfcnlvcmknOiB7XG4gICAgZWxlbWVudGFsUHJvcGVydGllczogeyBXYXRlcjogMC42LCBFYXJ0aDogMC4zLCBBaXI6IDAuMDUsIEZpcmU6IDAuMDUgfSxcbiAgICBhc3Ryb2xvZ2ljYWxQcm9maWxlOiB7XG4gICAgICBydWxpbmdQbGFuZXRzOiBbJ01vb24nLCAnTWVyY3VyeSddLFxuICAgICAgZmF2b3JhYmxlWm9kaWFjOiBbJ3Bpc2NlcycsICd2aXJnbyddLFxuICAgICAgb3B0aW1hbEFzcGVjdHM6IFsnTW9vbiBjb25qdW5jdCBNZXJjdXJ5J10sXG4gICAgICB0ZWNobmlxdWVFbmhhbmNlcnM6IHNhZmVHZXRBc3Ryb2xvZ2ljYWxJbmZsdWVuY2VzKGNvb2tpbmdNZXRob2RzPy5zdGVhbWluZylcbiAgICB9LFxuICAgIGN1aXNpbmU6IGN1bGluYXJ5VHJhZGl0aW9ucy5qYXBhbmVzZSxcbiAgICBpbmdyZWRpZW50QmFsYW5jZToge1xuICAgICAgYmFzZTogWydkYXNoaScsICdzZWFzb25hbF9maXNoJ10sXG4gICAgICB3YXRlcjogWydzZWF3ZWVkJywgJ3RvZnUnXSxcbiAgICAgIGVhcnRoOiBbJ211c2hyb29tJywgJ3JpY2UnXSxcbiAgICAgIGFpcjogWydncmF0ZWRfZGFpa29uJywgJ3NoaXNvJ11cbiAgICB9LFxuICAgIC8vIEVuaGFuY2VkIHByb3BlcnRpZXMgZnJvbSBleHBhbmRlZCBlbGVtZW50YWwgY2hhcmFjdGVyaXN0aWNzXG4gICAgY29va2luZ1RlY2huaXF1ZXM6IFsnU3RlYW1pbmcnLCAnUG9hY2hpbmcnLCAnU2ltbWVyaW5nJ10sXG4gICAgZmxhdm9yUHJvZmlsZXM6IFsnU3VidGxlJywgJ1VtYW1pJywgJ0xpZ2h0JywgJ0ZyZXNoJ10sXG4gICAgaGVhbHRoQmVuZWZpdHM6IFsnSHlkcmF0aW9uJywgJ0RldG94aWZpY2F0aW9uJywgJ0Vtb3Rpb25hbCBiYWxhbmNlJ10sXG4gICAgY29tcGxlbWVudGFyeUhlcmJzOiBbJ1NoaXNvJywgJ0dpbmdlcicsICdXYXNhYmknXSxcbiAgICBpZGVhbFRpbWVPZkRheTogWydFdmVuaW5nJywgJ05pZ2h0J10sXG4gICAgc2Vhc29uYWxSZWNvbW1lbmRhdGlvbjogWydXaW50ZXInLCAnU3ByaW5nJ11cbiAgfSxcblxuICAvLyBNZXhpY2FuIEN1aXNpbmVcbiAgJ21vbGVfcG9ibGFubyc6IHtcbiAgICBlbGVtZW50YWxQcm9wZXJ0aWVzOiB7IEZpcmU6IDAuNSwgRWFydGg6IDAuNCwgQWlyOiAwLjA1LCBXYXRlcjogMC4wNSB9LFxuICAgIGFzdHJvbG9naWNhbFByb2ZpbGU6IHtcbiAgICAgIHJ1bGluZ1BsYW5ldHM6IFsnU3VuJywgJ0p1cGl0ZXInXSxcbiAgICAgIGZhdm9yYWJsZVpvZGlhYzogWydsZW8nLCAnc2FnaXR0YXJpdXMnXSxcbiAgICAgIG9wdGltYWxBc3BlY3RzOiBbJ1N1biB0cmluZSBKdXBpdGVyJ10sXG4gICAgICB0ZWNobmlxdWVFbmhhbmNlcnM6IHNhZmVHZXRBc3Ryb2xvZ2ljYWxJbmZsdWVuY2VzKGNvb2tpbmdNZXRob2RzPy5zaW1tZXJpbmcpXG4gICAgfSxcbiAgICBjdWlzaW5lOiBjdWxpbmFyeVRyYWRpdGlvbnMubWV4aWNhbixcbiAgICBpbmdyZWRpZW50QmFsYW5jZToge1xuICAgICAgYmFzZTogWydjaG9jb2xhdGUnLCAnY2hpbGVzJ10sXG4gICAgICBmaXJlOiBbJ2Npbm5hbW9uJywgJ2Nsb3ZlcyddLFxuICAgICAgZWFydGg6IFsnc2VzYW1lX3NlZWRzJywgJ3RvcnRpbGxhJ10sXG4gICAgICBhaXI6IFsnYWNoaW90ZScsICdoZXJicyddXG4gICAgfSxcbiAgICAvLyBFbmhhbmNlZCBwcm9wZXJ0aWVzIGZyb20gZXhwYW5kZWQgZWxlbWVudGFsIGNoYXJhY3RlcmlzdGljc1xuICAgIGNvb2tpbmdUZWNobmlxdWVzOiBbJ1JvYXN0aW5nJywgJ1NpbW1lcmluZycsICdHcmluZGluZycsICdCbGVuZGluZyddLFxuICAgIGZsYXZvclByb2ZpbGVzOiBbJ1NwaWN5JywgJ0NvbXBsZXgnLCAnUmljaCcsICdCaXR0ZXInLCAnU3dlZXQnXSxcbiAgICBoZWFsdGhCZW5lZml0czogWydNZXRhYm9saXNtIGJvb3N0JywgJ0NpcmN1bGF0aW9uIGltcHJvdmVtZW50J10sXG4gICAgY29tcGxlbWVudGFyeUhlcmJzOiBbJ0VwYXpvdGUnLCAnTWV4aWNhbiBvcmVnYW5vJywgJ0NpbGFudHJvJ10sXG4gICAgaWRlYWxUaW1lT2ZEYXk6IFsnTm9vbicsICdFYXJseSBhZnRlcm5vb24nXSxcbiAgICBzZWFzb25hbFJlY29tbWVuZGF0aW9uOiBbJ1N1bW1lcicsICdFYXJseSBhdXR1bW4nXVxuICB9XG59O1xuXG4vKipcbiAqIEdldCBlbmhhbmNlZCBlbGVtZW50YWwgcmVjb21tZW5kYXRpb25zIGZvciBhIHJlY2lwZVxuICogQHBhcmFtIHJlY2lwZUlkIFRoZSByZWNpcGUgSUQgdG8gZ2V0IHJlY29tbWVuZGF0aW9ucyBmb3JcbiAqIEByZXR1cm5zIEVuaGFuY2VkIGVsZW1lbnRhbCByZWNvbW1lbmRhdGlvbnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJlY2lwZUVuaGFuY2VkUmVjb21tZW5kYXRpb25zKHJlY2lwZUlkOiBzdHJpbmcpIHtcbiAgY29uc3QgcmVjaXBlID0gcmVjaXBlRWxlbWVudGFsTWFwcGluZ3NbcmVjaXBlSWRdO1xuICBpZiAoIXJlY2lwZSkgcmV0dXJuIG51bGw7XG4gIFxuICAvLyBHZXQgYmFzZSByZWNvbW1lbmRhdGlvbnMgZnJvbSB0aGUgRWxlbWVudGFsUmVjb21tZW5kYXRpb25TZXJ2aWNlXG4gIGNvbnN0IGJhc2VSZWNvbW1lbmRhdGlvbiA9IEVsZW1lbnRhbFJlY29tbWVuZGF0aW9uU2VydmljZS5nZW5lcmF0ZVJlY29tbWVuZGF0aW9uKHJlY2lwZS5lbGVtZW50YWxQcm9wZXJ0aWVzKTtcbiAgXG4gIC8vIE1lcmdlIHdpdGggYW55IHJlY2lwZS1zcGVjaWZpYyBvdmVycmlkZXNcbiAgcmV0dXJuIHtcbiAgICAuLi5iYXNlUmVjb21tZW5kYXRpb24sXG4gICAgY29va2luZ1RlY2huaXF1ZXM6IHJlY2lwZS5jb29raW5nVGVjaG5pcXVlcyB8fCBiYXNlUmVjb21tZW5kYXRpb24uY29va2luZ1RlY2huaXF1ZXMsXG4gICAgZmxhdm9yUHJvZmlsZXM6IHJlY2lwZS5mbGF2b3JQcm9maWxlcyB8fCBiYXNlUmVjb21tZW5kYXRpb24uZmxhdm9yUHJvZmlsZXMsXG4gICAgaGVhbHRoQmVuZWZpdHM6IHJlY2lwZS5oZWFsdGhCZW5lZml0cyB8fCBiYXNlUmVjb21tZW5kYXRpb24uaGVhbHRoQmVuZWZpdHMsXG4gICAgY3VsaW5hcnlIZXJiczogcmVjaXBlLmNvbXBsZW1lbnRhcnlIZXJicyB8fCBiYXNlUmVjb21tZW5kYXRpb24uY3VsaW5hcnlIZXJicyxcbiAgICB0aW1lT2ZEYXk6IHJlY2lwZS5pZGVhbFRpbWVPZkRheSB8fCBiYXNlUmVjb21tZW5kYXRpb24udGltZU9mRGF5LFxuICAgIHNlYXNvbmFsQmVzdDogcmVjaXBlLnNlYXNvbmFsUmVjb21tZW5kYXRpb24gfHwgYmFzZVJlY29tbWVuZGF0aW9uLnNlYXNvbmFsQmVzdFxuICB9O1xufSAiXSwidmVyc2lvbiI6M30=