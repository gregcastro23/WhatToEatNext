df6d3828922711e2b82bfd91043e8260
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const AlchemicalContext_1 = require("./src/contexts/AlchemicalContext");
const ErrorBoundary_1 = __importDefault(require("./src/components/error-boundaries/ErrorBoundary"));
const MainPageLayout_1 = __importDefault(require("./src/components/layout/MainPageLayout"));
const logger_1 = require("./src/utils/logger");
// Loading fallback component for the main page
const MainPageLoadingFallback = () => ((0, jsx_runtime_1.jsx)("div", { className: 'min-h-screen bg-gradient-to-b from-indigo-50 via-blue-50 to-gray-100 flex items-center justify-center', children: (0, jsx_runtime_1.jsxs)("div", { className: 'text-center', children: [(0, jsx_runtime_1.jsx)("div", { className: 'animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto mb-4' }), (0, jsx_runtime_1.jsx)("h2", { className: 'text-xl font-semibold text-indigo-900 mb-2', children: "Loading Astrological Data" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-indigo-600', children: "Calculating current celestial energies..." })] }) }));
// Global error fallback for the entire app
const AppErrorFallback = ({ error, onRetry, }) => ((0, jsx_runtime_1.jsx)("div", { className: 'min-h-screen bg-red-50 flex items-center justify-center p-4', children: (0, jsx_runtime_1.jsxs)("div", { className: 'bg-white rounded-lg shadow-lg p-8 max-w-md w-full text-center', children: [(0, jsx_runtime_1.jsx)("div", { className: 'text-red-500 mb-4', children: (0, jsx_runtime_1.jsx)("svg", { className: 'h-12 w-12 mx-auto', fill: 'none', viewBox: '0 0 24 24', stroke: 'currentColor', children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: 'round', strokeLinejoin: 'round', strokeWidth: 2, d: 'M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 16.5c-.77.833.192 2.5 1.732 2.5z' }) }) }), (0, jsx_runtime_1.jsx)("h1", { className: 'text-2xl font-bold text-gray-900 mb-4', children: "Application Error" }), (0, jsx_runtime_1.jsx)("p", { className: 'text-gray-600 mb-6', children: "We encountered an unexpected error while loading the application. This has been logged and we're working to fix it." }), (0, jsx_runtime_1.jsxs)("div", { className: 'space-y-3', children: [(0, jsx_runtime_1.jsx)("button", { onClick: onRetry, className: 'w-full bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700 transition-colors', children: "Try Again" }), (0, jsx_runtime_1.jsx)("button", { onClick: () => window.location.reload(), className: 'w-full bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700 transition-colors', children: "Reload Page" })] }), process.env.NODE_ENV === 'development' && ((0, jsx_runtime_1.jsxs)("details", { className: 'mt-4 text-left', children: [(0, jsx_runtime_1.jsx)("summary", { className: 'cursor-pointer text-red-600 font-medium', children: "Error Details (Development)" }), (0, jsx_runtime_1.jsxs)("pre", { className: 'mt-2 text-xs bg-red-100 p-2 rounded overflow-auto', children: [error.message, '\n\n', error.stack] })] }))] }) }));
function App() {
    // Log app initialization
    react_1.default.useEffect(() => {
        logger_1.logger.info('App initialized with MainPageLayout integration');
    }, []);
    return ((0, jsx_runtime_1.jsx)(ErrorBoundary_1.default, { fallback: error => ((0, jsx_runtime_1.jsx)(AppErrorFallback, { error: error, onRetry: () => window.location.reload() })), onError: (error, errorInfo) => {
            logger_1.logger.error('Global app error:', {
                error: error.message,
                stack: error.stack,
                componentStack: errorInfo.componentStack,
            });
        }, children: (0, jsx_runtime_1.jsx)(AlchemicalContext_1.AlchemicalProvider, { children: (0, jsx_runtime_1.jsx)(react_1.Suspense, { fallback: (0, jsx_runtime_1.jsx)(MainPageLoadingFallback, {}), children: (0, jsx_runtime_1.jsx)(MainPageLayout_1.default, { debugMode: process.env.NODE_ENV === 'development', loading: false, onSectionNavigate: sectionId => {
                        logger_1.logger.debug('Section navigation:', sectionId);
                    } }) }) }) }));
}
exports.default = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFFLHVCQUFDLHVCQUF1QixLQUFHLFlBQzdDLHVCQUFDLHdCQUFjLElBQ2IsU0FBUyxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxLQUFLLGFBQWEsRUFDakQsT0FBTyxFQUFFLEtBQUssRUFDZCxpQkFBaUIsRUFBRSxTQUFTLENBQUMsRUFBRTt3QkFDN0IsZUFBTSxDQUFDLEtBQUssQ0FBQyxxQkFBcUIsRUFBRSxTQUFTLENBQUMsQ0FBQztvQkFDakQsQ0FBQyxHQUNELEdBQ08sR0FDUSxHQUNQLENBQ2pCLENBQUM7QUFDSixDQUFDO0FBRUQsa0JBQWUsR0FBRyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9HcmVnQ2FzdHJvL0Rlc2t0b3AvV2hhdFRvRWF0TmV4dC9BcHAudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBTdXNwZW5zZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEFsY2hlbWljYWxQcm92aWRlciB9IGZyb20gJy4vc3JjL2NvbnRleHRzL0FsY2hlbWljYWxDb250ZXh0JztcbmltcG9ydCBFcnJvckJvdW5kYXJ5IGZyb20gJy4vc3JjL2NvbXBvbmVudHMvZXJyb3ItYm91bmRhcmllcy9FcnJvckJvdW5kYXJ5JztcbmltcG9ydCBNYWluUGFnZUxheW91dCBmcm9tICcuL3NyYy9jb21wb25lbnRzL2xheW91dC9NYWluUGFnZUxheW91dCc7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcuL3NyYy91dGlscy9sb2dnZXInO1xuXG4vLyBMb2FkaW5nIGZhbGxiYWNrIGNvbXBvbmVudCBmb3IgdGhlIG1haW4gcGFnZVxuY29uc3QgTWFpblBhZ2VMb2FkaW5nRmFsbGJhY2s6IFJlYWN0LkZDID0gKCkgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT0nbWluLWgtc2NyZWVuIGJnLWdyYWRpZW50LXRvLWIgZnJvbS1pbmRpZ28tNTAgdmlhLWJsdWUtNTAgdG8tZ3JheS0xMDAgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXInPlxuICAgIDxkaXYgY2xhc3NOYW1lPSd0ZXh0LWNlbnRlcic+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nYW5pbWF0ZS1zcGluIHJvdW5kZWQtZnVsbCBoLTEyIHctMTIgYm9yZGVyLWItMiBib3JkZXItaW5kaWdvLTYwMCBteC1hdXRvIG1iLTQnPjwvZGl2PlxuICAgICAgPGgyIGNsYXNzTmFtZT0ndGV4dC14bCBmb250LXNlbWlib2xkIHRleHQtaW5kaWdvLTkwMCBtYi0yJz5cbiAgICAgICAgTG9hZGluZyBBc3Ryb2xvZ2ljYWwgRGF0YVxuICAgICAgPC9oMj5cbiAgICAgIDxwIGNsYXNzTmFtZT0ndGV4dC1pbmRpZ28tNjAwJz5cbiAgICAgICAgQ2FsY3VsYXRpbmcgY3VycmVudCBjZWxlc3RpYWwgZW5lcmdpZXMuLi5cbiAgICAgIDwvcD5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4pO1xuXG4vLyBHbG9iYWwgZXJyb3IgZmFsbGJhY2sgZm9yIHRoZSBlbnRpcmUgYXBwXG5jb25zdCBBcHBFcnJvckZhbGxiYWNrOiBSZWFjdC5GQzx7IGVycm9yOiBFcnJvcjsgb25SZXRyeTogKCkgPT4gdm9pZCB9PiA9ICh7XG4gIGVycm9yLFxuICBvblJldHJ5LFxufSkgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT0nbWluLWgtc2NyZWVuIGJnLXJlZC01MCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBwLTQnPlxuICAgIDxkaXYgY2xhc3NOYW1lPSdiZy13aGl0ZSByb3VuZGVkLWxnIHNoYWRvdy1sZyBwLTggbWF4LXctbWQgdy1mdWxsIHRleHQtY2VudGVyJz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPSd0ZXh0LXJlZC01MDAgbWItNCc+XG4gICAgICAgIDxzdmdcbiAgICAgICAgICBjbGFzc05hbWU9J2gtMTIgdy0xMiBteC1hdXRvJ1xuICAgICAgICAgIGZpbGw9J25vbmUnXG4gICAgICAgICAgdmlld0JveD0nMCAwIDI0IDI0J1xuICAgICAgICAgIHN0cm9rZT0nY3VycmVudENvbG9yJ1xuICAgICAgICA+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIHN0cm9rZUxpbmVjYXA9J3JvdW5kJ1xuICAgICAgICAgICAgc3Ryb2tlTGluZWpvaW49J3JvdW5kJ1xuICAgICAgICAgICAgc3Ryb2tlV2lkdGg9ezJ9XG4gICAgICAgICAgICBkPSdNMTIgOXYybTAgNGguMDFtLTYuOTM4IDRoMTMuODU2YzEuNTQgMCAyLjUwMi0xLjY2NyAxLjczMi0yLjVMMTMuNzMyIDRjLS43Ny0uODMzLTEuNzMyLS44MzMtMi41IDBMNC4yNjggMTYuNWMtLjc3LjgzMy4xOTIgMi41IDEuNzMyIDIuNXonXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxoMSBjbGFzc05hbWU9J3RleHQtMnhsIGZvbnQtYm9sZCB0ZXh0LWdyYXktOTAwIG1iLTQnPlxuICAgICAgICBBcHBsaWNhdGlvbiBFcnJvclxuICAgICAgPC9oMT5cbiAgICAgIDxwIGNsYXNzTmFtZT0ndGV4dC1ncmF5LTYwMCBtYi02Jz5cbiAgICAgICAgV2UgZW5jb3VudGVyZWQgYW4gdW5leHBlY3RlZCBlcnJvciB3aGlsZSBsb2FkaW5nIHRoZSBhcHBsaWNhdGlvbi4gVGhpc1xuICAgICAgICBoYXMgYmVlbiBsb2dnZWQgYW5kIHdlJ3JlIHdvcmtpbmcgdG8gZml4IGl0LlxuICAgICAgPC9wPlxuICAgICAgPGRpdiBjbGFzc05hbWU9J3NwYWNlLXktMyc+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBvbkNsaWNrPXtvblJldHJ5fVxuICAgICAgICAgIGNsYXNzTmFtZT0ndy1mdWxsIGJnLWluZGlnby02MDAgdGV4dC13aGl0ZSBweC00IHB5LTIgcm91bmRlZCBob3ZlcjpiZy1pbmRpZ28tNzAwIHRyYW5zaXRpb24tY29sb3JzJ1xuICAgICAgICA+XG4gICAgICAgICAgVHJ5IEFnYWluXG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgb25DbGljaz17KCkgPT4gd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpfVxuICAgICAgICAgIGNsYXNzTmFtZT0ndy1mdWxsIGJnLWdyYXktNjAwIHRleHQtd2hpdGUgcHgtNCBweS0yIHJvdW5kZWQgaG92ZXI6YmctZ3JheS03MDAgdHJhbnNpdGlvbi1jb2xvcnMnXG4gICAgICAgID5cbiAgICAgICAgICBSZWxvYWQgUGFnZVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgICAge3Byb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnICYmIChcbiAgICAgICAgPGRldGFpbHMgY2xhc3NOYW1lPSdtdC00IHRleHQtbGVmdCc+XG4gICAgICAgICAgPHN1bW1hcnkgY2xhc3NOYW1lPSdjdXJzb3ItcG9pbnRlciB0ZXh0LXJlZC02MDAgZm9udC1tZWRpdW0nPlxuICAgICAgICAgICAgRXJyb3IgRGV0YWlscyAoRGV2ZWxvcG1lbnQpXG4gICAgICAgICAgPC9zdW1tYXJ5PlxuICAgICAgICAgIDxwcmUgY2xhc3NOYW1lPSdtdC0yIHRleHQteHMgYmctcmVkLTEwMCBwLTIgcm91bmRlZCBvdmVyZmxvdy1hdXRvJz5cbiAgICAgICAgICAgIHtlcnJvci5tZXNzYWdlfVxuICAgICAgICAgICAgeydcXG5cXG4nfVxuICAgICAgICAgICAge2Vycm9yLnN0YWNrfVxuICAgICAgICAgIDwvcHJlPlxuICAgICAgICA8L2RldGFpbHM+XG4gICAgICApfVxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbik7XG5cbmZ1bmN0aW9uIEFwcCgpIHtcbiAgLy8gTG9nIGFwcCBpbml0aWFsaXphdGlvblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxvZ2dlci5pbmZvKCdBcHAgaW5pdGlhbGl6ZWQgd2l0aCBNYWluUGFnZUxheW91dCBpbnRlZ3JhdGlvbicpO1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8RXJyb3JCb3VuZGFyeVxuICAgICAgZmFsbGJhY2s9e2Vycm9yID0+IChcbiAgICAgICAgPEFwcEVycm9yRmFsbGJhY2tcbiAgICAgICAgICBlcnJvcj17ZXJyb3J9XG4gICAgICAgICAgb25SZXRyeT17KCkgPT4gd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpfVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICAgIG9uRXJyb3I9eyhlcnJvciwgZXJyb3JJbmZvKSA9PiB7XG4gICAgICAgIGxvZ2dlci5lcnJvcignR2xvYmFsIGFwcCBlcnJvcjonLCB7XG4gICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgICAgc3RhY2s6IGVycm9yLnN0YWNrLFxuICAgICAgICAgIGNvbXBvbmVudFN0YWNrOiBlcnJvckluZm8uY29tcG9uZW50U3RhY2ssXG4gICAgICAgIH0pO1xuICAgICAgfX1cbiAgICA+XG4gICAgICA8QWxjaGVtaWNhbFByb3ZpZGVyPlxuICAgICAgICA8U3VzcGVuc2UgZmFsbGJhY2s9ezxNYWluUGFnZUxvYWRpbmdGYWxsYmFjayAvPn0+XG4gICAgICAgICAgPE1haW5QYWdlTGF5b3V0XG4gICAgICAgICAgICBkZWJ1Z01vZGU9e3Byb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnfVxuICAgICAgICAgICAgbG9hZGluZz17ZmFsc2V9XG4gICAgICAgICAgICBvblNlY3Rpb25OYXZpZ2F0ZT17c2VjdGlvbklkID0+IHtcbiAgICAgICAgICAgICAgbG9nZ2VyLmRlYnVnKCdTZWN0aW9uIG5hdmlnYXRpb246Jywgc2VjdGlvbklkKTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9TdXNwZW5zZT5cbiAgICAgIDwvQWxjaGVtaWNhbFByb3ZpZGVyPlxuICAgIDwvRXJyb3JCb3VuZGFyeT5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgQXBwO1xuIl0sInZlcnNpb24iOjN9