{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/__tests__/setupTests.tsx","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/__tests__/setupTests.tsx"],"sourcesContent":["import '@testing-library/jest-dom';\nimport React from 'react';\n\n// Mock IntersectionObserver\nglobal.IntersectionObserver = class IntersectionObserver {\n  constructor() {}\n  disconnect() {}\n  observe() {}\n  unobserve() {}\n};\n\n// Mock ResizeObserver\nglobal.ResizeObserver = class ResizeObserver {\n  constructor() {}\n  disconnect() {}\n  observe() {}\n  unobserve() {}\n};\n\n// Mock matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(), // deprecated\n    removeListener: jest.fn(), // deprecated\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n});\n\n// Mock scrollTo\nObject.defineProperty(window, 'scrollTo', {\n  value: jest.fn(),\n  writable: true\n});\n\n// Mock localStorage\nconst localStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n};\nObject.defineProperty(window, 'localStorage', {\n  value: localStorageMock\n});\n\n// Mock sessionStorage\nconst sessionStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n};\nObject.defineProperty(window, 'sessionStorage', {\n  value: sessionStorageMock\n});\n\n// Mock requestAnimationFrame\nglobal.requestAnimationFrame = jest.fn(cb => setTimeout(cb, 0));\nglobal.cancelAnimationFrame = jest.fn();\n\n// Mock performance.now\nObject.defineProperty(window, 'performance', {\n  value: {\n    now: jest.fn(() => Date.now()),\n    mark: jest.fn(),\n    measure: jest.fn(),\n    getEntriesByName: jest.fn(() => []),\n    getEntriesByType: jest.fn(() => []),\n  },\n  writable: true\n});\n\n// Suppress console warnings for tests\nconst originalConsoleWarn = console.warn;\nconst originalConsoleError = console.error;\n\nbeforeEach(() => {\n  // Reset mocks before each test\n  jest.clearAllMocks();\n  localStorageMock.getItem.mockClear();\n  localStorageMock.setItem.mockClear();\n  sessionStorageMock.getItem.mockClear();\n  sessionStorageMock.setItem.mockClear();\n});\n\n// Suppress specific warnings that are expected in tests\nconsole.warn = (...args) => {\n  const message = args[0];\n  if (\n    typeof message === 'string' && \n    (message.includes('React.createFactory') ||\n     message.includes('componentWillReceiveProps') ||\n     message.includes('componentWillUpdate'))\n  ) {\n    return;\n  }\n  originalConsoleWarn.apply(console, args);\n};\n\nconsole.error = (...args) => {\n  const message = args[0];\n  if (\n    typeof message === 'string' && \n    (message.includes('Warning: ReactDOM.render') ||\n     message.includes('Warning: componentWillReceiveProps') ||\n     message.includes('The above error occurred'))\n  ) {\n    return;\n  }\n  originalConsoleError.apply(console, args);\n};\n\n// Global test utilities\nglobal.testUtils = {\n  // Helper to wait for async operations\n  waitForAsync: (ms = 0) => new Promise(resolve => setTimeout(resolve, ms)),\n  \n  // Helper to create mock functions with specific return values\n  createMockFunction: (returnValue?: any) => jest.fn(() => returnValue),\n  \n  // Helper to create mock component\n  createMockComponent: (name: string, testId?: string) => {\n    const MockComponent = (props: any) => (\n      <div data-testid={testId || name.toLowerCase()} {...props}>\n        Mock {name}\n      </div>\n    );\n    MockComponent.displayName = `Mock${name}`;\n    return MockComponent;\n  },\n  \n  // Memory management utilities\n  checkMemory: () => {\n    if (global.getMemoryUsage) {\n      return global.getMemoryUsage();\n    }\n    const usage = process.memoryUsage();\n    return {\n      heapUsed: `${(usage.heapUsed / 1024 / 1024).toFixed(2)}MB`,\n      heapTotal: `${(usage.heapTotal / 1024 / 1024).toFixed(2)}MB`,\n      external: `${(usage.external / 1024 / 1024).toFixed(2)}MB`,\n      arrayBuffers: `${(usage.arrayBuffers / 1024 / 1024).toFixed(2)}MB`\n    };\n  },\n  \n  // Force cleanup for memory-intensive tests\n  cleanupMemory: () => {\n    if (global.cleanupTestMemory) {\n      return global.cleanupTestMemory();\n    }\n    \n    // Fallback cleanup\n    jest.clearAllMocks();\n    jest.resetModules();\n    \n    if (global.forceGC) {\n      global.forceGC();\n    }\n    \n    return null;\n  }\n};\n\n// Extend Jest matchers\nexpect.extend({\n  toBeWithinRange(received: number, floor: number, ceiling: number) {\n    const pass = received >= floor && received <= ceiling;\n    if (pass) {\n      return {\n        message: () =>\n          `expected ${received} not to be within range ${floor} - ${ceiling}`,\n        pass: true,\n      };\n    } else {\n      return {\n        message: () =>\n          `expected ${received} to be within range ${floor} - ${ceiling}`,\n        pass: false,\n      };\n    }\n  },\n});\n\n// Declare custom matcher types\ndeclare global {\n  namespace jest {\n    interface Matchers<R> {\n      toBeWithinRange(floor: number, ceiling: number): R;\n    }\n  }\n  \n  var testUtils: {\n    waitForAsync: (ms?: number) => Promise<void>;\n    createMockFunction: (returnValue?: any) => jest.Mock;\n    createMockComponent: (name: string, testId?: string) => React.ComponentType<any>;\n    checkMemory: () => {\n      heapUsed: string;\n      heapTotal: string;\n      external: string;\n      arrayBuffers: string;\n    };\n    cleanupMemory: () => any;\n  };\n}\n\nexport {};"],"version":3}