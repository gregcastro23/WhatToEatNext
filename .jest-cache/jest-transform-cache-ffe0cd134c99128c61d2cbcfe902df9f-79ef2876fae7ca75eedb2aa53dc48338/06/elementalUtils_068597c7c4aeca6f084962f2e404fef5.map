{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/utils/elemental/elementalUtils.ts","mappings":";;;AAEA;;GAEG;AACH,SAAgB,yBAAyB,CACvC,KAAoC;IACb,OAAO,EAAE,IAAI,EAAE,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC;AAC7I,CAAC;AAHD,8DAGC;AAED;;GAEG;AACH,SAAgB,qBAAqB,CAAC,GAAY;IAChD,IAAI,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ;QAAE,OAAO,KAAK,CAAC;IAClD,OAAO,CACL,OAAQ,GAA2B,CAAC,IAAI,KAAK,QAAQ;QACrD,OAAQ,GAA2B,CAAC,KAAK,KAAK,QAAQ;QACtD,OAAQ,GAA2B,CAAC,KAAK,KAAK,QAAQ;QACtD,OAAQ,GAA2B,CAAC,GAAG,KAAK,QAAQ,CACrD,CAAC;AACJ,CAAC;AARD,sDAQC;AAED;;GAEG;AACH,SAAgB,oBAAoB,CAClC,KAA+C,EAC/C,OAAkC;IAElC,IAAI,CAAC,KAAK;QAAE,OAAO,CAAC,CAAC;IACrB,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC7B,CAAC;AAND,oDAMC;AAED;;GAEG;AACH,SAAgB,wBAAwB,CACtC,IAA8C,EAC9C,QAAkD;IAC3B,OAAO,yBAAyB,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACrR,CAAC;AAJD,4DAIC;AAED;;GAEG;AACH,SAAgB,wBAAwB,CACtC,KAA+C,EAC/C,MAAc;IACS,IAAI,CAAC,KAAK;QAAE,OAAO,yBAAyB,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;IAE7G,OAAO,yBAAyB,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC;AACzL,CAAC;AAND,4DAMC;AAED;;;;;;;;;;GAUG;AACH,SAAgB,+BAA+B,CAC7C,MAAgD,EAChD,MAAgD;IAEhD,6DAA6D;IAC7D,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM;QAAE,OAAO,GAAG,CAAC;IAEnC,6CAA6C;IAC7C,MAAM,WAAW,GAAG,yBAAyB,CAAC,MAAM,CAAC,CAAC;IACtD,MAAM,WAAW,GAAG,yBAAyB,CAAC,MAAM,CAAC,CAAC;IAEtD,iFAAiF;IACjF,MAAM,mBAAmB,GAAG,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;QACjF,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;QACtD,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;QACtD,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;KACrD,CAAC;IAEF,yCAAyC;IACzC,MAAM,cAAc,GAAG,kBAAkB,CAAC,WAAW,CAAC,CAAC;IACvD,MAAM,cAAc,GAAG,kBAAkB,CAAC,WAAW,CAAC,CAAC;IAEvD,2DAA2D;IAC3D,MAAM,iBAAiB,GAAG,mBAAmB,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC;IAErF,uDAAuD;IACvD,IAAI,WAAW,GAAG,CAAC,CAAC;IACpB,IAAI,WAAW,GAAG,CAAC,CAAC;IAEpB,MAAM,QAAQ,GAAqC,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;IAErF,KAAK,MAAM,aAAa,IAAI,QAAQ,EAAE;QACpC,MAAM,WAAW,GAAG,WAAW,CAAC,aAAa,CAAC,CAAC;QAC/C,IAAI,WAAW,IAAI,CAAC;YAAE,SAAS,CAAC,iCAAiC;QAEjE,mDAAmD;QACnD,MAAM,MAAM,GAAG,WAAW,CAAC;QAE3B,gFAAgF;QAChF,IAAI,iBAAiB,GAAG,CAAC,CAAC;QAC1B,KAAK,MAAM,aAAa,IAAI,QAAQ,EAAE;YACpC,MAAM,WAAW,GAAG,WAAW,CAAC,aAAa,CAAC,CAAC;YAC/C,IAAI,WAAW,IAAI,CAAC;gBAAE,SAAS,CAAC,iCAAiC;YAEjE,+CAA+C;YAC/C,MAAM,oBAAoB,GAAG,mBAAmB,CAAC,aAAa,CAAC,CAAC,aAAa,CAAC,IAAI,GAAG,CAAC;YAEtF,2CAA2C;YAC3C,MAAM,mBAAmB,GAAG,oBAAoB,GAAG,WAAW,CAAC;YAC/D,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,CAAC;SACtE;QAED,WAAW,IAAI,iBAAiB,GAAG,MAAM,CAAC;QAC1C,WAAW,IAAI,MAAM,CAAC;KACvB;IAED,yEAAyE;IACzE,MAAM,UAAU,GAAG,WAAW,GAAG,CAAC;QAChC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,GAAG,WAAW,CAAC;QAC1C,CAAC,CAAC,GAAG,CAAC;IAER,OAAO,UAAU,CAAC;AACpB,CAAC;AA9DD,0EA8DC;AAED;;GAEG;AACH,SAAgB,kBAAkB,CAAC,UAA+B;IAChE,OAAO,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;SAC9B,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,EAAE,CAChC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,OAA6C,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAC3F,EAAE,OAAO,EAAE,MAAmC,EAAE,KAAK,EAAE,CAAC,EAAE,CAC3D,CAAC,OAAO,CAAC;AACd,CAAC;AAND,gDAMC","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/utils/elemental/elementalUtils.ts"],"sourcesContent":["import { ElementalProperties } from \"@/types/alchemy\";\n\n/**\n * Creates a properly initialized ElementalProperties object with default values\n */\nexport function createElementalProperties(\n  props?: Partial<ElementalProperties>\n): ElementalProperties { return { Fire: (props?.Fire ?? 0), Water: (props?.Water ?? 0), Earth: (props?.Earth ?? 0), Air: (props?.Air ?? 0) };\n}\n\n/**\n * Type guard to check if an object is a valid ElementalProperties object\n */\nexport function isElementalProperties(obj: unknown): obj is ElementalProperties {\n  if (!obj || typeof obj !== 'object') return false;\n  return (\n    typeof (obj as ElementalProperties).Fire === 'number' &&\n    typeof (obj as ElementalProperties).Water === 'number' &&\n    typeof (obj as ElementalProperties).Earth === 'number' &&\n    typeof (obj as ElementalProperties).Air === 'number'\n  );\n}\n\n/**\n * Safely access elemental properties with fallback to default values\n */\nexport function getElementalProperty(\n  props: Partial<ElementalProperties> | undefined,\n  element: keyof ElementalProperties\n): number {\n  if (!props) return 0;\n  return props[element] ?? 0;\n}\n\n/**\n * Merge two ElementalProperties objects\n */\nexport function mergeElementalProperties(\n  base: Partial<ElementalProperties> | undefined,\n  override: Partial<ElementalProperties> | undefined\n): ElementalProperties { return createElementalProperties({ Fire: ((base?.Fire ?? 0)) + ((override?.Fire ?? 0)), Water: ((base?.Water ?? 0)) + ((override?.Water ?? 0)), Earth: ((base?.Earth ?? 0)) + ((override?.Earth ?? 0)), Air: ((base?.Air ?? 0)) + ((override?.Air ?? 0)) });\n}\n\n/**\n * Scale elemental properties by a factor\n */\nexport function scaleElementalProperties(\n  props: Partial<ElementalProperties> | undefined,\n  factor: number\n): ElementalProperties { if (!props) return createElementalProperties({ Fire: 0, Water: 0, Earth: 0, Air: 0 });\n  \n  return createElementalProperties({ Fire: ((props.Fire ?? 0)) * factor, Water: ((props.Water ?? 0)) * factor, Earth: ((props.Earth ?? 0)) * factor, Air: ((props.Air ?? 0)) * factor });\n}\n\n/**\n * Calculate compatibility score between two ElementalProperties objects\n * Following our elemental principles:\n * 1. Elements reinforce themselves most strongly\n * 2. All element combinations have good compatibility (0.7+)\n * 3. No opposing elements - all elements work together harmoniously\n * \n * @param source - The source elemental properties\n * @param target - The target elemental properties to compare against\n * @returns A compatibility score between 0 and 1\n */\nexport function calculateElementalCompatibility(\n  source: Partial<ElementalProperties> | undefined,\n  target: Partial<ElementalProperties> | undefined\n): number {\n  // Return default score if either source or target is missing\n  if (!source || !target) return 0.5;\n  \n  // Ensure we have complete properties objects\n  const sourceProps = createElementalProperties(source);\n  const targetProps = createElementalProperties(target);\n  \n  // Define element compatibility scores (same elements have highest compatibility)\n  const compatibilityScores = { Fire: { Fire: 0.9, Water: 0.7, Earth: 0.7, Air: 0.8 },\n    Water: { Water: 0.9, Fire: 0.7, Earth: 0.8, Air: 0.7 },\n    Earth: { Earth: 0.9, Fire: 0.7, Water: 0.8, Air: 0.7 },\n    Air: { Air: 0.9, Fire: 0.8, Water: 0.7, Earth: 0.7 }\n  };\n  \n  // Get dominant elements for each profile\n  const sourceDominant = getDominantElement(sourceProps);\n  const targetDominant = getDominantElement(targetProps);\n  \n  // Calculate direct compatibility between dominant elements\n  const baseCompatibility = compatibilityScores[sourceDominant][targetDominant] || 0.7;\n  \n  // Calculate weighted compatibility across all elements\n  let weightedSum = 0;\n  let totalWeight = 0;\n  \n  const elements: Array<keyof ElementalProperties> = ['Fire', 'Water', 'Earth', 'Air'];\n  \n  for (const sourceElement of elements) {\n    const sourceValue = sourceProps[sourceElement];\n    if (sourceValue <= 0) continue; // Skip elements with no presence\n    \n    // Weight by the element's prominence in the source\n    const weight = sourceValue;\n    \n    // For each source element, calculate its compatibility with each target element\n    let bestCompatibility = 0;\n    for (const targetElement of elements) {\n      const targetValue = targetProps[targetElement];\n      if (targetValue <= 0) continue; // Skip elements with no presence\n      \n      // Get compatibility between these two elements\n      const elementCompatibility = compatibilityScores[sourceElement][targetElement] || 0.7;\n      \n      // Scale by the target element's prominence\n      const scaledCompatibility = elementCompatibility * targetValue;\n      bestCompatibility = Math.max(bestCompatibility, scaledCompatibility);\n    }\n    \n    weightedSum += bestCompatibility * weight;\n    totalWeight += weight;\n  }\n  \n  // Calculate final score - ensure minimum of 0.7 following our principles\n  const finalScore = totalWeight > 0 \n    ? Math.max(0.7, weightedSum / totalWeight) \n    : 0.7;\n  \n  return finalScore;\n}\n\n/**\n * Get the dominant element from elemental properties\n */\nexport function getDominantElement(properties: ElementalProperties): keyof ElementalProperties {\n  return Object.entries(properties)\n    .reduce((max, [element, value]) => \n      value > max.value ? { element: element as \"Fire\" | \"Water\" | \"Earth\" | \"Air\", value } : max, \n      { element: 'Fire' as keyof ElementalProperties, value: 0 }\n    ).element;\n} "],"version":3}