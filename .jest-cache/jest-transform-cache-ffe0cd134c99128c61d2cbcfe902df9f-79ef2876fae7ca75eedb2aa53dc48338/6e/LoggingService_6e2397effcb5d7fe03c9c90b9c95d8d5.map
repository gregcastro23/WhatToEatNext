{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/services/LoggingService.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/services/LoggingService.ts"],"sourcesContent":["/**\n * Centralized Logging Service for WhatToEatNext\n *\n * Provides structured logging with different levels and contexts.\n * Replaces _logger.info statements in production code while preserving\n * _logger.warn and _logger.error for debugging purposes.\n */\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  SILENT = 4\n}\n\nexport interface LogContext {\n  component?: string,\n  service?: string,\n  function?: string,\n  userId?: string,\n  sessionId?: string,\n  requestId?: string,\n\n  // Intentionally any: Logging context needs flexibility for various metadata\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- High-risk domain requiring flexibility\n  [key: string]: any\n}\n\nexport interface LogEntry {\n  timestamp: Date,\n  level: LogLevel,\n  message: string,\n  context?: LogContext,\n  error?: Error,\n\n  // Intentionally, any: Log data can be of any type for debugging purposes\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- High-risk domain requiring flexibility\n  data?: any\n}\n\nclass LoggingService {\n  private static instance: LoggingService;\n  private logLevel: LogLevel = LogLevel.INFO;\n  private isDevelopment: boolean;\n  private logBuffer: LogEntry[] = [];\n  private maxBufferSize = 1000;\n\n  private constructor() {\n    this.isDevelopment = process.env.NODE_ENV === 'development';\n\n    // Set log level based on environment\n    if (this.isDevelopment) {\n      this.logLevel = LogLevel.DEBUG;\n    } else if (process.env.NODE_ENV === 'test') {\n      this.logLevel = LogLevel.WARN;\n    } else {\n      this.logLevel = LogLevel.INFO;\n    }\n  }\n\n  public static getInstance(): LoggingService {\n    if (!LoggingService.instance) {\n      LoggingService.instance = new LoggingService();\n    }\n    return LoggingService.instance;\n  }\n\n  public setLogLevel(level: LogLevel): void {\n    this.logLevel = level;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public debug(message: string, context?: LogContext, data?: any): void {\n    this.log(LogLevel.DEBUG, message, context, undefined, data)\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public info(message: string, context?: LogContext, data?: any): void {\n    this.log(LogLevel.INFO, message, context, undefined, data)\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public warn(message: string, context?: LogContext, data?: any): void {\n    this.log(LogLevel.WARN, message, context, undefined, data)\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public error(message: string, context?: LogContext, error?: Error, data?: any): void {\n    this.log(LogLevel.ERROR, message, context, error, data)\n  }\n\n\n  private log(\n    level: LogLevel,\n    message: string,\n    context?: LogContext,\n    error?: Error,\n    data?: unknown,\n  ): void {\n    if (level < this.logLevel) {\n      return\n    }\n\n    const logEntry: LogEntry = {\n      timestamp: new Date(),\n      level,\n      message,\n      context,\n      error,\n      data\n    }\n\n    // Add to buffer\n    this.addToBuffer(logEntry)\n\n    // Output to console based on level and environment\n    this.outputToConsole(logEntry)\n  }\n\n  private addToBuffer(entry: LogEntry): void {\n    this.logBuffer.push(entry)\n\n    // Maintain buffer size\n    if (this.logBuffer.length > this.maxBufferSize) {\n      this.logBuffer.shift()\n    }\n  }\n\n  private outputToConsole(entry: LogEntry): void {\n    const timestamp = entry.timestamp.toISOString();\n    const contextStr = entry.context ? this.formatContext(entry.context) : '';\n    const levelStr = LogLevel[entry.level];\n    const baseMessage = `[${timestamp}] ${levelStr}: ${entry.message}${contextStr}`;\n\n    switch (entry.level) {\n      case LogLevel.DEBUG:\n        if (this.isDevelopment) {\n          log.info(`üêõ ${baseMessage}`, entry.data || '');\n        }\n        break;\n\n      case LogLevel.INFO:\n        log.info(`‚ÑπÔ∏è ${baseMessage}`, entry.data || '');\n        break;\n\n      case LogLevel.WARN:\n        _logger.warn(`‚ö†Ô∏è ${baseMessage}`, entry.data || '');\n        break;\n\n      case LogLevel.ERROR:\n        _logger.error(`‚ùå ${baseMessage}`, entry.error || entry.data || '');\n        break;\n    }\n  }\n\n  private formatContext(context: LogContext): string {\n    const parts: string[] = [];\n\n    if (context.component) parts.push(`component=${context.component}`)\n    if (context.service) parts.push(`service=${context.service}`)\n    if (context.function) parts.push(`function=${context.function}`)\n    if (context.userId) parts.push(`user=${context.userId}`)\n    if (context.sessionId) parts.push(`session=${context.sessionId}`)\n    if (context.requestId) parts.push(`request=${context.requestId}`)\n\n    // Add other context properties\n    Object.keys(context).forEach(key => {\n      if (!['component', 'service', 'function', 'userId', 'sessionId', 'requestId'].includes(key)) {\n        parts.push(`${key}=${context[key]}`)\n      }\n    })\n\n    return parts.length > 0 ? ` [${parts.join(', ')}]` : '';\n  }\n\n  public getLogBuffer(): LogEntry[] {\n    return [...this.logBuffer];\n  }\n\n  public clearLogBuffer(): void {\n    this.logBuffer = [];\n  }\n\n  public exportLogs(): string {\n    return this.logBuffer\n      .map(entry => {\n        const timestamp = entry.timestamp.toISOString();\n        const level = LogLevel[entry.level];\n        const context = entry.context ? this.formatContext(entry.context) : '';\n        const errorStr = entry.error ? ` ERROR: ${entry.error.message}` : '';\n        const dataStr = entry.data ? ` DATA: ${JSON.stringify(entry.data)}` : ''\n\n        return `[${timestamp}] ${level}: ${entry.message}${context}${errorStr}${dataStr}`;\n      })\n      .join('\\n')\n  }\n}\n\n// Create singleton instance\nconst logger = LoggingService.getInstance()\n\n// Export convenience functions\n\nexport const log = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  debug: (message: string, context?: LogContext, data?: any) =>\n    logger.debug(message, context, data),\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  info: (message: string, context?: LogContext, data?: any) => logger.info(message, context, data),\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  warn: (message: string, context?: LogContext, data?: any) => logger.warn(message, context, data),\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: (message: string, context?: LogContext, error?: Error, data?: any) =>\n    logger.error(message, context, error, data)\n}\n\n// Export service for advanced usage\nexport { LoggingService };\nexport default logger;\n"],"version":3}