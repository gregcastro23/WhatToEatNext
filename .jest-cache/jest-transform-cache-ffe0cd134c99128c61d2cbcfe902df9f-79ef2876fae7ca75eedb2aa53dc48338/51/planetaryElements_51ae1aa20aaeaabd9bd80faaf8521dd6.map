{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/constants/planetaryElements.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/constants/planetaryElements.ts"],"sourcesContent":["import { RulingPlanet } from './planets';\n\n/**\n * The four elemental characters used in alchemical calculations\n */\nexport type ElementalCharacter = 'Fire' | 'Water' | 'Earth' | 'Air';\n\n/**\n * The four alchemical properties derived from elemental interactions\n */\nexport type AlchemicalProperty = 'Spirit' | 'Essence' | 'Matter' | 'Substance';\n\n/**\n * Maps planets to their elemental character\n */\nexport const planetaryElementMap: Record<RulingPlanet, ElementalCharacter> = {\n  Sun: 'Fire',\n  Moon: 'Water',\n  Mercury: 'Air',\n  Venus: 'Water',\n  Mars: 'Fire',\n  Jupiter: 'Air',\n  Saturn: 'Earth',\n  Neptune: 'Water',\n  Uranus: 'Air',\n  Pluto: 'Earth'\n};\n\n/**\n * Maps tarot suits to their elemental character\n */\nexport const tarotSuitElementMap: Record<string, ElementalCharacter> = {\n  Wands: 'Fire',\n  Cups: 'Water',\n  Pentacles: 'Earth',\n  Swords: 'Air'\n};\n\n/**\n * Maps tarot cards to their quantum values\n * Court cards have the following values:\n * Page = 1, Knight = 2, Queen = 3, King = 4\n */\nexport const tarotCardQuantumValues: Record<string, number> = {\n  // Wands (Fire)\n  'Ace of Wands': 1,\n  'Two of Wands': 2,\n  'Three of Wands': 3,\n  'Four of Wands': 4,\n  'Five of Wands': 5,\n  'Six of Wands': 6,\n  'Seven of Wands': 7,\n  'Eight of Wands': 8,\n  'Nine of Wands': 9,\n  'Ten of Wands': 10,\n  'Page of Wands': 1,\n  'Knight of Wands': 2,\n  'Queen of Wands': 3,\n  'King of Wands': 4,\n\n  // Cups (Water)\n  'Ace of Cups': 1,\n  'Two of Cups': 2,\n  'Three of Cups': 3,\n  'Four of Cups': 4,\n  'Five of Cups': 5,\n  'Six of Cups': 6,\n  'Seven of Cups': 7,\n  'Eight of Cups': 8,\n  'Nine of Cups': 9,\n  'Ten of Cups': 10,\n  'Page of Cups': 1,\n  'Knight of Cups': 2,\n  'Queen of Cups': 3,\n  'King of Cups': 4,\n\n  // Pentacles (Earth)\n  'Ace of Pentacles': 1,\n  'Two of Pentacles': 2,\n  'Three of Pentacles': 3,\n  'Four of Pentacles': 4,\n  'Five of Pentacles': 5,\n  'Six of Pentacles': 6,\n  'Seven of Pentacles': 7,\n  'Eight of Pentacles': 8,\n  'Nine of Pentacles': 9,\n  'Ten of Pentacles': 10,\n  'Page of Pentacles': 1,\n  'Knight of Pentacles': 2,\n  'Queen of Pentacles': 3,\n  'King of Pentacles': 4,\n\n  // Swords (Air)\n  'Ace of Swords': 1,\n  'Two of Swords': 2,\n  'Three of Swords': 3,\n  'Four of Swords': 4,\n  'Five of Swords': 5,\n  'Six of Swords': 6,\n  'Seven of Swords': 7,\n  'Eight of Swords': 8,\n  'Nine of Swords': 9,\n  'Ten of Swords': 10,\n  'Page of Swords': 1,\n  'Knight of Swords': 2,\n  'Queen of Swords': 3,\n  'King of Swords': 4\n};\n\n/**\n * Maps major arcana cards to their ruling planets\n */\nexport const majorArcanaPlanetMap: Record<string, RulingPlanet> = {\n  'The Magician': 'Mercury',\n  'The High Priestess': 'Moon',\n  'The Empress': 'Venus',\n  'The Emperor': 'Mars',\n  'The Hierophant': 'Jupiter',\n  'The Lovers': 'Venus',\n  'The Chariot': 'Moon',\n  'Strength': 'Sun',\n  'The Hermit': 'Saturn',\n  'Wheel of Fortune': 'Jupiter',\n  'Justice': 'Venus',\n  'The Hanged Man': 'Neptune',\n  'Death': 'Pluto',\n  'Temperance': 'Jupiter',\n  'The Devil': 'Saturn',\n  'The Tower': 'Mars',\n  'The Star': 'Uranus',\n  'The Moon': 'Moon',\n  'The Sun': 'Sun',\n  'Judgement': 'Pluto',\n  'The World': 'Saturn'\n};\n\n/**\n * Maps each planet to a corresponding alchemical property\n */\nexport const planetaryAlchemicalMap: Record<RulingPlanet, AlchemicalProperty> = {\n  Sun: 'Spirit',\n  Moon: 'Essence',\n  Mercury: 'Substance',\n  Venus: 'Essence',\n  Mars: 'Spirit',\n  Jupiter: 'Substance',\n  Saturn: 'Matter',\n  Neptune: 'Essence',\n  Uranus: 'Substance',\n  Pluto: 'Matter'\n};\n\n/**\n * Gets the elemental character associated with a planet\n * @param planet Ruling planet\n * @returns The associated elemental character\n */\nexport const getPlanetaryElement = (planet: RulingPlanet): ElementalCharacter => {\n  return planetaryElementMap[planet];\n};\n\n/**\n * Gets the alchemical property associated with a planet\n * @param planet Ruling planet\n * @returns The associated alchemical property\n */\nexport const getPlanetaryAlchemicalProperty = (planet: RulingPlanet): AlchemicalProperty => {\n  return planetaryAlchemicalMap[planet];\n};\n\n/**\n * Gets the elemental character from a tarot card name\n * @param cardName Tarot card name\n * @returns The associated elemental character or null if not found\n */\nexport const getTarotCardElement = (cardName: string): ElementalCharacter | null => {\n  // Check if it's a minor arcana card\n  for (const [suit, element] of Object.entries(tarotSuitElementMap)) {\n    if (cardName.includes(suit)) {\n      return element;\n    }\n  }\n  \n  // For major arcana, use the planetary association if available\n  const planet = majorArcanaPlanetMap[cardName];\n  if (planet) {\n    return planetaryElementMap[planet];\n  }\n  \n  return null;\n};\n\n/**\n * Gets the quantum value for a tarot card (minor arcana only)\n * @param cardName Tarot card name\n * @returns The quantum value or 0 if not found\n */\nexport const getTarotCardQuantum = (cardName: string): number => {\n  return tarotCardQuantumValues[cardName] || 0;\n};\n\n/**\n * Gets the ruling planet for a major arcana card\n * @param cardName Major arcana card name\n * @returns The ruling planet or null if not found\n */\nexport const getTarotCardPlanet = (cardName: string): RulingPlanet | null => {\n  return majorArcanaPlanetMap[cardName] || null;\n}; "],"version":3}