{"file":"/Users/GregCastro/Desktop/WhatToEatNext/.consolidation-backups-2025-08-23T17-54-10-092Z/src/services/linting/DomainContextDetector.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/.consolidation-backups-2025-08-23T17-54-10-092Z/src/services/linting/DomainContextDetector.ts"],"sourcesContent":["/**\n * DomainContextDetector - Advanced domain context detection for specialized file handling\n *\n * This system detects domain-specific contexts (astrological calculations, campaign systems)\n * and provides specialized handling recommendations for linting issues.\n */\n\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nexport interface DomainContext {\n  type:\n    | 'astrological'\n    | 'campaign'\n    | 'test'\n    | 'script'\n    | 'component'\n    | 'service'\n    | 'utility'\n    | 'config';\n  subtype?: string;\n  confidence: number; // 0-1\n  indicators: ContextIndicator[];\n  specialRules: SpecialRule[];\n  handlingRecommendations: HandlingRecommendation[];\n}\n\nexport interface ContextIndicator {\n  type: 'filename' | 'path' | 'content' | 'imports' | 'exports';\n  pattern: string;\n  weight: number;\n  description: string;\n}\n\nexport interface SpecialRule {\n  rule: string;\n  action: 'disable' | 'modify' | 'enhance' | 'monitor';\n  reason: string;\n  conditions?: string[];\n}\n\nexport interface HandlingRecommendation {\n  category: 'linting' | 'testing' | 'review' | 'deployment';\n  recommendation: string;\n  priority: 'high' | 'medium' | 'low';\n  rationale: string;\n}\n\nexport interface FileAnalysis {\n  filePath: string;\n  domainContext: DomainContext;\n  riskFactors: RiskFactor[];\n  preservationRequirements: PreservationRequirement[];\n}\n\nexport interface RiskFactor {\n  type: 'calculation-accuracy' | 'data-integrity' | 'performance' | 'security';\n  description: string;\n  severity: 'critical' | 'high' | 'medium' | 'low';\n  mitigation: string;\n}\n\nexport interface PreservationRequirement {\n  element: 'constants' | 'variables' | 'functions' | 'imports' | 'comments';\n  pattern: RegExp;\n  reason: string;\n  strictness: 'absolute' | 'high' | 'medium' | 'low';\n}\n\n/**\n * Main DomainContextDetector class\n */\nexport class DomainContextDetector {\n  private workspaceRoot: string;\n  private domainPatterns: Map<string, ContextIndicator[]>;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- High-risk domain requiring flexibility\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- High-risk domain requiring flexibility\n  private contentAnalysisCache: Map<string, unknown>;\n\n  constructor(workspaceRoot: string = process.cwd()) {\n    this.workspaceRoot = workspaceRoot;\n    this.contentAnalysisCache = new Map();\n    this.initializeDomainPatterns();\n  }\n\n  /**\n   * Analyze file and detect domain context\n   */\n  async analyzeFile(filePath: string): Promise<FileAnalysis> {\n    const absolutePath = path.isAbsolute(filePath)\n      ? filePath\n      : path.join(this.workspaceRoot, filePath);\n    const relativePath = path.relative(this.workspaceRoot, absolutePath);\n\n    // Detect domain context\n    const domainContext = await this.detectDomainContext(relativePath, absolutePath);\n\n    // Analyze risk factors\n    const riskFactors = this.analyzeRiskFactors(domainContext, relativePath);\n\n    // Determine preservation requirements\n    const preservationRequirements = await this.determinePreservationRequirements(\n      domainContext,\n      absolutePath,\n    );\n\n    return {\n      filePath: relativePath,\n      domainContext,\n      riskFactors,\n      preservationRequirements,\n    };\n  }\n\n  /**\n   * Batch analyze multiple files\n   */\n  async analyzeFiles(filePaths: string[]): Promise<FileAnalysis[]> {\n    const analyses: FileAnalysis[] = [];\n\n    for (const filePath of filePaths) {\n      try {\n        const analysis = await this.analyzeFile(filePath);\n        analyses.push(analysis);\n      } catch (error) {\n        console.warn(`Failed to analyze ${filePath}:`, error);\n      }\n    }\n\n    return analyses;\n  }\n\n  /**\n   * Get domain-specific linting recommendations\n   */\n  getDomainLintingRecommendations(domainContext: DomainContext): {\n    rulesToDisable: string[];\n    rulesToModify: Array<{ rule: string; modification: string }>;\n    additionalValidation: string[];\n  } {\n    const rulesToDisable: string[] = [];\n    const rulesToModify: Array<{ rule: string; modification: string }> = [];\n    const additionalValidation: string[] = [];\n\n    for (const specialRule of domainContext.specialRules) {\n      switch (specialRule.action) {\n        case 'disable':\n          rulesToDisable.push(specialRule.rule);\n          break;\n        case 'modify':\n          rulesToModify.push({\n            rule: specialRule.rule,\n            modification: specialRule.reason,\n          });\n          break;\n        case 'enhance':\n          additionalValidation.push(`Enhanced ${specialRule.rule}: ${specialRule.reason}`);\n          break;\n        case 'monitor':\n          additionalValidation.push(`Monitor ${specialRule.rule}: ${specialRule.reason}`);\n          break;\n      }\n    }\n\n    return { rulesToDisable, rulesToModify, additionalValidation };\n  }\n\n  /**\n   * Detect domain context for a file\n   */\n  private async detectDomainContext(\n    relativePath: string,\n    absolutePath: string,\n  ): Promise<DomainContext> {\n    const indicators: ContextIndicator[] = [];\n    let confidence = 0;\n    let primaryType: DomainContext['type'] = 'utility';\n    let subtype: string | undefined;\n\n    // Analyze path patterns\n    for (const [domain, patterns] of this.domainPatterns.entries()) {\n      for (const pattern of patterns) {\n        if (pattern.type === 'path' && new RegExp(pattern.pattern).test(relativePath)) {\n          indicators.push(pattern);\n          confidence += pattern.weight;\n\n          if (pattern.weight > 0.7) {\n            primaryType = domain as DomainContext['type'];\n          }\n        }\n\n        if (\n          pattern.type === 'filename' &&\n          new RegExp(pattern.pattern).test(path.basename(relativePath))\n        ) {\n          indicators.push(pattern);\n          confidence += pattern.weight;\n        }\n      }\n    }\n\n    // Analyze file content if accessible\n    try {\n      if (fs.existsSync(absolutePath)) {\n        const contentAnalysis = await this.analyzeFileContent(absolutePath);\n        indicators.push(...contentAnalysis.indicators);\n        confidence += contentAnalysis.confidenceBoost;\n\n        if (contentAnalysis.detectedType && contentAnalysis.confidenceBoost > 0.5) {\n          primaryType = contentAnalysis.detectedType;\n          subtype = contentAnalysis.subtype;\n        }\n      }\n    } catch (error) {\n      // Content analysis failed, continue with path-based detection\n    }\n\n    // Normalize confidence\n    confidence = Math.min(1, confidence);\n\n    // Generate special rules and recommendations\n    const specialRules = this.generateSpecialRules(primaryType, subtype, relativePath);\n    const handlingRecommendations = this.generateHandlingRecommendations(primaryType, confidence);\n\n    return {\n      type: primaryType,\n      subtype,\n      confidence,\n      indicators,\n      specialRules,\n      handlingRecommendations,\n    };\n  }\n\n  /**\n   * Analyze file content for domain indicators\n   */\n  private async analyzeFileContent(absolutePath: string): Promise<{\n    indicators: ContextIndicator[];\n    confidenceBoost: number;\n    detectedType?: DomainContext['type'];\n    subtype?: string;\n  }> {\n    // Check cache first\n    const cacheKey = `${absolutePath}:${fs.statSync(absolutePath).mtime.getTime()}`;\n    if (this.contentAnalysisCache.has(cacheKey)) {\n      return this.contentAnalysisCache.get(cacheKey);\n    }\n\n    const content = fs.readFileSync(absolutePath, 'utf8');\n    const indicators: ContextIndicator[] = [];\n    let confidenceBoost = 0;\n    let detectedType: DomainContext['type'] | undefined;\n    let subtype: string | undefined;\n\n    // Astrological content patterns\n    const astrologicalPatterns = [\n      { pattern: /planetary|planet|astro|zodiac|sign|degree|longitude/i, weight: 0.3 },\n      { pattern: /mercury|venus|mars|jupiter|saturn|uranus|neptune|pluto/i, weight: 0.4 },\n      {\n        pattern:\n          /aries|taurus|gemini|cancer|leo|virgo|libra|scorpio|sagittarius|capricorn|aquarius|pisces/i,\n        weight: 0.4,\n      },\n      { pattern: /elemental|fire|water|earth|air|element/i, weight: 0.3 },\n      { pattern: /transit|retrograde|conjunction|opposition|trine|square/i, weight: 0.5 },\n      { pattern: /alchemical|alchemy|transformation|pillar/i, weight: 0.4 },\n      { pattern: /culinary.*astrology|astrological.*cooking/i, weight: 0.6 },\n    ];\n\n    for (const { pattern, weight } of astrologicalPatterns) {\n      if (pattern.test(content)) {\n        indicators.push({\n          type: 'content',\n          pattern: pattern.source,\n          weight,\n          description: 'Astrological content detected',\n        });\n        confidenceBoost += weight;\n        detectedType = 'astrological';\n      }\n    }\n\n    // Campaign system patterns\n    const campaignPatterns = [\n      { pattern: /campaign|Campaign/g, weight: 0.4 },\n      { pattern: /progress.*track|track.*progress/i, weight: 0.3 },\n      { pattern: /safety.*protocol|protocol.*safety/i, weight: 0.4 },\n      { pattern: /typescript.*error|error.*typescript/i, weight: 0.3 },\n      { pattern: /metrics|intelligence|enterprise/i, weight: 0.2 },\n      { pattern: /rollback|stash|validation/i, weight: 0.3 },\n    ];\n\n    for (const { pattern, weight } of campaignPatterns) {\n      const matches = content.match(pattern);\n      if (matches && matches.length > 2) {\n        // Multiple occurrences\n        indicators.push({\n          type: 'content',\n          pattern: pattern.source,\n          weight,\n          description: 'Campaign system content detected',\n        });\n        confidenceBoost += weight;\n        if (!detectedType || detectedType === 'utility') {\n          detectedType = 'campaign';\n        }\n      }\n    }\n\n    // Test file patterns\n    if (/describe|it|test|expect|jest|beforeEach|afterEach/i.test(content)) {\n      indicators.push({\n        type: 'content',\n        pattern: 'test-framework',\n        weight: 0.8,\n        description: 'Test framework usage detected',\n      });\n      confidenceBoost += 0.8;\n      detectedType = 'test';\n    }\n\n    // React component patterns\n    if (/jsx|tsx|React|useState|useEffect|component/i.test(content)) {\n      indicators.push({\n        type: 'content',\n        pattern: 'react-component',\n        weight: 0.6,\n        description: 'React component detected',\n      });\n      if (!detectedType || detectedType === 'utility') {\n        detectedType = 'component';\n      }\n    }\n\n    // Service patterns\n    if (/service|Service|api|Api|client|Client/i.test(content)) {\n      indicators.push({\n        type: 'content',\n        pattern: 'service-layer',\n        weight: 0.4,\n        description: 'Service layer detected',\n      });\n      if (!detectedType || detectedType === 'utility') {\n        detectedType = 'service';\n      }\n    }\n\n    // Determine subtype based on specific patterns\n    if (detectedType === 'astrological') {\n      if (/calculation|compute|math/i.test(content)) {\n        subtype = 'calculation';\n      } else if (/data|constant|fallback/i.test(content)) {\n        subtype = 'data';\n      } else if (/service|api/i.test(content)) {\n        subtype = 'service';\n      }\n    } else if (detectedType === 'campaign') {\n      if (/controller|orchestrat/i.test(content)) {\n        subtype = 'controller';\n      } else if (/track|progress|metric/i.test(content)) {\n        subtype = 'tracking';\n      } else if (/safety|protocol/i.test(content)) {\n        subtype = 'safety';\n      }\n    }\n\n    const result = { indicators, confidenceBoost, detectedType, subtype };\n    this.contentAnalysisCache.set(cacheKey, result);\n\n    return result;\n  }\n\n  /**\n   * Generate special rules for domain context\n   */\n  private generateSpecialRules(\n    type: DomainContext['type'],\n    subtype: string | undefined,\n    filePath: string,\n  ): SpecialRule[] {\n    const rules: SpecialRule[] = [];\n\n    switch (type) {\n      case 'astrological':\n        rules.push(\n          {\n            rule: '@typescript-eslint/no-explicit-any',\n            action: 'disable',\n            reason: 'Astrological calculations may require flexible typing for astronomical data',\n          },\n          {\n            rule: 'no-magic-numbers',\n            action: 'disable',\n            reason: 'Astronomical constants and degrees are meaningful magic numbers',\n          },\n          {\n            rule: '@typescript-eslint/no-unused-vars',\n            action: 'modify',\n            reason:\n              'Preserve variables with astronomical significance (planet, position, degree, sign)',\n            conditions: ['varsIgnorePattern: \"^(_|planet|position|degree|sign|FALLBACK|RELIABLE)\"'],\n          },\n          {\n            rule: 'no-console',\n            action: 'modify',\n            reason: 'Allow console.info for astronomical debugging',\n            conditions: ['allow: [\"warn\", \"error\", \"info\"]'],\n          },\n        );\n\n        if (subtype === 'calculation') {\n          rules.push(\n            {\n              rule: 'complexity',\n              action: 'disable',\n              reason: 'Astronomical calculations can be inherently complex',\n            },\n            {\n              rule: 'max-lines-per-function',\n              action: 'disable',\n              reason: 'Complex astronomical algorithms may require longer functions',\n            },\n          );\n        }\n        break;\n\n      case 'campaign':\n        rules.push(\n          {\n            rule: 'no-console',\n            action: 'disable',\n            reason: 'Campaign systems require extensive logging for monitoring',\n          },\n          {\n            rule: 'complexity',\n            action: 'modify',\n            reason: 'Allow higher complexity for campaign orchestration',\n            conditions: ['max: 15'],\n          },\n          {\n            rule: 'max-lines-per-function',\n            action: 'modify',\n            reason: 'Campaign functions may be longer due to safety protocols',\n            conditions: ['max: 100'],\n          },\n          {\n            rule: '@typescript-eslint/no-unused-vars',\n            action: 'modify',\n            reason: 'Preserve campaign system variables',\n            conditions: ['varsIgnorePattern: \"^(_|campaign|progress|metrics|safety|CAMPAIGN)\"'],\n          },\n        );\n\n        if (subtype === 'safety') {\n          rules.push({\n            rule: 'no-process-exit',\n            action: 'disable',\n            reason: 'Safety protocols may need to exit process in emergency situations',\n          });\n        }\n        break;\n\n      case 'test':\n        rules.push(\n          {\n            rule: '@typescript-eslint/no-explicit-any',\n            action: 'disable',\n            reason: 'Test files often need flexible typing for mocks and stubs',\n          },\n          {\n            rule: 'no-console',\n            action: 'disable',\n            reason: 'Console output is acceptable in test files',\n          },\n          {\n            rule: 'max-lines',\n            action: 'disable',\n            reason: 'Test files can be long due to comprehensive test cases',\n          },\n          {\n            rule: '@typescript-eslint/no-unused-vars',\n            action: 'modify',\n            reason: 'Allow unused variables in test setup',\n            conditions: ['varsIgnorePattern: \"^(_|mock|stub|test)\"'],\n          },\n        );\n        break;\n\n      case 'script':\n        rules.push(\n          {\n            rule: 'no-console',\n            action: 'disable',\n            reason: 'Scripts typically need console output',\n          },\n          {\n            rule: '@typescript-eslint/no-explicit-any',\n            action: 'disable',\n            reason: 'Scripts may need flexible typing',\n          },\n          {\n            rule: 'no-process-exit',\n            action: 'disable',\n            reason: 'Scripts may need to exit with specific codes',\n          },\n        );\n        break;\n    }\n\n    return rules;\n  }\n\n  /**\n   * Generate handling recommendations\n   */\n  private generateHandlingRecommendations(\n    type: DomainContext['type'],\n    confidence: number,\n  ): HandlingRecommendation[] {\n    const recommendations: HandlingRecommendation[] = [];\n\n    if (confidence > 0.8) {\n      recommendations.push({\n        category: 'linting',\n        recommendation: 'Apply domain-specific linting rules with high confidence',\n        priority: 'high',\n        rationale: `High confidence (${Math.round(confidence * 100)}%) domain detection`,\n      });\n    } else if (confidence > 0.5) {\n      recommendations.push({\n        category: 'linting',\n        recommendation: 'Apply domain-specific rules with validation',\n        priority: 'medium',\n        rationale: `Medium confidence (${Math.round(confidence * 100)}%) domain detection`,\n      });\n    }\n\n    switch (type) {\n      case 'astrological':\n        recommendations.push(\n          {\n            category: 'review',\n            recommendation: 'Require astrological domain expert review for any changes',\n            priority: 'high',\n            rationale: 'Astrological calculations require specialized knowledge',\n          },\n          {\n            category: 'testing',\n            recommendation: 'Validate astronomical accuracy after any modifications',\n            priority: 'high',\n            rationale: 'Changes could affect calculation precision',\n          },\n        );\n        break;\n\n      case 'campaign':\n        recommendations.push(\n          {\n            category: 'testing',\n            recommendation: 'Test campaign system integration after changes',\n            priority: 'high',\n            rationale: 'Campaign system changes can affect automation workflows',\n          },\n          {\n            category: 'deployment',\n            recommendation: 'Deploy campaign changes with rollback capability',\n            priority: 'medium',\n            rationale: 'Campaign system is critical for code quality automation',\n          },\n        );\n        break;\n\n      case 'test':\n        recommendations.push({\n          category: 'linting',\n          recommendation: 'Use relaxed linting rules appropriate for test files',\n          priority: 'medium',\n          rationale: 'Test files have different quality requirements',\n        });\n        break;\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Analyze risk factors for domain context\n   */\n  private analyzeRiskFactors(domainContext: DomainContext, filePath: string): RiskFactor[] {\n    const riskFactors: RiskFactor[] = [];\n\n    switch (domainContext.type) {\n      case 'astrological':\n        riskFactors.push(\n          {\n            type: 'calculation-accuracy',\n            description: 'Changes may affect astronomical calculation precision',\n            severity: 'critical',\n            mitigation: 'Validate against known astronomical data and transit dates',\n          },\n          {\n            type: 'data-integrity',\n            description: 'Planetary position data must remain accurate',\n            severity: 'high',\n            mitigation: 'Cross-reference with multiple astronomical sources',\n          },\n        );\n\n        if (filePath.includes('fallback') || filePath.includes('reliable')) {\n          riskFactors.push({\n            type: 'data-integrity',\n            description: 'Fallback data is critical for system reliability',\n            severity: 'critical',\n            mitigation: 'Never modify fallback astronomical data without expert validation',\n          });\n        }\n        break;\n\n      case 'campaign':\n        riskFactors.push({\n          type: 'performance',\n          description: 'Campaign system performance affects development workflow',\n          severity: 'medium',\n          mitigation: 'Monitor execution time and memory usage',\n        });\n\n        if (filePath.includes('safety') || filePath.includes('protocol')) {\n          riskFactors.push({\n            type: 'security',\n            description: 'Safety protocols protect against code corruption',\n            severity: 'high',\n            mitigation: 'Thoroughly test all safety mechanisms',\n          });\n        }\n        break;\n    }\n\n    return riskFactors;\n  }\n\n  /**\n   * Determine preservation requirements\n   */\n  private async determinePreservationRequirements(\n    domainContext: DomainContext,\n    absolutePath: string,\n  ): Promise<PreservationRequirement[]> {\n    const requirements: PreservationRequirement[] = [];\n\n    switch (domainContext.type) {\n      case 'astrological':\n        requirements.push(\n          {\n            element: 'constants',\n            pattern: /RELIABLE_POSITIONS|FALLBACK|TRANSIT_DATES|PLANETARY_/,\n            reason: 'Astronomical constants must be preserved for calculation accuracy',\n            strictness: 'absolute',\n          },\n          {\n            element: 'variables',\n            pattern: /planet|position|degree|longitude|sign|retrograde/i,\n            reason: 'Astronomical variables are critical for calculations',\n            strictness: 'high',\n          },\n          {\n            element: 'functions',\n            pattern: /calculate|validate|getReliable|fallback/i,\n            reason: 'Core astronomical functions must be preserved',\n            strictness: 'high',\n          },\n        );\n        break;\n\n      case 'campaign':\n        requirements.push(\n          {\n            element: 'variables',\n            pattern: /CAMPAIGN|PROGRESS|METRICS|SAFETY|ERROR_THRESHOLD/,\n            reason: 'Campaign system constants control automation behavior',\n            strictness: 'high',\n          },\n          {\n            element: 'functions',\n            pattern: /safety|rollback|validate|track/i,\n            reason: 'Safety and tracking functions are critical',\n            strictness: 'high',\n          },\n        );\n        break;\n    }\n\n    return requirements;\n  }\n\n  /**\n   * Initialize domain pattern recognition\n   */\n  private initializeDomainPatterns(): void {\n    this.domainPatterns = new Map();\n\n    // Astrological patterns\n    this.domainPatterns.set('astrological', [\n      {\n        type: 'path',\n        pattern: '/calculations/',\n        weight: 0.8,\n        description: 'Astrological calculations directory',\n      },\n      {\n        type: 'path',\n        pattern: '/data/planets/',\n        weight: 0.9,\n        description: 'Planetary data directory',\n      },\n      {\n        type: 'filename',\n        pattern: 'reliableAstronomy|planetaryConsistencyCheck|Astrological|Alchemical',\n        weight: 0.9,\n        description: 'Astrological utility files',\n      },\n      {\n        type: 'path',\n        pattern: '/services/.*Astrological|/services/.*Alchemical',\n        weight: 0.8,\n        description: 'Astrological service files',\n      },\n    ]);\n\n    // Campaign system patterns\n    this.domainPatterns.set('campaign', [\n      {\n        type: 'path',\n        pattern: '/services/campaign/',\n        weight: 0.9,\n        description: 'Campaign system directory',\n      },\n      {\n        type: 'filename',\n        pattern: 'Campaign|Progress|Safety|Intelligence',\n        weight: 0.8,\n        description: 'Campaign system files',\n      },\n      {\n        type: 'path',\n        pattern: '/types/campaign',\n        weight: 0.9,\n        description: 'Campaign type definitions',\n      },\n    ]);\n\n    // Test patterns\n    this.domainPatterns.set('test', [\n      {\n        type: 'filename',\n        pattern: '\\\\.test\\\\.|\\\\.spec\\\\.',\n        weight: 0.9,\n        description: 'Test files',\n      },\n      {\n        type: 'path',\n        pattern: '/__tests__/',\n        weight: 0.9,\n        description: 'Test directory',\n      },\n    ]);\n\n    // Script patterns\n    this.domainPatterns.set('script', [\n      {\n        type: 'path',\n        pattern: '/scripts/',\n        weight: 0.9,\n        description: 'Scripts directory',\n      },\n      {\n        type: 'filename',\n        pattern: '\\\\.config\\\\.|setup\\\\.|install\\\\.',\n        weight: 0.8,\n        description: 'Configuration and setup files',\n      },\n    ]);\n  }\n}\n"],"version":3}