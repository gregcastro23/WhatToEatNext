{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/DomainContextAnalyzer.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/DomainContextAnalyzer.ts"],"sourcesContent":["/**\n * Domain Context Analyzer\n * Provides domain-specific analysis for astrological, recipe, campaign, and service code\n *\n * Features:\n * - File path analysis to determine code domain\n * - Content analysis for domain-specific patterns\n * - Subdomain classification for specialized areas\n * - Domain-specific type suggestions and preservation reasons\n */\n\nimport {\n    ClassificationContext,\n    CodeDomain,\n    DomainContext,\n    IntentionalityHint\n} from './types';\n\nexport class DomainContextAnalyzer {\n  private domainPatterns: Map<CodeDomain, RegExp[]>;\n  private typeMapping: Map<CodeDomain, string[]>;\n  private pathPatterns: Map<CodeDomain, RegExp[]>;\n  private contentPatterns: Map<CodeDomain, RegExp[]>;\n  private subDomainPatterns: Map<CodeDomain, Map<string, RegExp[]>>;\n\n  constructor() {\n    this.domainPatterns = this.initializeDomainPatterns();\n    this.typeMapping = this.initializeTypeMapping();\n    this.pathPatterns = this.initializePathPatterns();\n    this.contentPatterns = this.initializeContentPatterns();\n    this.subDomainPatterns = this.initializeSubDomainPatterns();\n  }\n\n  /**\n   * Analyze the domain context for a given classification context\n   */\n  async analyzeDomain(context: ClassificationContext): Promise<DomainContext> {\n    const domain = this.detectDomain(context);\n    const subDomain = this.detectSubDomain(context, domain);\n    const intentionalityHints = this.generateIntentionalityHints(context, domain);\n    const suggestedTypes = this.getDomainSpecificSuggestions(domain, context);\n    const preservationReasons = this.getPreservationReasons(context, domain);\n\n    return {\n      domain,\n      subDomain,\n      intentionalityHints,\n      suggestedTypes,\n      preservationReasons\n    };\n  }\n\n  /**\n   * Get domain-specific type suggestions\n   */\n  getDomainSpecificSuggestions(domain: CodeDomain, context: ClassificationContext): string[] {\n    const baseSuggestions = this.typeMapping.get(domain) || ['unknown'];\n    const contextualSuggestions = this.getContextualSuggestions(context, domain);\n\n    return [...new Set([...baseSuggestions, ...contextualSuggestions])];\n  }\n\n  /**\n   * Detect the primary domain based on file path and content analysis\n   */\n  private detectDomain(context: ClassificationContext): CodeDomain {\n    // First, try path-based detection (most reliable)\n    const pathDomain = this.detectDomainByPath(context.filePath);\n    if (pathDomain !== CodeDomain.UTILITY) {\n      return pathDomain;\n    }\n\n    // Then try content-based detection\n    const contentDomain = this.detectDomainByContent(context);\n    if (contentDomain !== CodeDomain.UTILITY) {\n      return contentDomain;\n    }\n\n    // Finally, try import/dependency analysis\n    const importDomain = this.detectDomainByImports(context);\n    return importDomain;\n  }\n\n  /**\n   * Detect domain based on file path patterns\n   * Uses priority order - first match wins\n   */\n  private detectDomainByPath(filePath: string): CodeDomain {\n    const normalizedPath = filePath.toLowerCase().replace(/\\\\/g, '/');\n\n    // Check in priority order (test files first, then components, etc.)\n    const orderedDomains = [\n      CodeDomain.TEST,\n      CodeDomain.COMPONENT,\n      CodeDomain.ASTROLOGICAL,\n      CodeDomain.CAMPAIGN,\n      CodeDomain.RECIPE,\n      CodeDomain.SERVICE,\n      CodeDomain.UTILITY\n    ];\n\n    for (const domain of orderedDomains) {\n      const patterns = this.pathPatterns.get(domain) || [];\n      if (patterns.some(pattern => pattern.test(normalizedPath))) {\n        return domain;\n      }\n    }\n\n    return CodeDomain.UTILITY;\n  }\n\n  /**\n   * Detect domain based on code content patterns\n   */\n  private detectDomainByContent(context: ClassificationContext): CodeDomain {\n    const codeContent = [context.codeSnippet, ...context.surroundingLines]\n      .join('\\n')\n      .toLowerCase();\n\n    // Score each domain based on pattern matches\n    const domainScores = new Map<CodeDomain, number>();\n\n    for (const [domain, patterns] of this.contentPatterns.entries()) {\n      let score = 0;\n      for (const pattern of patterns) {\n        const matches = codeContent.match(pattern);\n        if (matches) {\n          score += matches.length;\n        }\n      }\n      if (score > 0) {\n        domainScores.set(domain, score);\n      }\n    }\n\n    // Return the domain with the highest score\n    if (domainScores.size > 0) {\n      const sortedDomains = Array.from(domainScores.entries())\n        .sort(([, a], [, b]) => b - a);\n      return sortedDomains[0][0];\n    }\n\n    return CodeDomain.UTILITY;\n  }\n\n  /**\n   * Detect domain based on import statements and dependencies\n   */\n  private detectDomainByImports(context: ClassificationContext): CodeDomain {\n    const codeContent = [context.codeSnippet, ...context.surroundingLines].join('\\n');\n\n    // Look for import patterns\n    const importMatches = codeContent.match(/import.*from\\s+['\"`]([^'\"`]+)['\"`]/g) || [];\n    const requireMatches = codeContent.match(/require\\(['\"`]([^'\"`]+)['\"`]\\)/g) || [];\n\n    const allImports = [...importMatches, ...requireMatches].join(' ').toLowerCase();\n\n    // Priority order for import-based detection\n    if (allImports.includes('jest') ||\n        allImports.includes('@testing-library') ||\n        allImports.includes('vitest')) {\n      return CodeDomain.TEST;\n    }\n\n    if (allImports.includes('react') ||\n        allImports.includes('@/components') ||\n        allImports.includes('next/') ||\n        allImports.includes('jsx') ||\n        allImports.includes('tsx')) {\n      return CodeDomain.COMPONENT;\n    }\n\n    if (allImports.includes('astronomia') ||\n        allImports.includes('astronomy-engine') ||\n        allImports.includes('suncalc') ||\n        allImports.includes('/calculations/') ||\n        allImports.includes('/astro')) {\n      return CodeDomain.ASTROLOGICAL;\n    }\n\n    if (allImports.includes('/campaign') ||\n        allImports.includes('metrics') ||\n        allImports.includes('intelligence')) {\n      return CodeDomain.CAMPAIGN;\n    }\n\n    if (allImports.includes('/recipe') ||\n        allImports.includes('/ingredient') ||\n        allImports.includes('/food')) {\n      return CodeDomain.RECIPE;\n    }\n\n    if (allImports.includes('/service') ||\n        allImports.includes('/api') ||\n        allImports.includes('axios') ||\n        allImports.includes('fetch')) {\n      return CodeDomain.SERVICE;\n    }\n\n    return CodeDomain.UTILITY;\n  }\n\n  /**\n   * Detect specialized subdomain within the primary domain\n   */\n  private detectSubDomain(context: ClassificationContext, domain: CodeDomain): string | undefined {\n    const filePath = context.filePath.toLowerCase().replace(/\\\\/g, '/');\n    const codeContent = [context.codeSnippet, ...context.surroundingLines]\n      .join('\\n')\n      .toLowerCase();\n\n    const subDomainPatterns = this.subDomainPatterns.get(domain);\n    if (!subDomainPatterns) {\n      return undefined;\n    }\n\n    // Score each subdomain based on pattern matches\n    const subDomainScores = new Map<string, number>();\n\n    for (const [subDomain, patterns] of subDomainPatterns.entries()) {\n      let score = 0;\n\n      // Check file path patterns\n      for (const pattern of patterns) {\n        if (pattern.test(filePath)) {\n          score += 2; // Path matches are weighted higher\n        }\n      }\n\n      if (score > 0) {\n        subDomainScores.set(subDomain, score);\n      }\n    }\n\n    // Return the subdomain with the highest score\n    if (subDomainScores.size > 0) {\n      const sortedSubDomains = Array.from(subDomainScores.entries())\n        .sort(([, a], [, b]) => b - a);\n      return sortedSubDomains[0][0];\n    }\n\n    return undefined;\n  }\n\n  private generateIntentionalityHints(context: ClassificationContext, domain: CodeDomain): IntentionalityHint[] {\n    const hints: IntentionalityHint[] = [];\n\n    switch (domain) {\n      case CodeDomain.ASTROLOGICAL:\n        hints.push({\n          reason: 'Astrological calculations often require flexible typing for external astronomical data',\n          confidence: 0.8,\n          suggestedAction: 'preserve'\n        });\n\n        if (context.codeSnippet.includes('position') || context.codeSnippet.includes('planetary')) {\n          hints.push({\n            reason: 'Planetary position data from external APIs may need any type for compatibility',\n            confidence: 0.9,\n            suggestedAction: 'document'\n          });\n        }\n        break;\n\n      case CodeDomain.RECIPE:\n        if (context.codeSnippet.includes('ingredient') || context.codeSnippet.includes('recipe')) {\n          hints.push({\n            reason: 'Recipe and ingredient data can often use specific types',\n            confidence: 0.7,\n            suggestedAction: 'replace'\n          });\n        }\n        break;\n\n      case CodeDomain.CAMPAIGN:\n        hints.push({\n          reason: 'Campaign system requires flexibility for dynamic configurations and metrics',\n          confidence: 0.85,\n          suggestedAction: 'preserve'\n        });\n\n        if (context.codeSnippet.includes('metrics') || context.codeSnippet.includes('config')) {\n          hints.push({\n            reason: 'Dynamic campaign configurations benefit from flexible typing',\n            confidence: 0.9,\n            suggestedAction: 'document'\n          });\n        }\n        break;\n\n      case CodeDomain.TEST:\n        hints.push({\n          reason: 'Test files often need flexible typing for mocks and test data',\n          confidence: 0.8,\n          suggestedAction: 'preserve'\n        });\n        break;\n\n      case CodeDomain.SERVICE:\n        if (context.codeSnippet.includes('api') || context.codeSnippet.includes('response')) {\n          hints.push({\n            reason: 'API responses may require any type for external service compatibility',\n            confidence: 0.8,\n            suggestedAction: 'document'\n          });\n        } else {\n          hints.push({\n            reason: 'Service layer can often use more specific types',\n            confidence: 0.6,\n            suggestedAction: 'review'\n          });\n        }\n        break;\n\n      default:\n        hints.push({\n          reason: 'No domain-specific patterns detected, consider replacement',\n          confidence: 0.5,\n          suggestedAction: 'review'\n        });\n    }\n\n    return hints;\n  }\n\n  private getContextualSuggestions(context: ClassificationContext, domain: CodeDomain): string[] {\n    const suggestions: string[] = [];\n    const codeContent = context.codeSnippet.toLowerCase();\n\n    switch (domain) {\n      case CodeDomain.ASTROLOGICAL:\n        if (codeContent.includes('position')) suggestions.push('PlanetaryPosition');\n        if (codeContent.includes('element')) suggestions.push('ElementalProperties');\n        if (codeContent.includes('sign')) suggestions.push('ZodiacSign');\n        if (codeContent.includes('planet')) suggestions.push('Planet');\n        break;\n\n      case CodeDomain.RECIPE:\n        if (codeContent.includes('ingredient')) suggestions.push('Ingredient');\n        if (codeContent.includes('recipe')) suggestions.push('Recipe');\n        if (codeContent.includes('nutrition')) suggestions.push('NutritionalInfo');\n        if (codeContent.includes('cooking')) suggestions.push('CookingMethod');\n        break;\n\n      case CodeDomain.CAMPAIGN:\n        if (codeContent.includes('metrics')) suggestions.push('ProgressMetrics');\n        if (codeContent.includes('config')) suggestions.push('CampaignConfig');\n        if (codeContent.includes('result')) suggestions.push('CampaignResult');\n        if (codeContent.includes('error')) suggestions.push('ValidationResult');\n        break;\n\n      case CodeDomain.SERVICE:\n        if (codeContent.includes('response')) suggestions.push('ApiResponse<T>');\n        if (codeContent.includes('request')) suggestions.push('ApiRequest');\n        if (codeContent.includes('data')) suggestions.push('ServiceData');\n        break;\n\n      case CodeDomain.COMPONENT:\n        if (codeContent.includes('props')) suggestions.push('ComponentProps');\n        if (codeContent.includes('state')) suggestions.push('ComponentState');\n        if (codeContent.includes('event')) suggestions.push('React.SyntheticEvent');\n        break;\n    }\n\n    return suggestions;\n  }\n\n  private getPreservationReasons(context: ClassificationContext, domain: CodeDomain): string[] {\n    const reasons: string[] = [];\n\n    if (domain === CodeDomain.ASTROLOGICAL) {\n      reasons.push('Astrological calculations require compatibility with external astronomical libraries');\n      reasons.push('Planetary position data structures vary between different API sources');\n    }\n\n    if (domain === CodeDomain.CAMPAIGN) {\n      reasons.push('Campaign system needs flexibility for evolving metrics and configurations');\n      reasons.push('Dynamic tool integration requires adaptable type structures');\n    }\n\n    if (domain === CodeDomain.TEST) {\n      reasons.push('Test flexibility for mocking and test data generation');\n      reasons.push('Jest and testing library compatibility requirements');\n    }\n\n    if (context.isInTestFile) {\n      reasons.push('Test file context allows for more flexible typing patterns');\n    }\n\n    if (context.hasExistingComment) {\n      reasons.push('Existing documentation suggests intentional usage');\n    }\n\n    return reasons;\n  }\n\n  /**\n   * Initialize path-based domain detection patterns\n   * Order matters - more specific patterns should come first\n   */\n  private initializePathPatterns(): Map<CodeDomain, RegExp[]> {\n    return new Map([\n      [CodeDomain.TEST, [\n        /__tests__/i,\n        /\\.test\\./i,\n        /\\.spec\\./i,\n        /\\/test/i,\n        /\\/spec/i\n      ]],\n      [CodeDomain.COMPONENT, [\n        /\\/component/i,\n        /\\.tsx$/i,\n        /\\.jsx$/i,\n        /\\/ui\\//i,\n        /\\/pages\\//i,\n        /\\/app\\//i\n      ]],\n      [CodeDomain.ASTROLOGICAL, [\n        /\\/calculations\\//i,\n        /\\/astro/i,\n        /planetary/i,\n        /elemental/i,\n        /lunar/i,\n        /solar/i,\n        /zodiac/i,\n        /ephemeris/i\n      ]],\n      [CodeDomain.CAMPAIGN, [\n        /\\/campaign/i,\n        /\\/intelligence/i,\n        /typescript.*error/i,\n        /linting/i,\n        /validation/i,\n        /metrics/i,\n        /progress/i\n      ]],\n      [CodeDomain.RECIPE, [\n        /\\/recipe/i,\n        /\\/ingredient/i,\n        /\\/food/i,\n        /\\/culinary/i,\n        /\\/cooking/i,\n        /\\/nutrition/i,\n        /\\/data\\/.*ingredient/i,\n        /\\/data\\/.*recipe/i\n      ]],\n      [CodeDomain.SERVICE, [\n        /\\/service/i,\n        /\\/api/i,\n        /\\/client/i,\n        /\\/adapter/i,\n        /recommendation.*service/i\n      ]],\n      [CodeDomain.UTILITY, [\n        /\\/utils/i,\n        /\\/helper/i,\n        /\\/common/i,\n        /\\/shared/i,\n        /\\/lib/i\n      ]]\n    ]);\n  }\n\n  /**\n   * Initialize content-based domain detection patterns\n   */\n  private initializeContentPatterns(): Map<CodeDomain, RegExp[]> {\n    return new Map([\n      [CodeDomain.ASTROLOGICAL, [\n        /planetary|planet|astro|zodiac|sign|element|lunar|solar/gi,\n        /position|degree|longitude|latitude|ephemeris/gi,\n        /fire|water|earth|air|elemental/gi,\n        /astronomia|astronomy-engine|suncalc/gi,\n        /PlanetaryPosition|ElementalProperties|ZodiacSign/gi\n      ]],\n      [CodeDomain.RECIPE, [\n        /recipe|ingredient|food|culinary|cooking|nutrition/gi,\n        /flavor|taste|spice|herb|vegetable|fruit/gi,\n        /meal|dish|cuisine|dietary/gi,\n        /Ingredient|Recipe|NutritionalInfo|CookingMethod/gi\n      ]],\n      [CodeDomain.CAMPAIGN, [\n        /campaign|metrics|progress|typescript|linting|error/gi,\n        /validation|safety|rollback|checkpoint/gi,\n        /intelligence|enterprise|automation/gi,\n        /CampaignConfig|ProgressMetrics|ValidationResult/gi\n      ]],\n      [CodeDomain.SERVICE, [\n        /service|api|request|response|client|server/gi,\n        /endpoint|http|fetch|axios|data/gi,\n        /ApiResponse|ServiceData|RequestConfig/gi\n      ]],\n      [CodeDomain.COMPONENT, [\n        /component|props|state|render|jsx|tsx/gi,\n        /react|hook|context|provider/gi,\n        /ComponentProps|React\\.Component|JSX\\.Element/gi\n      ]],\n      [CodeDomain.UTILITY, [\n        /util|helper|common|shared|lib/gi,\n        /function|method|tool|format/gi\n      ]],\n      [CodeDomain.TEST, [\n        /test|spec|mock|jest|describe|it|expect/gi,\n        /fixture|stub|spy|beforeEach|afterEach/gi,\n        /jest\\.Mock|MockedFunction|TestData/gi\n      ]]\n    ]);\n  }\n\n  /**\n   * Initialize subdomain detection patterns\n   */\n  private initializeSubDomainPatterns(): Map<CodeDomain, Map<string, RegExp[]>> {\n    return new Map([\n      [CodeDomain.ASTROLOGICAL, new Map([\n        ['planetary', [/planetary|planet/gi, /position|degree|longitude/gi]],\n        ['elemental', [/elemental|element/gi, /fire|water|earth|air/gi]],\n        ['lunar', [/lunar|moon/gi, /phase|cycle/gi]],\n        ['solar', [/solar|sun/gi, /sunrise|sunset/gi]],\n        ['zodiac', [/zodiac|sign/gi, /aries|taurus|gemini|cancer|leo|virgo|libra|scorpio|sagittarius|capricorn|aquarius|pisces/gi]],\n        ['calculations', [/calculation|compute|algorithm/gi, /ephemeris|transit/gi]]\n      ])],\n      [CodeDomain.RECIPE, new Map([\n        ['ingredients', [/ingredient/gi, /spice|herb|vegetable|fruit/gi]],\n        ['cooking-methods', [/cooking|method/gi, /bake|boil|fry|steam|grill/gi]],\n        ['nutrition', [/nutrition|nutrient/gi, /calorie|vitamin|mineral/gi]],\n        ['cuisines', [/cuisine|cultural/gi, /italian|chinese|mexican|indian/gi]],\n        ['recipes', [/recipe|dish|meal/gi, /preparation|instruction/gi]]\n      ])],\n      [CodeDomain.CAMPAIGN, new Map([\n        ['typescript-errors', [/typescript|ts\\d+/gi, /error|compilation/gi]],\n        ['linting', [/lint|eslint/gi, /warning|rule/gi]],\n        ['performance', [/performance|optimization/gi, /memory|speed|bundle/gi]],\n        ['metrics', [/metrics|progress/gi, /tracking|measurement/gi]],\n        ['intelligence', [/intelligence|enterprise/gi, /analytics|insights/gi]],\n        ['safety', [/safety|validation/gi, /rollback|checkpoint/gi]]\n      ])],\n      [CodeDomain.SERVICE, new Map([\n        ['recommendation', [/recommendation|suggest/gi, /algorithm|matching/gi]],\n        ['api-integration', [/api|integration/gi, /request|response|endpoint/gi]],\n        ['data-processing', [/data|processing/gi, /transform|parse|validate/gi]],\n        ['caching', [/cache|storage/gi, /redis|memory/gi]]\n      ])],\n      [CodeDomain.COMPONENT, new Map([\n        ['ui-components', [/component|ui/gi, /button|input|modal/gi]],\n        ['pages', [/page|route/gi, /navigation|layout/gi]],\n        ['hooks', [/hook|use[A-Z]/gi, /state|effect|context/gi]],\n        ['forms', [/form|input/gi, /validation|submit/gi]]\n      ])],\n      [CodeDomain.TEST, new Map([\n        ['unit-tests', [/unit|test/gi, /describe|it|expect/gi]],\n        ['integration-tests', [/integration|e2e/gi, /workflow|scenario/gi]],\n        ['mocks', [/mock|stub|spy/gi, /jest\\.mock|mockImplementation/gi]]\n      ])],\n      [CodeDomain.UTILITY, new Map([\n        ['validation', [/validation|validate/gi, /schema|rule/gi]],\n        ['formatting', [/format|transform/gi, /string|date|number/gi]],\n        ['helpers', [/helper|utility/gi, /common|shared/gi]]\n      ])]\n    ]);\n  }\n\n  /**\n   * Legacy method for backward compatibility\n   */\n  private initializeDomainPatterns(): Map<CodeDomain, RegExp[]> {\n    // This method is kept for backward compatibility\n    // The actual patterns are now in initializeContentPatterns\n    return this.initializeContentPatterns();\n  }\n\n  private initializeTypeMapping(): Map<CodeDomain, string[]> {\n    return new Map([\n      [CodeDomain.ASTROLOGICAL, [\n        'PlanetaryPosition',\n        'ElementalProperties',\n        'ZodiacSign',\n        'Planet',\n        'AstrologicalData',\n        'unknown'\n      ]],\n      [CodeDomain.RECIPE, [\n        'Ingredient',\n        'Recipe',\n        'NutritionalInfo',\n        'CookingMethod',\n        'CulinaryData',\n        'unknown'\n      ]],\n      [CodeDomain.CAMPAIGN, [\n        'ProgressMetrics',\n        'CampaignConfig',\n        'CampaignResult',\n        'ValidationResult',\n        'SafetyEvent',\n        'Record<string, unknown>'\n      ]],\n      [CodeDomain.SERVICE, [\n        'ApiResponse<T>',\n        'ServiceData',\n        'RequestConfig',\n        'ResponseData',\n        'unknown'\n      ]],\n      [CodeDomain.COMPONENT, [\n        'ComponentProps',\n        'React.ComponentProps<T>',\n        'React.ReactNode',\n        'JSX.Element',\n        'unknown'\n      ]],\n      [CodeDomain.UTILITY, [\n        'unknown',\n        'Record<string, unknown>',\n        'object'\n      ]],\n      [CodeDomain.TEST, [\n        'jest.Mock',\n        'MockedFunction<T>',\n        'TestData',\n        'unknown'\n      ]]\n    ]);\n  }\n}\n"],"version":3}