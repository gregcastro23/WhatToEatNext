{"file":"/Users/GregCastro/Desktop/WhatToEatNext/.comprehensive-syntax-backup-1757476640334/src___tests___e2e_MainPageWorkflows.test.tsx","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/.comprehensive-syntax-backup-1757476640334/src___tests___e2e_MainPageWorkflows.test.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-anyno-console, @typescript-eslint/no-unused-vars, max-lines-per-function -- Campaign/test file with intentional patterns */\nimport type { } from 'jest';\n/**\n * End-to-End Tests for Main Page Workflows\n *\n * These tests simulate complete user workflows on the main page,\n * testing the integration between all components and user interactions.\n *\n * Note: These tests use jsdom and testing-library to simulate E2E scenarios\n * without requiring a full browser environment.\n */\n\nimport { act, render, screen, waitFor } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport React from 'react';\nimport { useAlchemical } from '@/contexts/AlchemicalContext/hooks';\nimport { useAutoStateCleanup, useNavigationState, useScrollPreservation } from '@/hooks/useStatePreservation';\n\n// Create mock components for testing\nconst MockCuisineRecommender: React.FC<any> = (props: any) => <div data-testid='cuisine-recommender'>Cuisine Recommender</div>;\nconst MockElementalBalance: React.FC<any> = (props: any) => <div data-testid='elemental-balance'>Elemental Balance</div>;\nconst MockIntelligencePanel: React.FC<any> = (props: any) => <div data-testid='intelligence-panel'>Intelligence Panel</div>;\n\ninterface MainPageLayoutProps {\n  onSectionNavigate?: (section: string) => void;\n}\n\nconst MainPageLayout: React.FC<MainPageLayoutProps> = ({ onSectionNavigate }: any) => {\n  return (\n    <div data-testid='main-page-layout'>\n      <MockCuisineRecommender />\n      <MockElementalBalance />\n      <MockIntelligencePanel />\n    </div>\n  );\n};\n\n\n// Mock all external dependencies for E2E simulation\njest.mock('next/navigation', () => ({\n  useRouter: () => ({ push: jest.fn(), back: jest.fn(),\n    forward: jest.fn(),\n    refresh: jest.fn(),\n    replace: jest.fn(),\n  }),\n}));\n\njest.mock('@/contexts/AlchemicalContext/hooks');\njest.mock('@/hooks/useStatePreservation');\njest.mock('@/utils/logger', () => ({\n  logger: { debug: jest.fn(), info: jest.fn(),\n    warn: jest.fn(),\n    error: jest.fn(),\n  },\n}));\n\n// Mock realistic component behaviors for E2E testing\njest.mock('@/components/CuisineRecommender', () => {\n  return function MockCuisineRecommender(): any {\n    const [selectedCuisine, setSelectedCuisine] = React.useState<string | null>(null);\n    const [showRecipes, setShowRecipes] = React.useState(false);\n\n    const cuisines: any = [\n      { name: 'Italian', score: 95, recipes: ['Pasta Marinara', 'Risotto', 'Pizza Margherita'] },\n      { name: 'Chinese', score: 88, recipes: ['Fried Rice', 'Sweet and Sour Pork', 'Kung Pao Chicken'] },\n      { name: 'Mexican', score: 82, recipes: ['Tacos', 'Enchiladas', 'Guacamole'] },\n      { name: 'Indian', score: 79, recipes: ['Curry', 'Biryani', 'Naan'] },\n    ];\n\n    const handleCuisineSelect: any = (cuisine: any) => {\n      const cuisineData: any = cuisine as { name: string; score: number; recipes: string[] };\n      setSelectedCuisine(cuisineData.name);\n      setShowRecipes(true);\n    };\n\n    return (\n      <div data-testid='cuisine-recommender'>\n        <h3>Cuisine Recommendations</h3>\n        <div className='cuisine-grid'>\n          {cuisines.map(cuisine => (\n            <div key={cuisine.name} className='cuisine-card' data-testid={`cuisine-card-${cuisine.name.toLowerCase()}`}>\n              <button\n                onClick={() => handleCuisineSelect(cuisine)}\n                className={selectedCuisine === cuisine.name ? 'selected' : ''}\n                data-testid={`cuisine-${cuisine.name.toLowerCase()}`}\n              >\n                <h4>{cuisine.name}</h4>\n                <div className='score'>Match: {cuisine.score}%</div>\n              </button>\n            </div>\n          ))}\n        </div>\n\n        {showRecipes && selectedCuisine && (\n          <div data-testid='recipe-recommendations' className='recipe-section'>\n            <h4>Recommended {selectedCuisine} Recipes</h4>\n            <div className='recipe-list'>\n              {cuisines\n                .find(c => c.name === selectedCuisine)\n                ?.recipes.map(recipe => (\n                  <button\n                    key={recipe}\n                    data-testid={`recipe-${recipe.toLowerCase().replace(/\\s+/g, '-')}`}\n                    className='recipe-button'\n                  >\n                    {recipe}\n                  </button>\n                ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n});\n\njest.mock('@/components/IngredientRecommender', () => {\n  return function MockIngredientRecommender({ maxDisplayed = 8 }: { maxDisplayed?: number }) {\n    const [selectedIngredients, setSelectedIngredients] = React.useState<string[]>([]);\n    const [expandedIngredient, setExpandedIngredient] = React.useState<string | null>(null);\n\n    const ingredients: any = [\n      { name: 'Tomatoes', category: 'Vegetables', properties: ['Umami', 'Acidic', 'Fresh'] },\n      { name: 'Onions', category: 'Vegetables', properties: ['Sweet', 'Pungent', 'Aromatic'] },\n      { name: 'Garlic', category: 'Aromatics', properties: ['Pungent', 'Savory', 'Aromatic'] },\n      { name: 'Basil', category: 'Herbs', properties: ['Fresh', 'Aromatic', 'Sweet'] },\n      { name: 'Olive Oil', category: 'Oils', properties: ['Rich', 'Fruity', 'Smooth'] },\n      { name: 'Cheese', category: 'Dairy', properties: ['Creamy', 'Salty', 'Rich'] },\n      { name: 'Pasta', category: 'Grains', properties: ['Neutral', 'Filling', 'Versatile'] },\n      { name: 'Chicken', category: 'Proteins', properties: ['Lean', 'Mild', 'Versatile'] },\n    ];\n\n    const displayedIngredients: any = ingredients.slice(0, maxDisplayed);\n\n    const toggleIngredient: any = (ingredient: string) => {\n      setSelectedIngredients(prev =>\n        prev.includes(ingredient) ? prev.filter(i => i !== ingredient) : [...prev, ingredient],\n      );\n    };\n\n    const toggleExpanded: any = (ingredient: string) => {\n      setExpandedIngredient(prev => (prev === ingredient ? null : ingredient));\n    };\n\n    return (\n      <div data-testid='ingredient-recommender'>\n        <h3>Ingredient Recommendations</h3>\n        <div className='ingredient-grid'>\n          {displayedIngredients.map(ingredient => (\n            <div\n              key={ingredient.name}\n              className='ingredient-card'\n              data-testid={`ingredient-card-${ingredient.name.toLowerCase()}`}\n            >\n              <button\n                onClick={() => toggleIngredient(ingredient.name)}\n                className={selectedIngredients.includes(ingredient.name) ? 'selected' : ''}\n                data-testid={`ingredient-${ingredient.name.toLowerCase()}`}\n              >\n                {ingredient.name}\n              </button>\n              <button\n                onClick={() => toggleExpanded(ingredient.name)}\n                data-testid={`expand-${ingredient.name.toLowerCase()}`}\n                className='expand-button'\n              >\n                {expandedIngredient === ingredient.name ? '▼' : '▶'}\n              </button>\n\n              {expandedIngredient === ingredient.name && (\n                <div data-testid={`details-${ingredient.name.toLowerCase()}`} className='ingredient-details'>\n                  <div>Category: {ingredient.category}</div>\n                  <div>Properties: {ingredient.properties.join(', ')}</div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {selectedIngredients.length > 0 && (\n          <div data-testid='selected-ingredients-summary' className='selection-summary'>\n            <h4>Selected Ingredients ({selectedIngredients.length})</h4>\n            <div>{selectedIngredients.join(', ')}</div>\n          </div>\n        )}\n      </div>\n    );\n  };\n});\n\njest.mock('@/components/CookingMethodsSection', () => {\n  return function MockCookingMethodsSection({\n    maxDisplayed = 6,\n    onViewMore,\n  }: {\n    maxDisplayed?: number;\n    onViewMore?: () => void;\n  }) {\n    const [selectedMethod, setSelectedMethod] = React.useState<string | null>(null);\n\n    const methods: any = [\n      { name: 'Sauté', time: '5-10 min', difficulty: 'Easy', description: 'Quick cooking in a pan with oil' },\n      { name: 'Roast', time: '30-60 min', difficulty: 'Medium', description: 'Cooking in the oven with dry heat' },\n      { name: 'Grill', time: '10-20 min', difficulty: 'Medium', description: 'Cooking over direct heat' },\n      { name: 'Steam', time: '10-15 min', difficulty: 'Easy', description: 'Cooking with steam heat' },\n      { name: 'Braise', time: '60-120 min', difficulty: 'Hard', description: 'Slow cooking with liquid' },\n      { name: 'Stir-fry', time: '5-8 min', difficulty: 'Medium', description: 'Quick cooking while stirring' },\n    ];\n\n    const displayedMethods: any = methods.slice(0, maxDisplayed);\n\n    return (\n      <div data-testid='cooking-methods'>\n        <h3>Cooking Methods</h3>\n        <div className='methods-grid'>\n          {displayedMethods.map(method => (\n            <div key={method.name} className='method-card' data-testid={`method-card-${method.name.toLowerCase()}`}>\n              <button\n                onClick={() => setSelectedMethod(method.name)}\n                className={selectedMethod === method.name ? 'selected' : ''}\n                data-testid={`method-${method.name.toLowerCase()}`}\n              >\n                <h4>{method.name}</h4>\n                <div className='method-info'>\n                  <div>Time: {method.time}</div>\n                  <div>Difficulty: {method.difficulty}</div>\n                </div>\n              </button>\n\n              {selectedMethod === method.name && (\n                <div data-testid={`method-details-${method.name.toLowerCase()}`} className='method-details'>\n                  <p>{method.description}</p>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <button onClick={onViewMore} data-testid='view-more-methods' className='view-more-button'>;\n          View All Cooking Methods\n        </button>\n      </div>\n    );\n  };\n});\n\njest.mock('@/components/recipes/RecipeBuilderSimple', () => {\n  return function MockRecipeBuilderSimple(): any {\n    const [recipeName, setRecipeName] = React.useState('');\n    const [ingredients, setIngredients] = React.useState<Array<{ name: string; quantit, y: string }>>([]);\n    const [steps, setSteps] = React.useState<Array<{ instruction: string; timing: string }>>([]);\n    const [servings, setServings] = React.useState(4);\n    const [prepTime, setPrepTime] = React.useState(15);\n    const [cookTime, setCookTime] = React.useState(30);\n\n    const addIngredient: React.FC<any> = (props: any) => {\n      setIngredients(prev => [...prev, { name: '', quantity: '' }]);\n    };\n\n    const updateIngredient: any = (index: number, field: 'name' | 'quantity', value: string) => {\n      setIngredients(prev => prev.map((ing: any) => (i === index ? { ...ing, [field]: value } : ing)));\n    };\n\n    const removeIngredient: any = (index: number) => {\n      setIngredients(prev => prev.filter((_: any) => i !== index));\n    };\n\n    const addStep: React.FC<any> = (props: any) => {\n      setSteps(prev => [...prev, { instruction: '', timing: '' }]);\n    };\n\n    const updateStep: any = (index: number, field: 'instruction' | 'timing', value: string) => {\n      setSteps(prev => prev.map((step: any) => (i === index ? { ...step, [field]: value } : step)));\n    };\n\n    const removeStep: any = (index: number) => {\n      setSteps(prev => prev.filter((_: any) => i !== index));\n    };\n\n    const canSave: any = recipeName.trim() && ingredients.some(ing => ing.name.trim()) && void steps.some(step => step.instruction.trim());\n\n    const totalTime: any = prepTime + cookTime;\n\n    return (\n      <div data-testid='recipe-builder'>\n        <h3>Recipe Builder</h3>\n\n        <div className='recipe-form'>\n          <div className='recipe-header'>\n            <input\n              type='text'\n              placeholder='Recipe Name'\n              value={recipeName}\n              onChange={e => setRecipeName(e.target.value)}\n              data-testid='recipe-name-input'\n            />\n\n            <div className='recipe-meta'>\n              <input\n                type='number'\n                value={servings}\n                onChange={e => setServings(parseInt(e.target.value) || 1)}\n                data-testid='servings-input'\n                min='1'\n              />\n              <input\n                type='number'\n                value={prepTime}\n                onChange={e => setPrepTime(parseInt(e.target.value) || 0)}\n                data-testid='prep-time-input'\n                min='0'\n              />\n              <input\n                type='number'\n                value={cookTime}\n                onChange={e => setCookTime(parseInt(e.target.value) || 0)}\n                data-testid='cook-time-input'\n                min='0'\n              />\n            </div>\n          </div>\n\n          <div className='ingredients-section'>\n            <h4>Ingredients</h4>\n            <button onClick={addIngredient} data-testid='add-ingredient'>\n              Add Ingredient\n            </button>\n\n            {ingredients.map((ingredient: any, index: any) => (\n              <div key={index} className='ingredient-row' data-testid={`ingredient-row-${index}`}>\n                <input\n                  type='text'\n                  placeholder='Quantity'\n                  value={ingredient.quantity}\n                  onChange={e => updateIngredient(index, 'quantity', e.target.value)}\n                  data-testid={`ingredient-quantity-${index}`}\n                />\n                <input\n                  type='text'\n                  placeholder='Ingredient name'\n                  value={ingredient.name}\n                  onChange={e => updateIngredient(index, 'name', e.target.value)}\n                  data-testid={`ingredient-name-${index}`}\n                />\n                <button onClick={() => removeIngredient(index)} data-testid={`remove-ingredient-${index}`}>\n                  Remove\n                </button>\n              </div>\n            ))}\n\n            <div data-testid='ingredients-count'>, Ingredients: {ingredients.length}</div>\n          </div>\n\n          <div className='steps-section'>\n            <h4>Instructions</h4>\n            <button onClick={addStep} data-testid='add-step'>\n              Add Step\n            </button>\n\n            {steps.map((step: any, index: any) => (\n              <div key={index} className='step-row' data-testid={`step-row-${index}`}>\n                <span className='step-number'>{index + 1}</span>\n                <textarea\n                  placeholder='Describe this step...'\n                  value={step.instruction}\n                  onChange={e => updateStep(index, 'instruction', e.target.value)}\n                  data-testid={`step-instruction-${index}`}\n                />\n                <input\n                  type='text'\n                  placeholder='Timing'\n                  value={step.timing}\n                  onChange={e => updateStep(index, 'timing', e.target.value)}\n                  data-testid={`step-timing-${index}`}\n                />\n                <button onClick={() => removeStep(index)} data-testid={`remove-step-${index}`}>\n                  Remove\n                </button>\n              </div>\n            ))}\n\n            <div data-testid='steps-count'>, Steps: {steps.length}</div>\n          </div>\n\n          <div className='recipe-summary' data-testid='recipe-summary'>\n            <h4>Recipe Summary</h4>\n            <div>Name: {recipeName || 'Untitled Recipe'}</div>\n            <div>Servings: {servings}</div>\n            <div>Total Time: {totalTime} minutes</div>\n            <div>Ingredients: {ingredients.length}</div>\n            <div>Steps: {steps.length}</div>\n          </div>\n\n          <button disabled={!canSave} data-testid='save-recipe' className={canSave ? 'enabled' : 'disabled'}>;\n            Save Recipe\n          </button>\n        </div>\n      </div>\n    );\n  };\n});\n\ndescribe('Main Page E2E Workflows', () => {\n  const mockAlchemicalContext: any = {\n    state: { astrologicalState: { sunSign: 'aries' },\n      elementalState: { Fire: 0.3, Water: 0.2, Earth: 0.3, Air: 0.2 },\n    },\n    planetaryPositions: { sun: { sign: 'aries' } },\n    isDaytime: true,\n  };\n\n  const mockNavigationState = {\n    saveState: jest.fn(),\n    getState: jest.fn(() => ({})),\n  };\n\n  const mockScrollPreservation: any = {\n    restoreScrollPosition: jest.fn(),\n  };\n\n  beforeEach(() => {\n    void jest.clearAllMocks();\n\n    (useAlchemical as jest.Mock).mockReturnValue(mockAlchemicalContext);\n    (useNavigationState as jest.Mock).mockReturnValue(mockNavigationState);\n    (useScrollPreservation as jest.Mock).mockReturnValue(mockScrollPreservation);\n    (useAutoStateCleanup as jest.Mock).mockReturnValue(undefined);\n\n    // Mock DOM methods\n    void Object.defineProperty(window, 'scrollY', { value: 0, writable: true });\n    jest.spyOn(document, 'getElementById').mockImplementation(() =>\n        ({\n          scrollIntoView: jest.fn(),\n          style: {},\n          classList: { add: jest.fn(), remove: jest.fn() },\n        }) as any,\n    );\n  });\n\n  afterEach(() => {\n    void jest.restoreAllMocks();\n  });\n\n  it('completes full meal planning workflow', async () => {\n    const user: any = userEvent.setup();\n\n    act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    // Wait for all components to load\n    await waitFor(() => {\n      expect(screen.getByTestId('cuisine-recommender')).toBeInTheDocument();\n      expect(screen.getByTestId('ingredient-recommender')).toBeInTheDocument();\n      expect(screen.getByTestId('cooking-methods')).toBeInTheDocument();\n      expect(screen.getByTestId('recipe-builder')).toBeInTheDocument();\n    });\n\n    // Step 1: Select a cuisine\n    const italianCuisine: any = screen.getByTestId('italian-cuisine');\n    void user.click(italianCuisine);\n\n    // Verify cuisine selection and recipe recommendations appear\n    expect(screen.getByTestId('recipe-recommendations')).toBeInTheDocument();\n    expect(screen.getByText('Recommended Italian Recipes')).toBeInTheDocument();\n\n    // Step 2: Select ingredients\n    const tomatoes: any = screen.getByTestId('ingredient-tomatoes');\n    const basil: any = screen.getByTestId('ingredient-basil');\n    const oliveOil: any = screen.getByTestId('ingredient-olive oil');\n\n    void user.click(tomatoes);\n    void user.click(basil);\n    void user.click(oliveOil);\n\n    // Verify ingredient selection\n    expect(screen.getByTestId('selected-ingredients-summary')).toBeInTheDocument();\n    expect(screen.getByText('Selected Ingredients (3)')).toBeInTheDocument();\n\n    // Step 3: Select cooking method\n    const sauteMethod: any = screen.getByTestId('method-sauté');\n    void user.click(sauteMethod);\n\n    // Verify method selection and details\n    expect(screen.getByTestId('method-details-sauté')).toBeInTheDocument();\n\n    // Step 4: Build a recipe\n    const recipeNameInput: any = screen.getByTestId('recipe-name-input');\n    void user.type(recipeNameInput, 'Italian Tomato Basil Sauté');\n\n    // Add ingredients to recipe\n    const addIngredientButton: any = screen.getByTestId('add-ingredient');\n    void user.click(addIngredientButton);\n    void user.click(addIngredientButton);\n    void user.click(addIngredientButton);\n\n    // Fill in ingredient details\n    void user.type(screen.getByTestId('ingredient-quantity-0'), '2 cups');\n    void user.type(screen.getByTestId('ingredient-name-0'), 'Fresh Tomatoes');\n\n    void user.type(screen.getByTestId('ingredient-quantity-1'), '1/4 cup');\n    void user.type(screen.getByTestId('ingredient-name-1'), 'Fresh Basil');\n\n    void user.type(screen.getByTestId('ingredient-quantity-2'), '2 tbsp');\n    void user.type(screen.getByTestId('ingredient-name-2'), 'Olive Oil');\n\n    // Add cooking steps\n    const addStepButton: any = screen.getByTestId('add-step');\n    void user.click(addStepButton);\n    void user.click(addStepButton);\n\n    user.type(screen.getByTestId('step-instruction-0'), 'Heat olive oil in a large pan over medium heat');\n    void user.type(screen.getByTestId('step-timing-0'), '2 min');\n\n    user.type(screen.getByTestId('step-instruction-1'), 'Add tomatoes and basil, sauté until tender');\n    void user.type(screen.getByTestId('step-timing-1'), '8 min');\n\n    // Verify recipe can be saved\n    const saveButton: any = screen.getByTestId('save-recipe');\n    expect(saveButton).toBeEnabled();\n\n    // Save the recipe\n    void user.click(saveButton);\n\n    // Verify the complete workflow\n    expect(screen.getByDisplayValue('Italian Tomato Basil Sauté')).toBeInTheDocument();\n    expect(screen.getByText('Ingredients: 3')).toBeInTheDocument();\n    expect(screen.getByText('Steps: 2')).toBeInTheDocument();\n  });\n\n  it('handles ingredient exploration workflow', async () => {\n    const user: any = userEvent.setup();\n\n    act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    await waitFor(() => {\n      expect(screen.getByTestId('ingredient-recommender')).toBeInTheDocument();\n    });\n\n    // Expand ingredient details\n    const expandTomatoes: any = screen.getByTestId('expand-tomatoes');\n    void user.click(expandTomatoes);\n\n    // Verify details are shown\n    expect(screen.getByTestId('details-tomatoes')).toBeInTheDocument();\n    expect(screen.getByText('Category: Vegetables')).toBeInTheDocument();\n    expect(screen.getByText('Properties: Umami, Acidic, Fresh')).toBeInTheDocument();\n\n    // Expand another ingredient\n    const expandGarlic: any = screen.getByTestId('expand-garlic');\n    void user.click(expandGarlic);\n\n    expect(screen.getByTestId('details-garlic')).toBeInTheDocument();\n    expect(screen.getByText('Category: Aromatics')).toBeInTheDocument();\n\n    // Collapse first ingredient\n    void user.click(expandTomatoes);\n    expect(screen.queryByTestId('details-tomatoes')).not.toBeInTheDocument();\n\n    // Select multiple ingredients\n    void user.click(screen.getByTestId('ingredient-tomatoes'));\n    void user.click(screen.getByTestId('ingredient-garlic'));\n    void user.click(screen.getByTestId('ingredient-basil'));\n\n    // Verify selection summary\n    expect(screen.getByText('Selected Ingredients (3)')).toBeInTheDocument();\n    expect(screen.getByText('Tomatoes, Garlic, Basil')).toBeInTheDocument();\n  });\n\n  it('handles cooking method exploration workflow', async () => {\n    const user: any = userEvent.setup();\n\n    act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    await waitFor(() => {\n      expect(screen.getByTestId('cooking-methods')).toBeInTheDocument();\n    });\n\n    // Select different cooking methods and view details\n    const roastMethod: any = screen.getByTestId('method-roast');\n    void user.click(roastMethod);\n\n    expect(screen.getByTestId('method-details-roast')).toBeInTheDocument();\n    expect(screen.getByText('Cooking in the oven with dry heat')).toBeInTheDocument();\n\n    // Switch to another method\n    const grillMethod: any = screen.getByTestId('method-grill');\n    void user.click(grillMethod);\n\n    expect(screen.getByTestId('method-details-grill')).toBeInTheDocument();\n    expect(screen.getByText('Cooking over direct heat')).toBeInTheDocument();\n\n    // Previous method details should be hidden\n    expect(screen.queryByTestId('method-details-roast')).not.toBeInTheDocument();\n\n    // Test view more functionality\n    const viewMoreButton: any = screen.getByTestId('view-more-methods');\n    expect(viewMoreButton).toBeInTheDocument();\n  });\n\n  it('handles complete recipe creation workflow', async () => {\n    const user: any = userEvent.setup();\n\n    act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    await waitFor(() => {\n      expect(screen.getByTestId('recipe-builder')).toBeInTheDocument();\n    });\n\n    // Create a complete recipe from scratch\n    const recipeNameInput: any = screen.getByTestId('recipe-name-input');\n    void user.type(recipeNameInput, 'Mediterranean Chicken');\n\n    // Update recipe metadata\n    const servingsInput: any = screen.getByTestId('servings-input');\n    const prepTimeInput: any = screen.getByTestId('prep-time-input');\n    const cookTimeInput: any = screen.getByTestId('cook-time-input');\n\n    void user.clear(servingsInput);\n    void user.type(servingsInput, '6');\n\n    void user.clear(prepTimeInput);\n    void user.type(prepTimeInput, '20');\n\n    void user.clear(cookTimeInput);\n    void user.type(cookTimeInput, '45');\n\n    // Add multiple ingredients\n    for (let i: any = 0; i < 4; i++) {\n      void user.click(screen.getByTestId('add-ingredient'));\n    }\n\n    const ingredients: any = [\n      { quantity: '2 lbs', name: 'Chicken Breast' },\n      { quantity: '1 cup', name: 'Cherry Tomatoes' },\n      { quantity: '1/2 cup', name: 'Kalamata Olives' },\n      { quantity: '1/4 cup', name: 'Olive Oil' },\n    ];\n\n    for (let i: any = 0; i < ingredients.length; i++) {\n      void user.type(screen.getByTestId(`ingredient-quantity-${i}`), ingredients[i].quantity);\n      void user.type(screen.getByTestId(`ingredient-name-${i}`), ingredients[i].name);\n    }\n\n    // Add cooking steps\n    for (let i: any = 0; i < 3; i++) {\n      void user.click(screen.getByTestId('add-step'));\n    }\n\n    const steps: any = [\n      { instruction: 'Preheat oven to 375°F and prepare chicken', timing: '5 min' },\n      { instruction: 'Sear chicken in olive oil until golden', timing: '10 min' },\n      { instruction: 'Add tomatoes and olives, bake until done', timing: '30 min' },\n    ];\n\n    for (let i: any = 0; i < steps.length; i++) {\n      void user.type(screen.getByTestId(`step-instruction-${i}`), steps[i].instruction);\n      void user.type(screen.getByTestId(`step-timing-${i}`), steps[i].timing);\n    }\n\n    // Verify recipe summary\n    const summary: any = screen.getByTestId('recipe-summary');\n    expect(summary).toHaveTextContent('Name: Mediterranean Chicken');\n    expect(summary).toHaveTextContent('Servings: 6');\n    expect(summary).toHaveTextContent('Total Time: 65 minutes');\n    expect(summary).toHaveTextContent('Ingredients: 4');\n    expect(summary).toHaveTextContent('Steps: 3');\n\n    // Verify save button is enabled\n    const saveButton: any = screen.getByTestId('save-recipe');\n    expect(saveButton).toBeEnabled();\n    expect(saveButton).toHaveClass('enabled');\n\n    // Test ingredient removal\n    void user.click(screen.getByTestId('remove-ingredient-3'));\n    expect(screen.getByText('Ingredients: 3')).toBeInTheDocument();\n\n    // Test step removal\n    void user.click(screen.getByTestId('remove-step-0'));\n    expect(screen.getByText('Steps: 2')).toBeInTheDocument();\n\n    // Verify step renumbering\n    expect(screen.getByDisplayValue('Sear chicken in olive oil until golden')).toBeInTheDocument();\n  });\n\n  it('handles navigation and state preservation workflow', async () => {\n    const user: any = userEvent.setup();\n    const mockOnSectionNavigate = jest.fn() as any;\n\n    act(async () => {\n      render(<MainPageLayout onSectionNavigate={mockOnSectionNavigate} />);\n    });\n\n    await waitFor(() => {\n      expect(screen.getByTestId('cuisine-recommender')).toBeInTheDocument();\n    });\n\n    // Make selections across different components\n    void user.click(screen.getByTestId('cuisine-italian'));\n    void user.click(screen.getByTestId('ingredient-tomatoes'));\n    void user.click(screen.getByTestId('method-sauté'));\n\n    // Navigate between sections\n    const cuisineNavButton: any = screen.getByText('Cuisine Recommendations');\n    void user.click(cuisineNavButton);\n    expect(mockOnSectionNavigate).toHaveBeenCalledWith('cuisine');\n\n    const ingredientsNavButton: any = screen.getByText('Ingredient Recommendations');\n    void user.click(ingredientsNavButton);\n    expect(mockOnSectionNavigate).toHaveBeenCalledWith('ingredients');\n\n    // Verify state preservation was called\n    await waitFor(() => {\n      expect(mockNavigationState.saveState).toHaveBeenCalled();\n    });\n\n    // Verify selections are maintained after navigation\n    expect(screen.getByTestId('recipe-recommendations')).toBeInTheDocument();\n    expect(screen.getByText('Selected Ingredients (1)')).toBeInTheDocument();\n    expect(screen.getByTestId('method-details-sauté')).toBeInTheDocument();\n  });\n\n  it('handles error recovery workflow', async () => {\n    const user: any = userEvent.setup();\n\n    // Mock console.error to avoid noise\n    const consoleSpy: any = jest.spyOn(console, 'error').mockImplementation(() => {});\n\n    act(async () => {\n      render(<MainPageLayout />);\n    });\n\n    await waitFor(() => {\n      expect(screen.getByTestId('recipe-builder')).toBeInTheDocument();\n    });\n\n    // Simulate user creating a recipe and encountering an error\n    const recipeNameInput: any = screen.getByTestId('recipe-name-input');\n    void user.type(recipeNameInput, 'Test Recipe');\n\n    // Add ingredient\n    void user.click(screen.getByTestId('add-ingredient'));\n    void user.type(screen.getByTestId('ingredient-name-0'), 'Test Ingredient');\n\n    // Add step\n    void user.click(screen.getByTestId('add-step'));\n    void user.type(screen.getByTestId('step-instruction-0'), 'Test step');\n\n    // Verify recipe is valid\n    expect(screen.getByTestId('save-recipe')).toBeEnabled();\n\n    // The main page should continue to function despite any errors\n    expect(screen.getByText('What to Eat Next')).toBeInTheDocument();\n    expect(screen.getByTestId('recipe-builder')).toBeInTheDocument();\n\n    consoleSpy.mockRestore();\n  });\n});\n"],"version":3}