{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/components/analytics/PerformanceAnalyticsDashboard.tsx","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/components/analytics/PerformanceAnalyticsDashboard.tsx"],"sourcesContent":["/**\n * Performance Analytics Dashboard Component\n * \n * Displays comprehensive performance metrics, caching statistics,\n * and user interaction analytics for recommendation systems\n */\n\n'use client';\n\nimport React, { useState } from 'react';\nimport { \n  BarChart3, \n  Clock, \n  Database, \n  TrendingUp, \n  Users, \n  Zap,\n  ChevronDown,\n  ChevronUp,\n  Info,\n  RefreshCw\n} from 'lucide-react';\nimport { useRecommendationAnalytics } from '@/hooks/useRecommendationAnalytics';\n\n// ========== INTERFACES ==========\n\ninterface PerformanceAnalyticsDashboardProps {\n  className?: string;\n  compact?: boolean;\n  showDetails?: boolean;\n}\n\ninterface MetricCardProps {\n  title: string;\n  value: string | number;\n  unit?: string;\n  trend?: number;\n  icon: React.ReactNode;\n  color: string;\n  description?: string;\n}\n\n// ========== COMPONENTS ==========\n\nconst MetricCard: React.FC<MetricCardProps> = ({ \n  title, \n  value, \n  unit, \n  trend, \n  icon, \n  color, \n  description \n}) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  const formatValue = (val: string | number): string => {\n    if (typeof val === 'number') {\n      if (val < 1) {\n        return val.toFixed(3);\n      } else if (val < 100) {\n        return val.toFixed(1);\n      } else {\n        return Math.round(val).toString();\n      }\n    }\n    return val;\n  };\n\n  const getTrendColor = (trendValue?: number): string => {\n    if (!trendValue) return 'text-gray-500';\n    return trendValue > 0 ? 'text-green-600' : 'text-red-600';\n  };\n\n  const getTrendIcon = (trendValue?: number): string => {\n    if (!trendValue) return '';\n    return trendValue > 0 ? '↗' : '↘';\n  };\n\n  return (\n    <div className={`bg-white rounded-lg border border-gray-200 p-4 hover:shadow-md transition-shadow relative`}>\n      <div className=\"flex items-center justify-between mb-2\">\n        <div className={`p-2 rounded-lg ${color}`}>\n          {icon}\n        </div>\n        {description && (\n          <div \n            className=\"relative\"\n            onMouseEnter={() => setShowTooltip(true)}\n            onMouseLeave={() => setShowTooltip(false)}\n          >\n            <Info size={16} className=\"text-gray-400 cursor-help\" />\n            {showTooltip && (\n              <div className=\"absolute right-0 top-6 bg-gray-800 text-white text-xs rounded p-2 whitespace-nowrap z-10\">\n                {description}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      \n      <div className=\"space-y-1\">\n        <h3 className=\"text-sm font-medium text-gray-600\">{title}</h3>\n        <div className=\"flex items-baseline space-x-2\">\n          <span className=\"text-2xl font-bold text-gray-900\">\n            {formatValue(value)}\n          </span>\n          {unit && (\n            <span className=\"text-sm text-gray-500\">{unit}</span>\n          )}\n          {trend !== undefined && (\n            <span className={`text-sm font-medium ${getTrendColor(trend)}`}>\n              {getTrendIcon(trend)} {Math.abs(trend).toFixed(1)}%\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst PerformanceChart: React.FC<{ \n  data: number[]; \n  label: string; \n  color: string;\n  height?: number;\n}> = ({ data, label, color, height = 60 }) => {\n  if (data.length === 0) {\n    return (\n      <div className={`flex items-center justify-center bg-gray-50 rounded`} style={{ height }}>\n        <span className=\"text-sm text-gray-500\">No data available</span>\n      </div>\n    );\n  }\n\n  const max = Math.max(...data);\n  const min = Math.min(...data);\n  const range = max - min || 1;\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex items-center justify-between\">\n        <span className=\"text-sm font-medium text-gray-700\">{label}</span>\n        <span className=\"text-xs text-gray-500\">\n          {data.length} data points\n        </span>\n      </div>\n      <div className={`relative bg-gray-50 rounded overflow-hidden`} style={{ height }}>\n        <svg width=\"100%\" height=\"100%\" className=\"absolute inset-0\">\n          <polyline\n            fill=\"none\"\n            stroke={color}\n            strokeWidth=\"2\"\n            points={data.map((value, index) => {\n              const x = (index / (data.length - 1)) * 100;\n              const y = 100 - ((value - min) / range) * 80 - 10;\n              return `${x},${y}`;\n            }).join(' ')}\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\n// ========== MAIN COMPONENT ==========\n\nexport const PerformanceAnalyticsDashboard: React.FC<PerformanceAnalyticsDashboardProps> = ({\n  className = '',\n  compact = false,\n  showDetails = true\n}) => {\n  const [analyticsState, analyticsActions] = useRecommendationAnalytics({\n    enablePerformanceTracking: true,\n    enableCaching: true,\n    enableInteractionTracking: true,\n    metricsUpdateInterval: 5000\n  });\n\n  const [isExpanded, setIsExpanded] = useState(!compact);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const { metrics, cacheStats, performanceTrends, isLoading, error } = analyticsState;\n\n  // ========== EVENT HANDLERS ==========\n\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    try {\n      // Force a metrics update by getting a fresh snapshot\n      analyticsActions.getAnalyticsSnapshot();\n      await new Promise(resolve => setTimeout(resolve, 500)); // Brief delay for visual feedback\n    } finally {\n      setRefreshing(false);\n    }\n  };\n\n  const handleClearAnalytics = () => {\n    if (confirm('Are you sure you want to clear all analytics data?')) {\n      analyticsActions.clearAnalytics();\n    }\n  };\n\n  // ========== RENDER HELPERS ==========\n\n  const renderCompactView = () => (\n    <div className=\"flex items-center space-x-4 p-3 bg-white rounded-lg border border-gray-200\">\n      <div className=\"flex items-center space-x-2\">\n        <Zap size={16} className=\"text-blue-500\" />\n        <span className=\"text-sm font-medium\">Performance</span>\n      </div>\n      \n      <div className=\"flex items-center space-x-4 text-sm\">\n        <div className=\"flex items-center space-x-1\">\n          <Clock size={14} className=\"text-gray-400\" />\n          <span>{metrics?.loadTime?.toFixed(0) || 0}ms</span>\n        </div>\n        \n        <div className=\"flex items-center space-x-1\">\n          <Database size={14} className=\"text-gray-400\" />\n          <span>{(cacheStats.hitRate * 100).toFixed(0)}%</span>\n        </div>\n        \n        <div className=\"flex items-center space-x-1\">\n          <TrendingUp size={14} className=\"text-gray-400\" />\n          <span>{performanceTrends.performanceScore.toFixed(0)}</span>\n        </div>\n      </div>\n\n      <button\n        onClick={() => setIsExpanded(!isExpanded)}\n        className=\"ml-auto p-1 hover:bg-gray-100 rounded\"\n      >\n        {isExpanded ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\n      </button>\n    </div>\n  );\n\n  const renderDetailedView = () => (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-2\">\n          <BarChart3 size={20} className=\"text-blue-500\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">Performance Analytics</h3>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={handleRefresh}\n            disabled={refreshing}\n            className=\"flex items-center space-x-1 px-3 py-1 text-sm bg-blue-50 hover:bg-blue-100 text-blue-700 rounded transition-colors disabled:opacity-50\"\n          >\n            <RefreshCw size={14} className={refreshing ? 'animate-spin' : ''} />\n            <span>Refresh</span>\n          </button>\n          \n          <button\n            onClick={handleClearAnalytics}\n            className=\"px-3 py-1 text-sm bg-gray-50 hover:bg-gray-100 text-gray-700 rounded transition-colors\"\n          >\n            Clear Data\n          </button>\n          \n          {compact && (\n            <button\n              onClick={() => setIsExpanded(!isExpanded)}\n              className=\"p-1 hover:bg-gray-100 rounded\"\n            >\n              <ChevronUp size={16} />\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Error State */}\n      {error && (\n        <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <div className=\"flex items-center space-x-2 text-red-700\">\n            <Info size={16} />\n            <span className=\"font-medium\">Analytics Error</span>\n          </div>\n          <p className=\"text-sm text-red-600 mt-1\">{error}</p>\n        </div>\n      )}\n\n      {/* Loading State */}\n      {isLoading && (\n        <div className=\"flex items-center justify-center p-8\">\n          <div className=\"flex items-center space-x-2 text-gray-500\">\n            <RefreshCw size={16} className=\"animate-spin\" />\n            <span>Loading analytics...</span>\n          </div>\n        </div>\n      )}\n\n      {/* Metrics Grid */}\n      {!isLoading && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <MetricCard\n            title=\"Load Time\"\n            value={metrics?.loadTime || 0}\n            unit=\"ms\"\n            icon={<Clock size={16} className=\"text-white\" />}\n            color=\"bg-blue-500\"\n            description=\"Average time to load recommendations\"\n          />\n          \n          <MetricCard\n            title=\"Cache Hit Rate\"\n            value={(cacheStats.hitRate * 100)}\n            unit=\"%\"\n            icon={<Database size={16} className=\"text-white\" />}\n            color=\"bg-green-500\"\n            description=\"Percentage of requests served from cache\"\n          />\n          \n          <MetricCard\n            title=\"Performance Score\"\n            value={performanceTrends.performanceScore}\n            unit=\"/100\"\n            icon={<TrendingUp size={16} className=\"text-white\" />}\n            color=\"bg-purple-500\"\n            description=\"Overall performance rating\"\n          />\n          \n          <MetricCard\n            title=\"Interaction Rate\"\n            value={metrics?.userInteractionRate || 0}\n            unit=\"/min\"\n            icon={<Users size={16} className=\"text-white\" />}\n            color=\"bg-orange-500\"\n            description=\"User interactions per minute\"\n          />\n        </div>\n      )}\n\n      {/* Performance Charts */}\n      {showDetails && !isLoading && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <PerformanceChart\n              data={performanceTrends.loadTimeTrend || []}\n              label=\"Load Time Trend\"\n              color=\"#3B82F6\"\n            />\n          </div>\n          \n          <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <PerformanceChart\n              data={performanceTrends.cacheHitRateTrend || []}\n              label=\"Cache Hit Rate Trend\"\n              color=\"#10B981\"\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Cache Statistics */}\n      {showDetails && !isLoading && (\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Cache Statistics</h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">{cacheStats.totalEntries}</div>\n              <div className=\"text-sm text-gray-500\">Total Entries</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {(cacheStats.memoryUsage / 1024).toFixed(1)}\n              </div>\n              <div className=\"text-sm text-gray-500\">Memory (KB)</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {(cacheStats.hitRate * 100).toFixed(1)}%\n              </div>\n              <div className=\"text-sm text-gray-500\">Hit Rate</div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  // ========== RENDER ==========\n\n  return (\n    <div className={`${className}`}>\n      {compact && !isExpanded ? renderCompactView() : renderDetailedView()}\n    </div>\n  );\n};\n\nexport default PerformanceAnalyticsDashboard;"],"version":3}