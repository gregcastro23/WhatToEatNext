{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/data/ingredients/oils/index.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/data/ingredients/oils/index.ts"],"sourcesContent":["import type { IngredientMapping } from '@/data/ingredients/types';\nimport { oils } from './oils';\nimport { enhanceOilProperties, fixIngredientMappings } from '@/utils/elementalUtils';\n\nexport { oils };\n\n// Process oils to add enhanced properties\nexport const processedOils: Record<string, IngredientMapping> = fixIngredientMappings(oils);\n\n// Export enhanced oils as default\nexport default processedOils;\n\n// Export specific oil categories\nexport const cookingOils = Object.entries(processedOils)\n  .filter(([_, value]) => value.subCategory === 'cooking')\n  .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\nexport const finishingOils = Object.entries(processedOils)\n  .filter(([_, value]) => value.subCategory === 'finishing')\n  .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\nexport const supplementOils = Object.entries(processedOils)\n  .filter(([_, value]) => value.subCategory === 'supplement')\n  .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\nexport const specialtyOils = Object.entries(processedOils)\n  .filter(([_, value]) => \n    !value.subCategory || \n    (value.subCategory !== 'cooking' && \n     value.subCategory !== 'finishing' && \n     value.subCategory !== 'supplement'))\n  .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\n// Export by elemental properties\nexport const fireOils = Object.entries(processedOils)\n  .filter(([_, value]) => \n    value.elementalProperties.Fire >= 0.4 || \n    (typeof value.astrologicalProfile?.elementalAffinity === 'object' && value.astrologicalProfile.elementalAffinity?.base === 'Fire'))\n  .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\nexport const waterOils = Object.entries(processedOils)\n  .filter(([_, value]) => \n    value.elementalProperties.Water >= 0.4 || \n    (typeof value.astrologicalProfile?.elementalAffinity === 'object' && value.astrologicalProfile.elementalAffinity?.base === 'Water'))\n  .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\nexport const earthOils = Object.entries(processedOils)\n  .filter(([_, value]) => \n    value.elementalProperties.Earth >= 0.4 || \n    (typeof value.astrologicalProfile?.elementalAffinity === 'object' && value.astrologicalProfile.elementalAffinity?.base === 'Earth'))\n  .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\nexport const airOils = Object.entries(processedOils)\n  .filter(([_, value]) => \n    value.elementalProperties.Air >= 0.4 || \n    (typeof value.astrologicalProfile?.elementalAffinity === 'object' && value.astrologicalProfile.elementalAffinity?.base === 'Air'))\n  .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\n// Export by culinary applications\nexport const highHeatOils = Object.entries(processedOils)\n  .filter(([_, value]) => \n    (typeof value.smokePoint === 'object' && value.smokePoint !== null && 'fahrenheit' in value.smokePoint && (value.smokePoint as any).fahrenheit >= 400) || \n    (value.culinaryApplications?.frying || value.culinaryApplications?.deepfrying))\n  .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\nexport const bakingOils = Object.entries(processedOils)\n  .filter(([_, value]) => value.culinaryApplications?.baking)\n  .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\nexport const dressingOils = Object.entries(processedOils)\n  .filter(([_, value]) => value.culinaryApplications?.dressings)\n  .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\nexport const nutOils = Object.entries(processedOils)\n  .filter(([key, _]) => \n    key.includes('walnut') || \n    key.includes('almond') || \n    key.includes('macadamia') || \n    key.includes('peanut'))\n  .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n\n// For backward compatibility\nexport const allOils: Record<string, IngredientMapping> = processedOils; "],"version":3}