{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/components/layout/MainPageLayout.tsx","mappings":";AAAA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEb,gDAA4C;AAC5C,+CAA0H;AAE1H,gGAAwE;AACxE,kFAA+E;AAC/E,8DAAmE;AACnE,yDAO+B;AAC/B,uEAOsC;AACtC,mGAAmG;AACnG,2CAAwC;AACxC,mDAAmD;AACnD,+EAAoG;AAEpG,2DAA2D;AAC3D,MAAM,qBAAqB,GAAG,IAAA,YAAI,EAAC,GAAG,EAAE,mDAAQ,0CAA0C,GAAC,CAAC,CAAC;AAC7F,MAAM,kBAAkB,GAAG,IAAA,YAAI,EAAC,GAAG,EAAE,mDAAQ,iCAAiC,GAAC,CAAC,CAAC;AACjF,MAAM,qBAAqB,GAAG,IAAA,YAAI,EAAC,GAAG,EAAE,mDAAQ,oCAAoC,GAAC,CAAC,CAAC;AACvF,MAAM,qBAAqB,GAAG,IAAA,YAAI,EAAC,GAAG,EAAE,mDAAQ,oCAAoC,GAAC,CAAC,CAAC;AACvF,MAAM,mBAAmB,GAAG,IAAA,YAAI,EAAC,GAAG,EAAE,mDAAQ,0CAA0C,GAAC,CAAC,CAAC;AAyC3F,MAAM,eAAe,GAAG,IAAA,qBAAa,EAA6B,IAAI,CAAC,CAAC;AAEjE,MAAM,kBAAkB,GAAG,GAAG,EAAE;IACrC,MAAM,OAAO,GAAG,IAAA,kBAAU,EAAC,eAAe,CAAC,CAAC;IAC5C,IAAI,CAAC,OAAO,EAAE;QACZ,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;KAC1E;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AANW,QAAA,kBAAkB,sBAM7B;AAEF,6DAA6D;AAC7D,MAAM,yBAAyB,GAAG,IAAA,YAAI,EAAC,SAAS,wBAAwB,CAAC,EACvE,aAAa,EAGd;IACC,OAAO,CACL,gCAAK,SAAS,EAAC,4DAA4D,YACzE,iCAAK,SAAS,EAAC,6BAA6B,aAC1C,gCAAK,SAAS,EAAC,gEAAgE,GAAO,EACtF,kCAAM,SAAS,EAAC,eAAe,yBAAU,aAAa,WAAW,IAC7D,GACF,CACP,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,MAAM,cAAc,GAAkC,IAAA,YAAI,EAAC,SAAS,cAAc,CAAC,EACjF,QAAQ,EACR,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,EAClD,OAAO,GAAG,KAAK,EACf,iBAAiB,EAClB;IACC,MAAM,MAAM,GAAG,IAAA,sBAAS,GAAE,CAAC;IAC3B,MAAM,EAAE,KAAK,EAAE,kBAAkB,EAAE,SAAS,EAAE,GAAG,IAAA,qBAAa,GAAE,CAAC;IAEjE,mCAAmC;IACnC,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,IAAA,yCAAkB,GAAE,CAAC;IAChF,MAAM,EAAE,qBAAqB,EAAE,GAAG,IAAA,4CAAqB,EAAC,WAAW,CAAC,CAAC;IACrE,IAAA,0CAAmB,GAAE,CAAC;IAEtB,iDAAiD;IACjD,MAAM,oBAAoB,GAAG,IAAA,sDAA2B,GAAE,CAAC;IAC3D,mCAAmC;IACnC,WAAW;IACX,4BAA4B;IAC5B,8BAA8B;IAC9B,oCAAoC;IACpC,8BAA8B;IAC9B,+BAA+B;IAC/B,4DAA4D;IAE5D,mCAAmC;IACnC,wGAAwG;IACxG,+GAA+G;IAE/G,iFAAiF;IACjF,4GAA4G;IAC5G,qCAAqC;IACrC,sCAAsC;IACtC,kCAAkC;IAClC,uCAAuC;IACvC,uCAAuC;IACvC,MAAM;IAEN,iHAAiH;IAEjH,4CAA4C;IAC5C,MAAM,cAAc,GAAG,IAAI,CAAC;IAC5B,MAAM,mBAAmB,GAAG,IAAI,CAAC;IACjC,MAAM,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,GAAG,IAAA,4CAA4B,GAAE,CAAC;IACvG,MAAM,EAAE,eAAe,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,GAAG,IAAA,yCAAyB,EAAC,IAAI,CAAC,CAAC;IACpG,MAAM,EAAE,aAAa,EAAE,YAAY,EAAE,mBAAmB,EAAE,GAAG,IAAA,6CAA6B,GAAE,CAAC;IAC7F,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE,aAAa,EAAE,GAAG,IAAA,qCAAqB,EAAC,KAAK,CAAC,CAAC,CAAC,aAAa;IAE9F,oDAAoD;IACpD,0EAA0E;IAE1E,uCAAuC;IACvC,MAAM,EACJ,wBAAwB,EAAE,gBAAgB,EAC1C,qBAAqB,EACrB,yCAAyC,EAAE,iCAAiC,EAC5E,2BAA2B,EAC5B,GAAG,IAAA,0EAAqC,GAAE,CAAC;IAE5C,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,IAAA,gBAAQ,EAA6D;QAC7G,OAAO,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE;QACxC,WAAW,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE;QAC5C,OAAO,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE;QACxC,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE;KACxC,CAAC,CAAC;IAEH,4DAA4D;IAC5D,MAAM,CAAC,mBAAmB,EAAE,sBAAsB,CAAC,GAAG,IAAA,gBAAQ,EAAW,EAAE,CAAC,CAAC;IAC7E,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,IAAA,gBAAQ,EAAgB,IAAI,CAAC,CAAC;IAC5E,MAAM,CAAC,sBAAsB,EAAE,yBAAyB,CAAC,GAAG,IAAA,gBAAQ,EAAW,EAAE,CAAC,CAAC;IACnF,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,IAAA,gBAAQ,EAAiC,IAAI,CAAC,CAAC;IACzF,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,IAAA,gBAAQ,EAAgB,IAAI,CAAC,CAAC;IACxE,MAAM,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,GAAG,IAAA,gBAAQ,EAAW,EAAE,CAAC,CAAC;IAEzE,+BAA+B;IAC/B,MAAM,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,GAAG,IAAA,gBAAQ,EAA8C,EAAE,CAAC,CAAC;IAE5G,mCAAmC;IACnC,MAAM,CAAC,oBAAoB,EAAE,uBAAuB,CAAC,GAAG,IAAA,gBAAQ,EAAiC,IAAI,CAAC,CAAC;IACvG,MAAM,CAAC,kBAAkB,EAAE,qBAAqB,CAAC,GAAG,IAAA,gBAAQ,EAA0B,EAAE,CAAC,CAAC;IAC1F,MAAM,CAAC,kBAAkB,EAAE,qBAAqB,CAAC,GAAG,IAAA,gBAAQ,EAAiC,IAAI,CAAC,CAAC;IAEnG,mDAAmD;IACnD,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,aAAa,GAAG,WAAW,EAAE,CAAC;QACpC,IAAI,aAAa,EAAE;YACjB,IAAI,aAAa,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChD,sBAAsB,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;aAC3D;YACD,IAAI,aAAa,CAAC,eAAe,EAAE;gBACjC,kBAAkB,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnD,yBAAyB,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;aACjE;YACD,IAAI,aAAa,CAAC,aAAa,EAAE;gBAC/B,gBAAgB,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;aAC/C;YACD,IAAI,aAAa,CAAC,aAAa,EAAE;gBAC/B,gBAAgB,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;aAC/C;YACD,IAAI,aAAa,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9C,oBAAoB,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;aACvD;YAED,eAAM,CAAC,KAAK,CAAC,6DAA6D,CAAC,CAAC;SAC7E;QAED,qEAAqE;QACrE,UAAU,CAAC,GAAG,EAAE;YACd,qBAAqB,EAAE,CAAC;QAC1B,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC,EAAE,CAAC,WAAW,EAAE,qBAAqB,CAAC,CAAC,CAAC;IAEzC,iDAAiD;IACjD,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,kBAAkB,GAAG,KAAK,IAAI,EAAE;YACpC,IAAI;gBACF,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC,WAAW,EAAE,CAAC;gBAC1D,uBAAuB,CAAC,QAAQ,CAAC,CAAC;gBAElC,iFAAiF;gBACjF,mDAAmD;gBACnD,qFAAqF;gBAErF,kEAAkE;gBAClE,2DAA2D;gBAC3D,iDAAiD;gBACjD,4CAA4C;gBAC5C,oEAAoE;gBACpE,QAAQ;gBACR,uCAAuC;gBACvC,KAAK;gBACL,mCAAmC;gBACnC,+EAA+E;gBAC/E,MAAM;gBACN,IAAI;gBAEJ,sEAAsE;gBACtE,kFAAkF;gBAClF,kFAAkF;aAEnF;YAAC,OAAO,KAAK,EAAE;gBACd,eAAM,CAAC,KAAK,CAAC,gDAAgD,EAAE,KAAK,CAAC,CAAC;aACvE;QACH,CAAC,CAAC;QAEF,KAAK,kBAAkB,EAAE,CAAC;IAC5B,CAAC,EAAE,CAAC,oBAAoB,EAAE,eAAe,EAAE,mBAAmB,CAAC,CAAC,CAAC;IAEjE,2DAA2D;IAC3D,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,SAAS,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;QAEpC,MAAM,kBAAkB,GAAG,GAAG,EAAE;YAC9B,MAAM,UAAU,GAAG,WAAW,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;YACjD,MAAM,WAAW,GAAI,WAAqE,CAAC,MAAM,EAAE,cAAc,GAAG,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC;YAErI,MAAM,OAAO,GAAG;gBACd,UAAU;gBACV,WAAW;gBACX,cAAc,EAAE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM;gBACjD,iBAAiB,EAAE,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;aAChG,CAAC;YAEF,qBAAqB,CAAC,OAAO,CAAC,CAAC;YAE/B,+EAA+E;YAC/E,kDAAkD;YAClD,gBAAgB;YAChB,gBAAgB;YAChB,MAAM;YACN,GAAG;YACH,+BAA+B;YAC/B,oEAAoE;YACpE,6EAA6E;YAC7E,IAAI;QACN,CAAC,CAAC;QAEF,yDAAyD;QACzD,MAAM,SAAS,GAAG,UAAU,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;QAEtD,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,EAAE,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC,CAAC;IAEvC,wDAAwD;IACxD,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,iBAAiB,GAAG,KAAK,IAAI,EAAE;YACnC,IAAI;gBACF,yDAAyD;gBACzD,MAAM,cAAc,GAAwB;oBAC1C,IAAI,EAAE,sBAAsB,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,GAAG,GAAG;oBAChH,KAAK,EAAE,mBAAmB,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,GAAG,GAAG;oBACpG,KAAK,EAAE,mBAAmB,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,GAAG,GAAG;oBACpG,GAAG,EAAE,mBAAmB,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,GAAG,GAAG;iBACnG,CAAC;gBAEF,0DAA0D;gBAC1D,mCAAmC;gBACnC,gCAAgC;gBAChC,yCAAyC;gBACzC,yBAAyB;gBACzB,2BAA2B;gBAC3B,uBAAuB;gBACvB,8BAA8B;gBAC9B,qBAAqB;gBACrB,qBAAqB;gBACrB,wBAAwB;gBACxB,MAAM;gBACN,MAAM;aACP;YAAC,OAAO,KAAK,EAAE;gBACd,eAAM,CAAC,KAAK,CAAC,2CAA2C,EAAE,KAAK,CAAC,CAAC;aAClE;QACH,CAAC,CAAC;QAEF,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,IAAI,eAAe,IAAI,sBAAsB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1F,iBAAiB,EAAE,CAAC;SACrB;IACH,CAAC,EAAE,CAAC,mBAAmB,EAAE,eAAe,EAAE,sBAAsB,EAAE,aAAa,EAAE,aAAa,EAAE,iBAAiB,CAAC,CAAC,CAAC;IAEpH,4FAA4F;IAC5F,oBAAoB;IACpB,uBAAuB;IACvB,wEAAwE;IACxE,KAAK;IACL,mBAAmB;IACnB,wBAAwB;IACxB,0CAA0C;IAC1C,OAAO;IACP,yCAAyC;IAEzC,yDAAyD;IACzD,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;YAClC,MAAM,6BAA6B,GAAG,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;gBAC3E,IAAI,EAAE,UAAU;gBAChB,mBAAmB,EAAE;oBACnB,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;oBAC/E,KAAK,EAAE,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;oBAC9E,KAAK,EAAE,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;oBAC9E,GAAG,EAAE,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;iBACrD;gBACxB,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAC1C,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;wBACvC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO;aAC3D,CAAC,CAAC,CAAC;YAEJ,mBAAmB,CAAC,6BAA6B,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;gBAC/D,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;oBAC7B,eAAM,CAAC,IAAI,CAAC,2CAA2C,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;iBACzE;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBACf,eAAM,CAAC,KAAK,CAAC,0CAA0C,EAAE,KAAK,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;SACJ;IACH,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAE1B,gDAAgD;IAChD,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,cAAc,GAAG,KAAK,IAAI,EAAE;YAChC,IAAI;gBACF,MAAM,YAAY,GAAG;oBACnB,SAAS,EAAE,kBAAkB,CAAC,UAAU,IAAI,CAAC;oBAC7C,WAAW,EAAE,kBAAkB,CAAC,WAAW,IAAI,CAAC;oBAChD,UAAU,EAAE,GAAG,GAAG,IAAI;oBACtB,UAAU,EAAE,CAAC,CAAC,kCAAkC;iBACjD,CAAC;gBAEF,MAAM,aAAa,GAAG,MAAM,mBAAmB,CAAC,YAAY,CAAC,CAAC;gBAC9D,IAAI,aAAa,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;oBAC3C,eAAM,CAAC,IAAI,CAAC,gCAAgC,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;iBACrE;aACF;YAAC,OAAO,KAAK,EAAE;gBACd,eAAM,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;aACxD;QACH,CAAC,CAAC;QAEF,mCAAmC;QACnC,MAAM,eAAe,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,KAAK,cAAc,EAAE,EAAE,KAAK,CAAC,CAAC;QAExE,wBAAwB;QACxB,cAAc,EAAE,CAAC;QAEjB,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;IAC9C,CAAC,EAAE,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,CAAC,CAAC;IAE9C,oDAAoD;IACpD,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,kBAAkB,GAAG,KAAK,IAAI,EAAE;YACpC,IAAI;gBACF,sEAAsE;gBACtE,eAAM,CAAC,IAAI,CAAC,2EAA2E,CAAC,CAAC;gBAEzF,4CAA4C;gBAC5C,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;oBAClC,eAAM,CAAC,KAAK,CAAC,yCAAyC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;iBACjF;aAEF;YAAC,OAAO,KAAK,EAAE;gBACd,eAAM,CAAC,KAAK,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;aAC9D;QACH,CAAC,CAAC;QAEF,4DAA4D;QAC5D,kBAAkB,EAAE,CAAC;QAErB,qEAAqE;QACrE,eAAM,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;IACzD,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAE1B,6CAA6C;IAC7C,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,qBAAqB,GAAG,KAAK,IAAI,EAAE;YACvC,IAAI;gBACF,2DAA2D;gBAC3D,MAAM,UAAU,GAAG;oBACjB,eAAe,EAAE,kBAAkB,CAAC,UAAU,IAAI,CAAC;oBACnD,WAAW,EAAE,kBAAkB,CAAC,WAAW,IAAI,CAAC;oBAChD,UAAU,EAAE,GAAG,GAAG,IAAI;oBACtB,UAAU,EAAE,CAAC;oBACb,YAAY,EAAE,CAAC;oBACf,aAAa,EAAE,CAAC;iBACjB,CAAC;gBAEF,gBAAgB,CAAC,UAAU,CAAC,CAAC;gBAE7B,+CAA+C;gBAC/C,MAAM,kBAAkB,GAAG,iCAAiC,EAAE,CAAC;gBAC/D,IAAI,SAAS,EAAE;oBACb,eAAM,CAAC,KAAK,CAAC,2CAA2C,EAAE,kBAAkB,CAAC,CAAC;iBAC/E;gBAED,oDAAoD;gBACpD,IAAI,SAAS,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,EAAE;oBACvD,MAAM,mBAAmB,GAAG,2BAA2B,EAAE,CAAC;oBAC1D,IAAI,mBAAmB,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC1C,eAAM,CAAC,IAAI,CAAC,8CAA8C,EAAE,mBAAmB,CAAC,OAAO,CAAC,CAAC;qBAC1F;oBACD,IAAI,mBAAmB,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;wBACzC,eAAM,CAAC,IAAI,CAAC,kCAAkC,EAAE,mBAAmB,CAAC,MAAM,CAAC,CAAC;qBAC7E;iBACF;gBAED,8BAA8B;gBAC9B,MAAM,iBAAiB,GAAG,qBAAqB,EAAE,CAAC;gBAClD,IAAI,SAAS,EAAE;oBACb,eAAM,CAAC,KAAK,CAAC,8BAA8B,EAAE,iBAAiB,CAAC,CAAC;iBACjE;aAEF;YAAC,OAAO,KAAK,EAAE;gBACd,eAAM,CAAC,KAAK,CAAC,sDAAsD,EAAE,KAAK,CAAC,CAAC;aAC7E;QACH,CAAC,CAAC;QAEF,mEAAmE;QACnE,qBAAqB,EAAE,CAAC;QAExB,0CAA0C;QAC1C,MAAM,uBAAuB,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,KAAK,qBAAqB,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,eAAe;QAEvG,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACtD,CAAC,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,EAAE,iCAAiC,EAAE,2BAA2B,EAAE,qBAAqB,EAAE,SAAS,CAAC,CAAC,CAAC;IAE7I,0DAA0D;IAC1D,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,SAAS,EAAE;YACb,eAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,cAAc,CAAC,CAAC;YACjD,eAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,cAAc,CAAC,CAAC;YAElD,IAAI,mBAAmB,IAAI,CAAE,mBAA+C,CAAC,OAAO,EAAE;gBACpF,eAAM,CAAC,IAAI,CAAC,8BAA8B,EAAG,mBAA+C,CAAC,MAAM,CAAC,CAAC;aACtG;YAED,IAAI,iBAAiB,EAAE,SAAS,EAAE;gBAChC,eAAM,CAAC,IAAI,CAAC,qCAAqC,EAAE,iBAAiB,CAAC,CAAC;aACvE;YAED,IAAI,YAAY,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;gBACzC,eAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;aAC3D;YAED,+DAA+D;YAC/D,eAAM,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;YAE7C,wCAAwC;YACxC,MAAM,UAAU,GAAG,qBAAqB,EAAE,CAAC;YAC3C,eAAM,CAAC,KAAK,CAAC,iCAAiC,EAAE,UAAU,CAAC,CAAC;SAC7D;IACH,CAAC,EAAE,CAAC,SAAS,EAAE,cAAc,EAAE,cAAc,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,YAAY,EAAE,qBAAqB,CAAC,CAAC,CAAC;IAI7H,uDAAuD;IACvD,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,YAAY,CAAC;YACX,mBAAmB;YACnB,eAAe;YACf,sBAAsB;YACtB,aAAa;YACb,aAAa;YACb,iBAAiB;YACjB,cAAc,EAAE,MAAM,CAAC,OAAO;SAC/B,CAAC,CAAC;IACL,CAAC,EAAE,CAAC,mBAAmB,EAAE,eAAe,EAAE,sBAAsB,EAAE,aAAa,EAAE,aAAa,EAAE,iBAAiB,EAAE,YAAY,CAAC,CAAC,CAAC;IAElI,2BAA2B;IAC3B,MAAM,yBAAyB,GAAG,IAAA,mBAAW,EAAC,CAAC,WAAqB,EAAE,EAAE;QACtE,sBAAsB,CAAC,WAAW,CAAC,CAAC;QACpC,qBAAqB,CAAC,aAAa,EAAE,EAAE,mBAAmB,EAAE,WAAW,EAAE,CAAC,CAAC;QAC3E,eAAM,CAAC,KAAK,CAAC,+BAA+B,EAAE,WAAW,CAAC,CAAC;IAC7D,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,qBAAqB,GAAG,IAAA,mBAAW,EAAC,CAAC,OAAsB,EAAE,EAAE;QACnE,kBAAkB,CAAC,OAAO,CAAC,CAAC;QAC5B,qBAAqB,CAAC,SAAS,EAAE,EAAE,eAAe,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/D,eAAM,CAAC,KAAK,CAAC,2BAA2B,EAAE,OAAO,CAAC,CAAC;IACrD,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,4BAA4B,GAAG,IAAA,mBAAW,EAAC,CAAC,OAAiB,EAAE,EAAE;QACrE,yBAAyB,CAAC,OAAO,CAAC,CAAC;QACnC,qBAAqB,CAAC,SAAS,EAAE,EAAE,sBAAsB,EAAE,OAAO,EAAE,CAAC,CAAC;QACtE,eAAM,CAAC,KAAK,CAAC,mCAAmC,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,mBAAmB,GAAG,IAAA,mBAAW,EAAC,CAAC,MAAsC,EAAE,EAAE;QACjF,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACzB,qBAAqB,CAAC,QAAQ,EAAE,EAAE,aAAa,EAAE,MAAM,EAAE,CAAC,CAAC;QAC3D,eAAM,CAAC,KAAK,CAAC,yBAAyB,EAAE,MAAM,CAAC,CAAC;IAClD,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,sBAAsB,GAAG,IAAA,mBAAW,EAAC,CAAC,OAAsB,EAAE,EAAE;QACpE,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,OAAO,EAAE;YACX,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,wBAAwB;SACrF;IACH,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,gCAAgC;IAChC,MAAM,qBAAqB,GAAG,IAAA,mBAAW,EAAC,CAAC,WAAmB,EAAE,IAAa,EAAE,EAAE;QAC/E,MAAM,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACzD,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC7B,IAAI;gBACF,QAAQ,CAAC,IAAI,CAAC,CAAC;aAChB;YAAC,OAAO,KAAK,EAAE;gBACd,eAAM,CAAC,KAAK,CAAC,0CAA0C,WAAW,GAAG,EAAE,KAAK,CAAC,CAAC;aAC/E;QACH,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAExB,MAAM,kBAAkB,GAAG,IAAA,mBAAW,EAAC,CAAC,WAAmB,EAAE,QAAiC,EAAE,EAAE;QAChG,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC5B,GAAG,IAAI;YACP,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,EAAE,QAAQ,CAAC;SACxD,CAAC,CAAC,CAAC;QAEJ,8BAA8B;QAC9B,OAAO,GAAG,EAAE;YACV,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC5B,GAAG,IAAI;gBACP,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,QAAQ,CAAC;aACvE,CAAC,CAAC,CAAC;QACN,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,2DAA2D;IAC3D,MAAM,YAAY,GAAwB,IAAA,eAAO,EAAC,GAAG,EAAE,CAAC,CAAC;QACvD,eAAe;QACf,mBAAmB;QACnB,eAAe;QACf,sBAAsB;QACtB,aAAa;QACb,aAAa;QACb,iBAAiB;QAEjB,mBAAmB;QACnB,yBAAyB;QACzB,qBAAqB;QACrB,4BAA4B;QAC5B,mBAAmB;QACnB,gBAAgB,EAAE,sBAAsB;QAExC,gCAAgC;QAChC,qBAAqB;QACrB,kBAAkB;KACnB,CAAC,EAAE;QACF,mBAAmB;QACnB,eAAe;QACf,sBAAsB;QACtB,aAAa;QACb,aAAa;QACb,iBAAiB;QACjB,yBAAyB;QACzB,qBAAqB;QACrB,4BAA4B;QAC5B,mBAAmB;QACnB,sBAAsB;QACtB,qBAAqB;QACrB,kBAAkB;KACnB,CAAC,CAAC;IAEH,sFAAsF;IACtF,MAAM,qBAAqB,GAAG,IAAA,mBAAW,EAAC,CAAC,SAAiB,EAAE,EAAE;QAC9D,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACnD,IAAI,OAAO,EAAE;YACX,+BAA+B;YAC/B,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,sBAAsB,CAAC;YAClD,OAAO,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YAE/D,+CAA+C;YAC/C,sBAAsB,CAAC,SAAS,CAAC,CAAC;YAClC,iBAAiB,EAAE,CAAC,SAAS,CAAC,CAAC;YAE/B,2DAA2D;YAC3D,YAAY,CAAC;gBACX,mBAAmB;gBACnB,eAAe;gBACf,sBAAsB;gBACtB,aAAa;gBACb,aAAa,EAAE,SAAS;gBACxB,iBAAiB,EAAE,CAAC,GAAG,iBAAiB,EAAE,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;gBAC/D,cAAc,EAAE,MAAM,CAAC,OAAO;aAC/B,CAAC,CAAC;YAEH,qCAAqC;YACrC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YAC3C,UAAU,CAAC,GAAG,EAAE;gBACd,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;gBAC9C,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;YAChC,CAAC,EAAE,IAAI,CAAC,CAAC;SACV;IACH,CAAC,EAAE,CAAC,iBAAiB,EAAE,sBAAsB,EAAE,iBAAiB,EAAE,YAAY,EAAE,mBAAmB,EAAE,eAAe,EAAE,sBAAsB,EAAE,aAAa,CAAC,CAAC,CAAC;IAE9J,+BAA+B;IAC/B,MAAM,kBAAkB,GAAG,IAAA,mBAAW,EAAC,CAAC,SAAiB,EAAE,OAA4D,EAAE,EAAE;QACzH,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACxB,GAAG,IAAI;YACP,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,OAAO,EAAE;SAChD,CAAC,CAAC,CAAC;IACN,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,kCAAkC;IAClC,MAAM,oBAAoB,GAAuE,CAAC,EAChG,KAAK,EACL,SAAS,EACT,OAAO,EACR,EAAE,EAAE,CAAC,CACJ,iCAAK,SAAS,EAAC,4DAA4D,aACzE,gCAAI,SAAS,EAAC,yCAAyC,gCACrC,SAAS,IACtB,EACL,8BAAG,SAAS,EAAC,mBAAmB,YAC7B,KAAK,CAAC,OAAO,IAAI,+CAA+C,GAC/D,EACJ,mCACE,OAAO,EAAE,OAAO,EAChB,SAAS,EAAC,4EAA4E,8BAG/E,IACL,CACP,CAAC;IAEF,sCAAsC;IACtC,MAAM,cAAc,GAKf,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,GAAG,EAAE,EAAE,EAAE,EAAE;QAC/C,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,IAAA,gBAAQ,EAAC,CAAC,CAAC,CAAC;QAE5C,MAAM,WAAW,GAAG,IAAA,mBAAW,EAAC,GAAG,EAAE;YACnC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;YAC9B,kBAAkB,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAET,OAAO,CACL,qCACE,EAAE,EAAE,EAAE,EACN,SAAS,EAAE,kDAAkD,SAAS,EAAE,aAExE,iCAAK,SAAS,EAAC,wCAAwC,aACrD,+BAAI,SAAS,EAAC,sCAAsC,YAAE,KAAK,GAAM,EAChE,aAAa,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,CAC5B,iCAAK,SAAS,EAAC,iCAAiC,aAC9C,gCAAK,SAAS,EAAC,mEAAmE,GAAO,EACzF,iCAAM,SAAS,EAAC,SAAS,2BAAkB,IACvC,CACP,IACG,EAEN,uBAAC,uBAAa,IAEZ,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CACnB,uBAAC,oBAAoB,IACnB,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,EAAE,EACb,OAAO,EAAE,WAAW,GACpB,CACH,YAEA,QAAQ,IATJ,QAAQ,CAUC,IACR,CACX,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,CACL,uBAAC,eAAe,CAAC,QAAQ,IAAC,KAAK,EAAE,YAAY,YAC3C,iCAAK,SAAS,EAAC,oFAAoF,aACnG,iCAAK,SAAS,EAAC,6BAA6B,aAE1C,oCAAQ,SAAS,EAAC,kBAAkB,aAClC,+BAAI,SAAS,EAAC,qDAAqD,iCAE9D,EACL,8BAAG,SAAS,EAAC,sBAAsB,6EAE/B,EAGJ,gCAAK,SAAS,EAAC,sDAAsD,YAClE,OAAO,CAAC,CAAC,CAAC,CACT,iCAAK,SAAS,EAAC,mBAAmB,aAChC,gCAAK,SAAS,EAAC,qEAAqE,GAAO,EAC3F,8BAAG,SAAS,EAAC,uBAAuB,6CAAiC,IACjE,CACP,CAAC,CAAC,CAAC,CACF,iCAAK,SAAS,EAAC,mBAAmB,aAChC,gCAAK,SAAS,EAAC,wCAAwC,GAAO,EAC9D,+BAAG,SAAS,EAAC,uBAAuB,kCACrB,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,cAAK,KAAK,CAAC,iBAAiB,CAAC,OAAO,IAAI,YAAY,IAC1F,IACA,CACP,GACG,IACC,EAGT,iCAAK,SAAS,EAAC,8FAA8F,aAC3G,mCACE,OAAO,EAAE,GAAG,EAAE,CAAC,qBAAqB,CAAC,SAAS,CAAC,EAC/C,SAAS,EAAC,0GAA0G,wCAG7G,EACT,mCACE,OAAO,EAAE,GAAG,EAAE,CAAC,qBAAqB,CAAC,aAAa,CAAC,EACnD,SAAS,EAAC,0GAA0G,2CAG7G,EACT,mCACE,OAAO,EAAE,GAAG,EAAE,CAAC,qBAAqB,CAAC,SAAS,CAAC,EAC/C,SAAS,EAAC,0GAA0G,gCAG7G,EACT,mCACE,OAAO,EAAE,GAAG,EAAE,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EAC9C,SAAS,EAAC,0GAA0G,+BAG7G,IACL,EAGN,kCAAM,SAAS,EAAC,uCAAuC,aAErD,uBAAC,cAAc,IAAC,EAAE,EAAC,SAAS,EAAC,KAAK,EAAC,yBAAyB,YAC1D,uBAAC,uBAAa,IACZ,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CACnB,uBAAC,uCAAkB,CAAC,kBAAkB,IACpC,OAAO,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,EACvC,KAAK,EAAE,KAAK,GACZ,CACH,YAED,uBAAC,gBAAQ,IAAC,QAAQ,EAAE,uBAAC,uCAAkB,CAAC,OAAO,IAAC,aAAa,EAAC,qBAAqB,GAAG,YACpF,uBAAC,kBAAkB,KAAG,GACb,GACG,GACD,EAGjB,uBAAC,cAAc,IAAC,EAAE,EAAC,aAAa,EAAC,KAAK,EAAC,4BAA4B,YACjE,uBAAC,uBAAa,IACZ,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CACnB,uBAAC,uCAAkB,CAAC,qBAAqB,IACvC,OAAO,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,EACvC,KAAK,EAAE,KAAK,GACZ,CACH,YAED,uBAAC,gBAAQ,IAAC,QAAQ,EAAE,uBAAC,uCAAkB,CAAC,OAAO,IAAC,aAAa,EAAC,wBAAwB,GAAG,YACvF,uBAAC,qBAAqB,IACpB,iBAAiB,EAAE,KAAK,EACxB,YAAY,EAAE,CAAC,GACf,GACO,GACG,GACD,EAGjB,uBAAC,cAAc,IAAC,EAAE,EAAC,SAAS,EAAC,KAAK,EAAC,iBAAiB,YAClD,uBAAC,uBAAa,IACZ,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CACnB,uBAAC,uCAAkB,CAAC,cAAc,IAChC,OAAO,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,EACvC,KAAK,EAAE,KAAK,GACZ,CACH,YAED,uBAAC,gBAAQ,IAAC,QAAQ,EAAE,uBAAC,uCAAkB,CAAC,OAAO,IAAC,aAAa,EAAC,iBAAiB,GAAG,YAChF,uBAAC,qBAAqB,IACpB,iBAAiB,EAAE,IAAI,EACvB,YAAY,EAAE,CAAC,EACf,UAAU,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,GACjD,GACO,GACG,GACD,EAGjB,uBAAC,cAAc,IAAC,EAAE,EAAC,QAAQ,EAAC,KAAK,EAAC,gBAAgB,YAChD,uBAAC,uBAAa,IACZ,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CACnB,uBAAC,uCAAkB,CAAC,aAAa,IAC/B,OAAO,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,EACvC,KAAK,EAAE,KAAK,GACZ,CACH,YAED,uBAAC,gBAAQ,IAAC,QAAQ,EAAE,uBAAC,uCAAkB,CAAC,OAAO,IAAC,aAAa,EAAC,gBAAgB,GAAG,YAC/E,uBAAC,mBAAmB,KAAG,GACd,GACG,GACD,EAGhB,QAAQ,IACJ,EAGP,mCAAQ,SAAS,EAAC,mBAAmB,YACnC,gCAAK,SAAS,EAAC,cAAc,EAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,YACxD,iCAAM,MAAM,EAAC,kDAAkD,EAAC,MAAM,EAAC,MAAM,EAAC,MAAM,EAAC,QAAQ,YAC3F,kCACE,IAAI,EAAC,QAAQ,EACb,KAAK,EAAC,MAAM,EACZ,KAAK,EAAE;4CACL,SAAS,EAAE,QAAQ;4CACnB,MAAM,EAAE,MAAM;4CACd,YAAY,EAAE,SAAS;4CACvB,KAAK,EAAE,MAAM;4CACb,OAAO,EAAE,QAAQ;4CACjB,MAAM,EAAE,UAAU;4CAClB,UAAU,EAAE,MAAM;4CAClB,eAAe,EAAE,SAAS;4CAC1B,KAAK,EAAE,SAAS;4CAChB,UAAU,EAAE,qCAAqC;4CACjD,QAAQ,EAAE,MAAM;4CAChB,UAAU,EAAE,SAAS;4CACrB,MAAM,EAAE,SAAS;yCAClB,GACD,GACG,GACH,GACC,IACL,EAGL,SAAS,IAAI,CACZ,uBAAC,gBAAQ,IAAC,QAAQ,EAAE,IAAI,YACtB,uBAAC,qBAAqB,IACpB,QAAQ,EAAC,cAAc,EACvB,WAAW,EAAE,IAAI,EACjB,sBAAsB,EAAE,IAAI,EAC5B,oBAAoB,EAAE,IAAI,EAC1B,mBAAmB,EAAE,IAAI,GACzB,GACO,CACZ,EAGD,kCAAO,GAAG,kBAAE;;;;;;;;;;;;;;;;;;OAkBX,GAAS,IACN,GACqB,CAC5B,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,kBAAe,cAAc,CAAC","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/components/layout/MainPageLayout.tsx"],"sourcesContent":["'use client';\n\nimport { useRouter } from 'next/navigation';\nimport React, { useState, useEffect, useCallback, createContext, useContext, useMemo, memo, lazy, Suspense } from 'react';\n\nimport ErrorBoundary from '@/components/error-boundaries/ErrorBoundary';\nimport { ComponentFallbacks } from '@/components/fallbacks/ComponentFallbacks';\nimport { useAlchemical } from '@/contexts/AlchemicalContext/hooks';\nimport { \n  useAgentHooks,\n  usePlanetaryDataValidationHook,\n  useIngredientConsistencyHook,\n  useTypeScriptCampaignHook,\n  useBuildQualityMonitoringHook,\n  useQualityMetricsHook\n} from '@/hooks/useAgentHooks';\nimport { \n  useNavigationState, \n  useScrollPreservation, \n  useAutoStateCleanup,\n  useAstrologicalStatePreservation,\n  useCulturalSensitivityGuidance,\n  usePerformanceOptimizationGuidance\n} from '@/hooks/useStatePreservation';\nimport { useDevelopmentExperienceOptimizations } from '@/utils/developmentExperienceOptimizations';\nimport { logger } from '@/utils/logger';\n// useMCPServerIntegration removed with MCP cleanup\nimport { useSteeringFileIntelligence, ElementalProperties } from '@/utils/steeringFileIntelligence';\n\n// Lazy load non-critical components for better performance\nconst ConsolidatedDebugInfo = lazy(() => import('@/components/debug/ConsolidatedDebugInfo'));\nconst CuisineRecommender = lazy(() => import('@/components/CuisineRecommender'));\nconst IngredientRecommender = lazy(() => import('@/components/IngredientRecommender'));\nconst CookingMethodsSection = lazy(() => import('@/components/CookingMethodsSection'));\nconst RecipeBuilderSimple = lazy(() => import('@/components/recipes/RecipeBuilderSimple'));\n\ninterface MainPageLayoutProps {\n  children?: React.ReactNode;\n  debugMode?: boolean;\n  loading?: boolean;\n  onSectionNavigate?: (sectionId: string) => void;\n}\n\ninterface SectionConfig {\n  id: string;\n  title: string;\n  component: React.ComponentType;\n  loading: boolean;\n  error: string | null;\n}\n\n// Main Page Context for cross-component data sharing\ninterface MainPageContextType {\n  // Shared state\n  selectedIngredients: string[];\n  selectedCuisine: string | null;\n  selectedCookingMethods: string[];\n  currentRecipe: Record<string, unknown> | null;\n  \n  // Navigation state\n  activeSection: string | null;\n  navigationHistory: string[];\n  \n  // Update functions\n  updateSelectedIngredients: (ingredients: string[]) => void;\n  updateSelectedCuisine: (cuisine: string | null) => void;\n  updateSelectedCookingMethods: (methods: string[]) => void;\n  updateCurrentRecipe: (recipe: Record<string, unknown> | null) => void;\n  setActiveSection: (section: string | null) => void;\n  \n  // Cross-component communication\n  notifyComponentUpdate: (componentId: string, data: unknown) => void;\n  subscribeToUpdates: (componentId: string, callback: (data: unknown) => void) => () => void;\n}\n\nconst MainPageContext = createContext<MainPageContextType | null>(null);\n\nexport const useMainPageContext = () => {\n  const context = useContext(MainPageContext);\n  if (!context) {\n    throw new Error('useMainPageContext must be used within MainPageLayout');\n  }\n  return context;\n};\n\n// Memoized loading fallback component for better performance\nconst _ComponentLoadingFallback = memo(function ComponentLoadingFallback({ \n  componentName \n}: { \n  componentName: string \n}) {\n  return (\n    <div className=\"flex items-center justify-center p-8 bg-gray-50 rounded-lg\">\n      <div className=\"flex items-center space-x-3\">\n        <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-indigo-600\"></div>\n        <span className=\"text-gray-600\">Loading {componentName}...</span>\n      </div>\n    </div>\n  );\n});\n\nconst MainPageLayout: React.FC<MainPageLayoutProps> = memo(function MainPageLayout({\n  children,\n  debugMode = process.env.NODE_ENV === 'development',\n  loading = false,\n  onSectionNavigate\n}) {\n  const router = useRouter();\n  const { state, planetaryPositions, isDaytime } = useAlchemical();\n  \n  // Use new state preservation hooks\n  const { saveState: saveNavState, getState: getNavState } = useNavigationState();\n  const { restoreScrollPosition } = useScrollPreservation('main-page');\n  useAutoStateCleanup();\n\n  // Enhanced hooks with steering file intelligence\n  const steeringIntelligence = useSteeringFileIntelligence();\n  // Temporarily disabled for testing\n  // const { \n  //   saveAstrologicalState, \n  //   restoreAstrologicalState,\n  //   validateElementalCompatibility,\n  //   getArchitecturalGuidance,\n  //   getTechnologyStackGuidance\n  // } = useAstrologicalStatePreservation('main-page-layout');\n  \n  // Temporarily disabled for testing\n  // const { validateCulturalContent, getInclusiveLanguageGuidelines } = useCulturalSensitivityGuidance();\n  // const { getOptimizationRecommendations, validatePerformanceMetrics } = usePerformanceOptimizationGuidance();\n\n  // Agent hooks for automated quality assurance - temporarily disabled for testing\n  // const { hookState: agentHookState, startAgentHooks, stopAgentHooks, triggerValidation } = useAgentHooks({\n  //   enablePlanetaryValidation: true,\n  //   enableIngredientValidation: true,\n  //   enableCampaignTriggers: true,\n  //   enablePerformanceMonitoring: true,\n  //   validationInterval: 5 // 5 minutes\n  // });\n\n  // const { validationResult: planetaryValidation, validatePlanetaryData } = usePlanetaryDataValidationHook(true);\n  \n  // Temporary placeholders for disabled hooks\n  const agentHookState = null;\n  const planetaryValidation = null;\n  const { validationResult: ingredientValidation, validateIngredients } = useIngredientConsistencyHook();\n  const { campaignTrigger: typescriptTrigger, checkErrorThreshold } = useTypeScriptCampaignHook(true);\n  const { qualityResult: buildQuality, monitorBuildQuality } = useBuildQualityMonitoringHook();\n  const { metrics: qualityMetrics, updateMetrics } = useQualityMetricsHook(30000); // 30 seconds\n\n  // MCP server integration for reliable external APIs\n  // MCP Server Integration removed - functionality handled by core services\n\n  // Development experience optimizations\n  const {\n    updatePerformanceMetrics: updateDevMetrics,\n    getDevelopmentMetrics,\n    getPerformanceOptimizationRecommendations: getDevOptimizationRecommendations,\n    applyAutomaticOptimizations\n  } = useDevelopmentExperienceOptimizations();\n\n  const [sectionStates, setSectionStates] = useState<Record<string, { loading: boolean; error: string | null }>>({\n    cuisine: { loading: false, error: null },\n    ingredients: { loading: false, error: null },\n    cooking: { loading: false, error: null },\n    recipe: { loading: false, error: null }\n  });\n\n  // Main Page Context State - Initialize from preserved state\n  const [selectedIngredients, setSelectedIngredients] = useState<string[]>([]);\n  const [selectedCuisine, setSelectedCuisine] = useState<string | null>(null);\n  const [selectedCookingMethods, setSelectedCookingMethods] = useState<string[]>([]);\n  const [currentRecipe, setCurrentRecipe] = useState<Record<string, unknown> | null>(null);\n  const [activeSection, setActiveSection] = useState<string | null>(null);\n  const [navigationHistory, setNavigationHistory] = useState<string[]>([]);\n  \n  // Component update subscribers\n  const [updateSubscribers, setUpdateSubscribers] = useState<Record<string, ((data: unknown) => void)[]>>({});\n\n  // Steering file intelligence state\n  const [astrologicalGuidance, setAstrologicalGuidance] = useState<Record<string, unknown> | null>(null);\n  const [performanceMetrics, setPerformanceMetrics] = useState<Record<string, unknown>>({});\n  const [culturalValidation, setCulturalValidation] = useState<Record<string, unknown> | null>(null);\n\n  // Initialize state from preserved navigation state\n  useEffect(() => {\n    const restoredState = getNavState();\n    if (restoredState) {\n      if (restoredState.selectedIngredients.length > 0) {\n        setSelectedIngredients(restoredState.selectedIngredients);\n      }\n      if (restoredState.selectedCuisine) {\n        setSelectedCuisine(restoredState.selectedCuisine);\n      }\n      if (restoredState.selectedCookingMethods.length > 0) {\n        setSelectedCookingMethods(restoredState.selectedCookingMethods);\n      }\n      if (restoredState.currentRecipe) {\n        setCurrentRecipe(restoredState.currentRecipe);\n      }\n      if (restoredState.activeSection) {\n        setActiveSection(restoredState.activeSection);\n      }\n      if (restoredState.navigationHistory.length > 0) {\n        setNavigationHistory(restoredState.navigationHistory);\n      }\n      \n      logger.debug('Restored main page context from enhanced state preservation');\n    }\n    \n    // Restore scroll position after a short delay to ensure DOM is ready\n    setTimeout(() => {\n      restoreScrollPosition();\n    }, 100);\n  }, [getNavState, restoreScrollPosition]);\n\n  // Initialize steering file intelligence guidance\n  useEffect(() => {\n    const initializeGuidance = async () => {\n      try {\n        const guidance = await steeringIntelligence.getGuidance();\n        setAstrologicalGuidance(guidance);\n        \n        // Apply architectural guidance for component optimization - temporarily disabled\n        // const archGuidance = getArchitecturalGuidance();\n        // logger.debug('Applied architectural guidance from steering files:', archGuidance);\n        \n        // Validate cultural content if we have any - temporarily disabled\n        // if (selectedCuisine || selectedIngredients.length > 0) {\n        //   const validation = validateCulturalContent({\n        //     ingredientNames: selectedIngredients,\n        //     cuisineDescriptions: selectedCuisine ? [selectedCuisine] : []\n        //   });\n        //   setCulturalValidation(validation);\n        //   \n        //   if (!validation.isCompliant) {\n        //     logger.warn('Cultural sensitivity issues detected:', validation.issues);\n        //   }\n        // }\n        \n        // Get performance optimization recommendations - temporarily disabled\n        // const perfRecommendations = getOptimizationRecommendations('main-page-layout');\n        // logger.debug('Performance optimization recommendations:', perfRecommendations);\n        \n      } catch (error) {\n        logger.error('Error initializing steering file intelligence:', error);\n      }\n    };\n\n    void initializeGuidance();\n  }, [steeringIntelligence, selectedCuisine, selectedIngredients]);\n\n  // Monitor performance metrics using steering file guidance\n  useEffect(() => {\n    const startTime = performance.now();\n    \n    const measurePerformance = () => {\n      const renderTime = performance.now() - startTime;\n      const memoryUsage = (performance as Performance & { memory?: { usedJSHeapSize: number } }).memory?.usedJSHeapSize / 1024 / 1024 || 0;\n      \n      const metrics = {\n        renderTime,\n        memoryUsage,\n        componentCount: Object.keys(sectionStates).length,\n        activeSubscribers: Object.values(updateSubscribers).reduce((sum, subs) => sum + subs.length, 0)\n      };\n      \n      setPerformanceMetrics(metrics);\n      \n      // Validate performance against steering file thresholds - temporarily disabled\n      // const validation = validatePerformanceMetrics({\n      //   renderTime,\n      //   memoryUsage\n      // });\n      // \n      // if (!validation.isOptimal) {\n      //   logger.warn('Performance issues detected:', validation.issues);\n      //   logger.info('Performance recommendations:', validation.recommendations);\n      // }\n    };\n\n    // Measure performance after component mounts and updates\n    const timeoutId = setTimeout(measurePerformance, 100);\n    \n    return () => clearTimeout(timeoutId);\n  }, [sectionStates, updateSubscribers]);\n\n  // Enhanced state preservation with astrological context\n  useEffect(() => {\n    const saveEnhancedState = async () => {\n      try {\n        // Calculate elemental properties from current selections\n        const elementalProps: ElementalProperties = {\n          Fire: selectedCookingMethods.filter(method => method.includes('grill') || method.includes('sauté')).length * 0.3,\n          Water: selectedIngredients.filter(ing => ing.includes('soup') || ing.includes('steam')).length * 0.3,\n          Earth: selectedIngredients.filter(ing => ing.includes('root') || ing.includes('grain')).length * 0.3,\n          Air: selectedIngredients.filter(ing => ing.includes('herb') || ing.includes('spice')).length * 0.3\n        };\n\n        // Save astrological state with steering file intelligence\n        // Temporarily disabled for testing\n        // await saveAstrologicalState({\n        //   elementalProperties: elementalProps,\n        //   selectedIngredients,\n        //   astrologicalContext: {\n        //     selectedCuisine,\n        //     selectedCookingMethods,\n        //     currentRecipe,\n        //     activeSection,\n        //     navigationHistory\n        //   }\n        // });\n      } catch (error) {\n        logger.error('Error saving enhanced astrological state:', error);\n      }\n    };\n\n    if (selectedIngredients.length > 0 || selectedCuisine || selectedCookingMethods.length > 0) {\n      saveEnhancedState();\n    }\n  }, [selectedIngredients, selectedCuisine, selectedCookingMethods, currentRecipe, activeSection, navigationHistory]);\n\n  // Initialize agent hooks for automated quality assurance - temporarily disabled for testing\n  // useEffect(() => {\n  //   startAgentHooks();\n  //   logger.info('Agent hooks started for automated quality assurance');\n  //   \n  //   return () => {\n  //     stopAgentHooks();\n  //     logger.info('Agent hooks stopped');\n  //   };\n  // }, [startAgentHooks, stopAgentHooks]);\n\n  // Monitor ingredient consistency when ingredients change\n  useEffect(() => {\n    if (selectedIngredients.length > 0) {\n      const ingredientsWithElementalProps = selectedIngredients.map(ingredient => ({\n        name: ingredient,\n        elementalProperties: {\n          Fire: ingredient.includes('spice') || ingredient.includes('pepper') ? 0.8 : 0.2,\n          Water: ingredient.includes('soup') || ingredient.includes('broth') ? 0.8 : 0.2,\n          Earth: ingredient.includes('root') || ingredient.includes('grain') ? 0.8 : 0.2,\n          Air: ingredient.includes('herb') || ingredient.includes('leaf') ? 0.8 : 0.2\n        } as ElementalProperties,\n        category: ingredient.includes('spice') ? 'spices' : \n                 ingredient.includes('herb') ? 'herbs' : \n                 ingredient.includes('grain') ? 'grains' : 'other'\n      }));\n\n      validateIngredients(ingredientsWithElementalProps).then(result => {\n        if (result && !result.isValid) {\n          logger.warn('Ingredient consistency validation failed:', result.issues);\n        }\n      }).catch(error => {\n        logger.error('Error validating ingredient consistency:', error);\n      });\n    }\n  }, [selectedIngredients]);\n\n  // Monitor build quality and performance metrics\n  useEffect(() => {\n    const monitorQuality = async () => {\n      try {\n        const buildMetrics = {\n          buildTime: performanceMetrics.renderTime || 0,\n          memoryUsage: performanceMetrics.memoryUsage || 0,\n          bundleSize: 150 * 1024, // Estimated 150KB for main page\n          errorCount: 0 // No build errors in this context\n        };\n\n        const qualityResult = await monitorBuildQuality(buildMetrics);\n        if (qualityResult && !qualityResult.isValid) {\n          logger.warn('Build quality issues detected:', qualityResult.issues);\n        }\n      } catch (error) {\n        logger.error('Error monitoring build quality:', error);\n      }\n    };\n\n    // Monitor quality every 30 seconds\n    const qualityInterval = setInterval(() => void monitorQuality(), 30000);\n    \n    // Initial quality check\n    monitorQuality();\n    \n    return () => clearInterval(qualityInterval);\n  }, [performanceMetrics, monitorBuildQuality]);\n\n  // Test MCP server integration and fallback strategy\n  useEffect(() => {\n    const testMCPIntegration = async () => {\n      try {\n        // MCP server integration removed - core services handle API fallbacks\n        logger.info('Using core astrological and alchemical services (MCP integration removed)');\n\n        // Test core service functionality if needed\n        if (selectedIngredients.length > 0) {\n          logger.debug(`Testing core nutritional services for ${selectedIngredients[0]}`);\n        }\n\n      } catch (error) {\n        logger.error('Error testing MCP server integration:', error);\n      }\n    };\n\n    // Test MCP integration on mount and when ingredients change\n    testMCPIntegration();\n\n    // Core services are always available (no periodic monitoring needed)\n    logger.debug('Core services initialized successfully');\n  }, [selectedIngredients]);\n\n  // Apply development experience optimizations\n  useEffect(() => {\n    const applyDevOptimizations = async () => {\n      try {\n        // Update development metrics with current performance data\n        const devMetrics = {\n          compilationTime: performanceMetrics.renderTime || 0,\n          memoryUsage: performanceMetrics.memoryUsage || 0,\n          bundleSize: 150 * 1024, // Estimated bundle size\n          errorCount: 0, // No compilation errors in runtime\n          warningCount: 0,\n          hotReloadTime: 0\n        };\n\n        updateDevMetrics(devMetrics);\n\n        // Get development optimization recommendations\n        const devRecommendations = getDevOptimizationRecommendations();\n        if (debugMode) {\n          logger.debug('Development optimization recommendations:', devRecommendations);\n        }\n\n        // Apply automatic optimizations in development mode\n        if (debugMode && process.env.NODE_ENV === 'development') {\n          const optimizationResults = applyAutomaticOptimizations();\n          if (optimizationResults.applied.length > 0) {\n            logger.info('Applied automatic development optimizations:', optimizationResults.applied);\n          }\n          if (optimizationResults.errors.length > 0) {\n            logger.warn('Development optimization errors:', optimizationResults.errors);\n          }\n        }\n\n        // Monitor development metrics\n        const currentDevMetrics = getDevelopmentMetrics();\n        if (debugMode) {\n          logger.debug('Current development metrics:', currentDevMetrics);\n        }\n\n      } catch (error) {\n        logger.error('Error applying development experience optimizations:', error);\n      }\n    };\n\n    // Apply optimizations on mount and when performance metrics change\n    applyDevOptimizations();\n\n    // Set up periodic optimization monitoring\n    const devOptimizationInterval = setInterval(() => void applyDevOptimizations(), 60000); // Every minute\n\n    return () => clearInterval(devOptimizationInterval);\n  }, [performanceMetrics, updateDevMetrics, getDevOptimizationRecommendations, applyAutomaticOptimizations, getDevelopmentMetrics, debugMode]);\n\n  // Log quality metrics and campaign triggers for debugging\n  useEffect(() => {\n    if (debugMode) {\n      logger.debug('Quality Metrics:', qualityMetrics);\n      logger.debug('Agent Hook State:', agentHookState);\n      \n      if (planetaryValidation && !(planetaryValidation as Record<string, unknown>).isValid) {\n        logger.warn('Planetary validation issues:', (planetaryValidation as Record<string, unknown>).issues);\n      }\n      \n      if (typescriptTrigger?.triggered) {\n        logger.warn('TypeScript campaign trigger active:', typescriptTrigger);\n      }\n      \n      if (buildQuality && !buildQuality.isValid) {\n        logger.warn('Build quality issues:', buildQuality.issues);\n      }\n\n      // Core services are always available (MCP integration removed)\n      logger.debug('Core Services Status: Active');\n\n      // Log development metrics in debug mode\n      const devMetrics = getDevelopmentMetrics();\n      logger.debug('Development Experience Metrics:', devMetrics);\n    }\n  }, [debugMode, qualityMetrics, agentHookState, planetaryValidation, typescriptTrigger, buildQuality, getDevelopmentMetrics]);\n\n\n\n  // Save state changes using enhanced state preservation\n  useEffect(() => {\n    saveNavState({\n      selectedIngredients,\n      selectedCuisine,\n      selectedCookingMethods,\n      currentRecipe,\n      activeSection,\n      navigationHistory,\n      scrollPosition: window.scrollY\n    });\n  }, [selectedIngredients, selectedCuisine, selectedCookingMethods, currentRecipe, activeSection, navigationHistory, saveNavState]);\n\n  // Context update functions\n  const updateSelectedIngredients = useCallback((ingredients: string[]) => {\n    setSelectedIngredients(ingredients);\n    notifyComponentUpdate('ingredients', { selectedIngredients: ingredients });\n    logger.debug('Updated selected ingredients:', ingredients);\n  }, []);\n\n  const updateSelectedCuisine = useCallback((cuisine: string | null) => {\n    setSelectedCuisine(cuisine);\n    notifyComponentUpdate('cuisine', { selectedCuisine: cuisine });\n    logger.debug('Updated selected cuisine:', cuisine);\n  }, []);\n\n  const updateSelectedCookingMethods = useCallback((methods: string[]) => {\n    setSelectedCookingMethods(methods);\n    notifyComponentUpdate('cooking', { selectedCookingMethods: methods });\n    logger.debug('Updated selected cooking methods:', methods);\n  }, []);\n\n  const updateCurrentRecipe = useCallback((recipe: Record<string, unknown> | null) => {\n    setCurrentRecipe(recipe);\n    notifyComponentUpdate('recipe', { currentRecipe: recipe });\n    logger.debug('Updated current recipe:', recipe);\n  }, []);\n\n  const handleSetActiveSection = useCallback((section: string | null) => {\n    setActiveSection(section);\n    if (section) {\n      setNavigationHistory(prev => [...prev.slice(-9), section]); // Keep last 10 sections\n    }\n  }, []);\n\n  // Cross-component communication\n  const notifyComponentUpdate = useCallback((componentId: string, data: unknown) => {\n    const subscribers = updateSubscribers[componentId] || [];\n    subscribers.forEach(callback => {\n      try {\n        callback(data);\n      } catch (error) {\n        logger.error(`Error in component update callback for ${componentId}:`, error);\n      }\n    });\n  }, [updateSubscribers]);\n\n  const subscribeToUpdates = useCallback((componentId: string, callback: (data: unknown) => void) => {\n    setUpdateSubscribers(prev => ({\n      ...prev,\n      [componentId]: [...(prev[componentId] || []), callback]\n    }));\n\n    // Return unsubscribe function\n    return () => {\n      setUpdateSubscribers(prev => ({\n        ...prev,\n        [componentId]: (prev[componentId] || []).filter(cb => cb !== callback)\n      }));\n    };\n  }, []);\n\n  // Memoized context value to prevent unnecessary re-renders\n  const contextValue: MainPageContextType = useMemo(() => ({\n    // Shared state\n    selectedIngredients,\n    selectedCuisine,\n    selectedCookingMethods,\n    currentRecipe,\n    activeSection,\n    navigationHistory,\n    \n    // Update functions\n    updateSelectedIngredients,\n    updateSelectedCuisine,\n    updateSelectedCookingMethods,\n    updateCurrentRecipe,\n    setActiveSection: handleSetActiveSection,\n    \n    // Cross-component communication\n    notifyComponentUpdate,\n    subscribeToUpdates\n  }), [\n    selectedIngredients,\n    selectedCuisine,\n    selectedCookingMethods,\n    currentRecipe,\n    activeSection,\n    navigationHistory,\n    updateSelectedIngredients,\n    updateSelectedCuisine,\n    updateSelectedCookingMethods,\n    updateCurrentRecipe,\n    handleSetActiveSection,\n    notifyComponentUpdate,\n    subscribeToUpdates\n  ]);\n\n  // Handle section navigation with enhanced context preservation and smooth transitions\n  const handleSectionNavigate = useCallback((sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      // Add smooth transition effect\n      element.style.transition = 'all 0.3s ease-in-out';\n      element.scrollIntoView({ behavior: 'smooth', block: 'start' });\n      \n      // Update active section and navigation history\n      handleSetActiveSection(sectionId);\n      onSectionNavigate?.(sectionId);\n      \n      // Save navigation state using enhanced preservation system\n      saveNavState({\n        selectedIngredients,\n        selectedCuisine,\n        selectedCookingMethods,\n        currentRecipe,\n        activeSection: sectionId,\n        navigationHistory: [...navigationHistory, sectionId].slice(-10), // Keep last 10\n        scrollPosition: window.scrollY\n      });\n      \n      // Add visual feedback for navigation\n      element.classList.add('highlight-section');\n      setTimeout(() => {\n        element.classList.remove('highlight-section');\n        element.style.transition = '';\n      }, 1000);\n    }\n  }, [onSectionNavigate, handleSetActiveSection, navigationHistory, saveNavState, selectedIngredients, selectedCuisine, selectedCookingMethods, currentRecipe]);\n\n  // Update section loading state\n  const updateSectionState = useCallback((sectionId: string, updates: Partial<{ loading: boolean; error: string | null }>) => {\n    setSectionStates(prev => ({\n      ...prev,\n      [sectionId]: { ...prev[sectionId], ...updates }\n    }));\n  }, []);\n\n  // Section error boundary fallback\n  const SectionErrorFallback: React.FC<{ error: Error; sectionId: string; onRetry: () => void }> = ({ \n    error, \n    sectionId, \n    onRetry \n  }) => (\n    <div className=\"bg-red-50 border border-red-200 rounded-lg p-6 text-center\">\n      <h3 className=\"text-lg font-semibold text-red-800 mb-2\">\n        Section Error: {sectionId}\n      </h3>\n      <p className=\"text-red-600 mb-4\">\n        {error.message || 'An unexpected error occurred in this section.'}\n      </p>\n      <button\n        onClick={onRetry}\n        className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition-colors\"\n      >\n        Retry Section\n      </button>\n    </div>\n  );\n\n  // Section wrapper with error boundary\n  const SectionWrapper: React.FC<{\n    id: string;\n    title: string;\n    children: React.ReactNode;\n    className?: string;\n  }> = ({ id, title, children, className = '' }) => {\n    const [retryKey, setRetryKey] = useState(0);\n    \n    const handleRetry = useCallback(() => {\n      setRetryKey(prev => prev + 1);\n      updateSectionState(id, { loading: false, error: null });\n    }, [id]);\n\n    return (\n      <section \n        id={id} \n        className={`bg-white rounded-lg shadow-md p-6 scroll-mt-20 ${className}`}\n      >\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-2xl font-semibold text-gray-800\">{title}</h2>\n          {sectionStates[id].loading && (\n            <div className=\"flex items-center text-blue-600\">\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"></div>\n              <span className=\"text-sm\">Loading...</span>\n            </div>\n          )}\n        </div>\n        \n        <ErrorBoundary\n          key={retryKey}\n          fallback={(error) => (\n            <SectionErrorFallback \n              error={error} \n              sectionId={id} \n              onRetry={handleRetry} \n            />\n          )}\n        >\n          {children}\n        </ErrorBoundary>\n      </section>\n    );\n  };\n\n  return (\n    <MainPageContext.Provider value={contextValue}>\n      <div className=\"min-h-screen bg-gradient-to-b from-indigo-50 via-blue-50 to-gray-100 text-gray-800\">\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Header Section */}\n        <header className=\"mb-8 text-center\">\n          <h1 className=\"text-3xl md:text-4xl font-bold mb-2 text-indigo-900\">\n            What to Eat Next\n          </h1>\n          <p className=\"text-indigo-600 mb-4\">\n            Food recommendations based on the current celestial energies\n          </p>\n          \n          {/* Loading Status Indicator */}\n          <div className=\"inline-block bg-white px-4 py-2 rounded-lg shadow-sm\">\n            {loading ? (\n              <div className=\"flex items-center\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-indigo-600 mr-2\"></div>\n                <p className=\"text-sm text-gray-600\">Loading astrological data...</p>\n              </div>\n            ) : (\n              <div className=\"flex items-center\">\n                <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></div>\n                <p className=\"text-sm text-gray-600\">\n                  Connected • {isDaytime ? 'Day' : 'Night'} • {state.astrologicalState.sunSign || 'Loading...'}\n                </p>\n              </div>\n            )}\n          </div>\n        </header>\n        \n        {/* Sticky Navigation with Jump Links */}\n        <nav className=\"flex flex-wrap justify-center gap-4 mb-8 bg-white rounded-lg shadow-md p-4 sticky top-2 z-10\">\n          <button\n            onClick={() => handleSectionNavigate('cuisine')}\n            className=\"text-indigo-600 hover:text-indigo-800 font-medium px-3 py-1 rounded hover:bg-indigo-50 transition-colors\"\n          >\n            Cuisine Recommendations\n          </button>\n          <button\n            onClick={() => handleSectionNavigate('ingredients')}\n            className=\"text-indigo-600 hover:text-indigo-800 font-medium px-3 py-1 rounded hover:bg-indigo-50 transition-colors\"\n          >\n            Ingredient Recommendations\n          </button>\n          <button\n            onClick={() => handleSectionNavigate('cooking')}\n            className=\"text-indigo-600 hover:text-indigo-800 font-medium px-3 py-1 rounded hover:bg-indigo-50 transition-colors\"\n          >\n            Cooking Methods\n          </button>\n          <button\n            onClick={() => handleSectionNavigate('recipe')}\n            className=\"text-indigo-600 hover:text-indigo-800 font-medium px-3 py-1 rounded hover:bg-indigo-50 transition-colors\"\n          >\n            Recipe Builder\n          </button>\n        </nav>\n        \n        {/* Main Content - Single Column Stacked Layout */}\n        <main className=\"flex flex-col gap-8 max-w-6xl mx-auto\">\n          {/* Cuisine Recommender Section */}\n          <SectionWrapper id=\"cuisine\" title=\"Cuisine Recommendations\">\n            <ErrorBoundary\n              fallback={(error) => (\n                <ComponentFallbacks.CuisineRecommender \n                  onRetry={() => window.location.reload()}\n                  error={error}\n                />\n              )}\n            >\n              <Suspense fallback={<ComponentFallbacks.Loading componentName=\"Cuisine Recommender\" />}>\n                <CuisineRecommender />\n              </Suspense>\n            </ErrorBoundary>\n          </SectionWrapper>\n          \n          {/* Ingredient Recommender Section */}\n          <SectionWrapper id=\"ingredients\" title=\"Ingredient Recommendations\">\n            <ErrorBoundary\n              fallback={(error) => (\n                <ComponentFallbacks.IngredientRecommender \n                  onRetry={() => window.location.reload()}\n                  error={error}\n                />\n              )}\n            >\n              <Suspense fallback={<ComponentFallbacks.Loading componentName=\"Ingredient Recommender\" />}>\n                <IngredientRecommender \n                  isFullPageVersion={false}\n                  maxDisplayed={8}\n                />\n              </Suspense>\n            </ErrorBoundary>\n          </SectionWrapper>\n          \n          {/* Cooking Methods Section */}\n          <SectionWrapper id=\"cooking\" title=\"Cooking Methods\">\n            <ErrorBoundary\n              fallback={(error) => (\n                <ComponentFallbacks.CookingMethods \n                  onRetry={() => window.location.reload()}\n                  error={error}\n                />\n              )}\n            >\n              <Suspense fallback={<ComponentFallbacks.Loading componentName=\"Cooking Methods\" />}>\n                <CookingMethodsSection \n                  isMainPageVersion={true}\n                  maxDisplayed={6}\n                  onViewMore={() => router.push('/cooking-methods')}\n                />\n              </Suspense>\n            </ErrorBoundary>\n          </SectionWrapper>\n          \n          {/* Recipe Builder Section */}\n          <SectionWrapper id=\"recipe\" title=\"Recipe Builder\">\n            <ErrorBoundary\n              fallback={(error) => (\n                <ComponentFallbacks.RecipeBuilder \n                  onRetry={() => window.location.reload()}\n                  error={error}\n                />\n              )}\n            >\n              <Suspense fallback={<ComponentFallbacks.Loading componentName=\"Recipe Builder\" />}>\n                <RecipeBuilderSimple />\n              </Suspense>\n            </ErrorBoundary>\n          </SectionWrapper>\n          \n          {/* Additional children if provided */}\n          {children}\n        </main>\n        \n        {/* Footer */}\n        <footer className=\"mt-12 text-center\">\n          <div className=\"mx-auto mb-4\" style={{ maxWidth: '250px' }}>\n            <form action=\"https://www.paypal.com/ncp/payment/SVN6Q368TKKLS\" method=\"post\" target=\"_blank\">\n              <input \n                type=\"submit\" \n                value=\"HELP\" \n                style={{\n                  textAlign: 'center',\n                  border: 'none',\n                  borderRadius: '0.25rem',\n                  width: '100%',\n                  padding: '0 2rem',\n                  height: '2.625rem',\n                  fontWeight: 'bold',\n                  backgroundColor: '#FFD140',\n                  color: '#000000',\n                  fontFamily: '\"Helvetica Neue\", Arial, sans-serif',\n                  fontSize: '1rem',\n                  lineHeight: '1.25rem',\n                  cursor: 'pointer'\n                }}\n              />\n            </form>\n          </div>\n        </footer>\n      </div>\n      \n      {/* Debug Panel - Fixed Bottom Right */}\n      {debugMode && (\n        <Suspense fallback={null}>\n          <ConsolidatedDebugInfo \n            position=\"bottom-right\"\n            collapsible={true}\n            showPerformanceMetrics={true}\n            showAstrologicalData={true}\n            showComponentStates={true}\n          />\n        </Suspense>\n      )}\n      \n      {/* CSS for smooth navigation transitions */}\n      <style jsx>{`\n        .highlight-section {\n          transform: scale(1.02);\n          box-shadow: 0 10px 25px rgba(99, 102, 241, 0.15);\n          border: 2px solid rgba(99, 102, 241, 0.3);\n        }\n        \n        section {\n          transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out, border 0.3s ease-in-out;\n        }\n        \n        nav button:hover {\n          transform: translateY(-1px);\n        }\n        \n        nav button:active {\n          transform: translateY(0);\n        }\n      `}</style>\n    </div>\n    </MainPageContext.Provider>\n  );\n});\n\nexport default MainPageLayout;"],"version":3}