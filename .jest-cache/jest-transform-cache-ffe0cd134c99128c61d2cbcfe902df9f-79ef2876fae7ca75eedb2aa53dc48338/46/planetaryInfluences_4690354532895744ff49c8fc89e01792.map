{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/calculations/core/planetaryInfluences.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/calculations/core/planetaryInfluences.ts"],"sourcesContent":["/**\n * Planetary Influences Module\n * \n * Handles the mapping of planetary positions to alchemical properties\n * and calculates planetary influences on culinary recommendations.\n */\n\nimport type { PlanetaryPosition, ElementalProperties } from \"@/types/alchemy\";\nimport { getCachedCalculation } from '../../utils/calculationCache';\n\nimport { Element } from \"@/types/alchemy\";\n/**\n * Planetary alchemical property mappings\n * Based on traditional alchemical correspondences\n */\nexport const PLANETARY_ALCHEMICAL_MAPPINGS = {\n  Sun: { Spirit: 1, Essence: 0, Matter: 0, Substance: 0 },\n  moon: { Spirit: 0, Essence: 1, Matter: 1, Substance: 0 },\n  Mercury: { Spirit: 1, Essence: 0, Matter: 0, Substance: 1 },\n  Venus: { Spirit: 0, Essence: 1, Matter: 1, Substance: 0 },\n  Mars: { Spirit: 0, Essence: 1, Matter: 1, Substance: 0 },\n  Jupiter: { Spirit: 1, Essence: 1, Matter: 0, Substance: 0 },\n  Saturn: { Spirit: 1, Essence: 0, Matter: 1, Substance: 0 },\n  Uranus: { Spirit: 0, Essence: 1, Matter: 1, Substance: 0 },\n  Neptune: { Spirit: 0, Essence: 1, Matter: 0, Substance: 1 },\n  Pluto: { Spirit: 0, Essence: 1, Matter: 1, Substance: 0 }\n};\n\n/**\n * Planetary elemental correspondences (day/night variations)\n */\nexport const PLANETARY_ELEMENTAL_MAPPINGS = {\n  diurnal: {\n    Sun: 'Fire',\n    moon: 'Water',\n    Mercury: 'Air',\n    Venus: 'Water',\n    Mars: 'Fire',\n    Jupiter: 'Air',\n    Saturn: 'Air',\n    Uranus: 'Water',\n    Neptune: 'Water',\n    Pluto: 'Earth'\n  },\n  nocturnal: {\n    Sun: 'Fire',\n    moon: 'Water',\n    Mercury: 'Earth',\n    Venus: 'Earth',\n    Mars: 'Water',\n    Jupiter: 'Fire',\n    Saturn: 'Earth',\n    Uranus: 'Air',\n    Neptune: 'Water',\n    Pluto: 'Water'\n  }\n} as const;\n\n/**\n * Planetary dignity effects\n */\nexport const PLANETARY_DIGNITIES = {\n  Sun: { \n    rulership: ['leo'], \n    exaltation: ['aries'], \n    detriment: ['aquarius'], \n    fall: ['libra'] \n  },\n  moon: { \n    rulership: ['cancer'], \n    exaltation: ['taurus'], \n    detriment: ['capricorn'], \n    fall: ['scorpio'] \n  },\n  Mercury: { \n    rulership: ['gemini', 'virgo'], \n    exaltation: ['virgo'], \n    detriment: ['sagittarius', 'pisces'], \n    fall: ['pisces'] \n  },\n  Venus: { \n    rulership: ['taurus', 'libra'], \n    exaltation: ['pisces'], \n    detriment: ['aries', 'scorpio'], \n    fall: ['virgo'] \n  },\n  Mars: { \n    rulership: ['aries', 'scorpio'], \n    exaltation: ['capricorn'], \n    detriment: ['taurus', 'libra'], \n    fall: ['cancer'] \n  },\n  Jupiter: { \n    rulership: ['sagittarius', 'pisces'], \n    exaltation: ['cancer'], \n    detriment: ['gemini', 'virgo'], \n    fall: ['capricorn'] \n  },\n  Saturn: { \n    rulership: ['capricorn', 'aquarius'], \n    exaltation: ['libra'], \n    detriment: ['cancer', 'leo'], \n    fall: ['aries'] \n  },\n  Uranus: { \n    rulership: ['aquarius'], \n    exaltation: ['scorpio'], \n    detriment: ['leo'], \n    fall: ['taurus'] \n  },\n  Neptune: { \n    rulership: ['pisces'], \n    exaltation: ['cancer'], \n    detriment: ['virgo'], \n    fall: ['capricorn'] \n  },\n  Pluto: { \n    rulership: ['scorpio'], \n    exaltation: ['leo'], \n    detriment: ['taurus'], \n    fall: ['aquarius'] \n  }\n};\n\n/**\n * Calculate planetary dignity modifier\n */\nexport function calculatePlanetaryDignity(planet: string, sign: string): {\n  type: 'rulership' | 'exaltation' | 'detriment' | 'fall' | 'neutral';\n  modifier: number;\n} {\n  const planetKey = planet?.toLowerCase();\n  const signKey = sign?.toLowerCase();\n  const dignities = PLANETARY_DIGNITIES[planetKey as keyof typeof PLANETARY_DIGNITIES];\n  \n  if (!dignities) {\n    return { type: 'neutral', modifier: 1.0 };\n  }\n\n  if ((Array.isArray(dignities.rulership) ? dignities.rulership.includes(signKey) : dignities.rulership === signKey)) {\n    return { type: 'rulership', modifier: 1.5 };\n  }\n  if ((Array.isArray(dignities.exaltation) ? dignities.exaltation.includes(signKey) : dignities.exaltation === signKey)) {\n    return { type: 'exaltation', modifier: 1.3 };\n  }\n  if ((Array.isArray(dignities.detriment) ? dignities.detriment.includes(signKey) : dignities.detriment === signKey)) {\n    return { type: 'detriment', modifier: 0.7 };\n  }\n  if ((Array.isArray(dignities.fall) ? dignities.fall.includes(signKey) : dignities.fall === signKey)) {\n    return { type: 'fall', modifier: 0.5 };\n  }\n\n  return { type: 'neutral', modifier: 1.0 };\n}\n\n/**\n * Calculate planetary strength based on position and aspects\n */\nexport function calculatePlanetaryStrength(\n  planet: string,\n  position: PlanetaryPosition,\n  aspects?: Array<{ planet1: string; planet2: string; type: string; orb: number }>\n): number {\n  let strength = 1.0;\n\n  // Base strength from dignity\n  if (position.sign) {\n    const dignity = calculatePlanetaryDignity(planet, position.sign);\n    strength *= dignity.modifier;\n  }\n\n  // Adjust for retrograde motion\n  if (position.isRetrograde) {\n    strength *= 0.8;\n  }\n\n  // Adjust for aspects (if provided)\n  if (aspects) {\n    const planetAspects = (aspects || []).filter(aspect => aspect.planet1?.toLowerCase() === planet?.toLowerCase() || \n                aspect.planet2?.toLowerCase() === planet?.toLowerCase()\n    );\n\n    (planetAspects || []).forEach(aspect => {\n      switch (aspect.type) {\n        case 'conjunction':\n          strength *= 1.2;\n          break;\n        case 'trine':\n          strength *= 1.15;\n          break;\n        case 'sextile':\n          strength *= 1.1;\n          break;\n        case 'square':\n          strength *= 0.9;\n          break;\n        case 'opposition':\n          strength *= 0.85;\n          break;\n      }\n    });\n  }\n\n  return Math.max(0.3, Math.min(2.0, strength));\n}\n\n/**\n * Get planetary elemental influence\n */\nexport function getPlanetaryElementalInfluence(\n  planet: string,\n  isDaytime: boolean = true\n): keyof ElementalProperties {\n  const planetKey = planet?.toLowerCase();\n  const timeKey = isDaytime ? 'diurnal' : 'nocturnal';\n  \n  return PLANETARY_ELEMENTAL_MAPPINGS[timeKey][planetKey as keyof typeof PLANETARY_ELEMENTAL_MAPPINGS.diurnal] as keyof ElementalProperties || 'Fire';\n}\n\n/**\n * Calculate planetary hours influence\n */\nexport function calculatePlanetaryHoursInfluence(date: Date): {\n  dayRuler: string;\n  hourRuler: string;\n  influence: number;\n} {\n  const dayOfWeek = date.getDay();\n  const hour = date.getHours();\n\n  const dayRulers = ['Sun', 'Moon', 'Mars', 'Mercury', 'Jupiter', 'Venus', 'Saturn'];\n  const hourRulers = [\n    'Sun', 'Venus', 'Mercury', 'Moon', 'Saturn', 'Jupiter', 'Mars',\n    'Sun', 'Venus', 'Mercury', 'Moon', 'Saturn', 'Jupiter', 'Mars',\n    'Sun', 'Venus', 'Mercury', 'Moon', 'Saturn', 'Jupiter', 'Mars',\n    'Sun', 'Venus', 'Mercury'\n  ];\n\n  const dayRuler = dayRulers[dayOfWeek];\n  const hourRuler = hourRulers[hour];\n\n  // Calculate combined influence\n  let influence = 1.0;\n  if (dayRuler === hourRuler) {\n    influence = 1.5; // Same planet rules both day and hour\n  } else {\n    influence = 1.2; // Different planets\n  }\n\n  return { dayRuler, hourRuler, influence };\n}\n\n/**\n * Calculate comprehensive planetary influences\n */\nexport function calculatePlanetaryInfluences(\n  planetaryPositions: { [key: string]: PlanetaryPosition },\n  isDaytime: boolean = true,\n  currentDate?: Date\n): {\n  alchemicalInfluences: { [key: string]: number };\n  elementalInfluences: { [key: string]: number };\n  dominantPlanets: Array<{ planet: string; strength: number; element: Element }>;\n  planetaryHours?: { dayRuler: string; hourRuler: string; influence: number };\n} {\n  const cacheKey = `planetary_influences_${JSON.stringify(planetaryPositions)}_${isDaytime}_${currentDate?.getTime()}`;\n  \n  return getCachedCalculation(\n    cacheKey,\n    { positions: planetaryPositions, isDaytime, date: currentDate?.getTime() },\n    () => {\n      const alchemicalInfluences: { [key: string]: number } = {\n        Spirit: 0,\n        Essence: 0,\n        Matter: 0,\n        Substance: 0\n      };\n\n      const elementalInfluences: { [key: string]: number } = { Fire: 0, Water: 0, Air: 0, Earth: 0\n       };\n\n      const dominantPlanets: Array<{ planet: string; strength: number; element: Element }> = [];\n\n      // Process each planet\n      Object.entries(planetaryPositions || {}).forEach(([planet, position]) => {\n        const planetKey = planet?.toLowerCase();\n        const mapping = PLANETARY_ALCHEMICAL_MAPPINGS[planetKey as keyof typeof PLANETARY_ALCHEMICAL_MAPPINGS];\n        \n        if (mapping) {\n          // Calculate planetary strength\n          const strength = calculatePlanetaryStrength(planet, position);\n          \n          // Add to alchemical influences\n          alchemicalInfluences.Spirit += mapping.Spirit * strength;\n          alchemicalInfluences.Essence += mapping.Essence * strength;\n          alchemicalInfluences.Matter += mapping.Matter * strength;\n          alchemicalInfluences.Substance += mapping.Substance * strength;\n\n          // Get elemental influence\n          const _element = getPlanetaryElementalInfluence(planet, isDaytime);\n          elementalInfluences[_element] += strength;\n\n          // Add to dominant planets list\n          dominantPlanets?.push({\n            planet,\n            strength,\n            element: _element as Element\n          });\n        }\n      });\n\n      // Sort dominant planets by strength\n      dominantPlanets.sort((a, b) => b.strength - a.strength);\n\n      // Calculate planetary hours if date provided\n      let planetaryHours;\n      if (currentDate) {\n        planetaryHours = calculatePlanetaryHoursInfluence(currentDate);\n      }\n\n      return {\n        alchemicalInfluences,\n        elementalInfluences,\n        dominantPlanets,\n        planetaryHours\n      };\n    },\n    300000 // 5 minute cache\n  ) as {\n    alchemicalInfluences: { [key: string]: number };\n    elementalInfluences: { [key: string]: number };\n    dominantPlanets: Array<{ planet: string; strength: number; element: Element }>;\n    planetaryHours?: { dayRuler: string; hourRuler: string; influence: number };\n  };\n}\n\n/**\n * Get culinary recommendations based on planetary influences\n */\nexport function getPlanetaryCulinaryRecommendations(\n  dominantPlanets: Array<{ planet: string; strength: number; element: Element }>\n): {\n  ingredients: string[];\n  cookingMethods: string[];\n  flavors: string[];\n  timing: string[];\n} {\n  const recommendations = {\n    ingredients: [] as string[],\n    cookingMethods: [] as string[],\n    flavors: [] as string[],\n    timing: [] as string[]\n  };\n\n  // Get top 3 dominant planets\n  const topPlanets = dominantPlanets?.slice(0, 3);\n\n  (topPlanets || []).forEach(({ planet, element }) => {\n    const planetKey = planet?.toLowerCase();\n\n    // Planetary ingredient associations\n    switch (planetKey) {\n      case 'Sun':\n        recommendations.ingredients?.push('citrus fruits', 'golden grains', 'sunflower oil');\n        recommendations.cookingMethods?.push('grilling', 'roasting');\n        recommendations.flavors?.push('bright', 'warming', 'energizing');\n        recommendations.timing?.push('midday', 'solar hours');\n        break;\n      case 'Moon':\n        recommendations.ingredients?.push('dAiry products', 'seafood', 'white vegetables');\n        recommendations.cookingMethods?.push('steaming', 'poaching');\n        recommendations.flavors?.push('cooling', 'soothing', 'nurturing');\n        recommendations.timing?.push('evening', 'lunar hours');\n        break;\n      case 'Mercury':\n        recommendations.ingredients?.push('nuts', 'seeds', 'leafy greens');\n        recommendations.cookingMethods?.push('quick sautéing', 'stir-frying');\n        recommendations.flavors?.push('light', 'crisp', 'stimulating');\n        recommendations.timing?.push('morning', 'communication hours');\n        break;\n      case 'Venus':\n        recommendations.ingredients?.push('fruits', 'herbs', 'sweet vegetables');\n        recommendations.cookingMethods?.push('gentle cooking', 'raw preparation');\n        recommendations.flavors?.push('sweet', 'harmonious', 'pleasant');\n        recommendations.timing?.push('afternoon', 'social hours');\n        break;\n      case 'Mars':\n        recommendations.ingredients?.push('spicy peppers', 'red meat', 'garlic');\n        recommendations.cookingMethods?.push('high-heat cooking', 'grilling');\n        recommendations.flavors?.push('spicy', 'intense', 'energizing');\n        recommendations.timing?.push('early morning', 'action hours');\n        break;\n      case 'Jupiter':\n        recommendations.ingredients?.push('legumes', 'rich foods', 'exotic spices');\n        recommendations.cookingMethods?.push('slow cooking', 'braising');\n        recommendations.flavors?.push('rich', 'abundant', 'satisfying');\n        recommendations.timing?.push('feast times', 'expansion hours');\n        break;\n      case 'Saturn':\n        recommendations.ingredients?.push('root vegetables', 'aged foods', 'grains');\n        recommendations.cookingMethods?.push('slow roasting', 'preservation');\n        recommendations.flavors?.push('earthy', 'structured', 'grounding');\n        recommendations.timing?.push('late evening', 'discipline hours');\n        break;\n    }\n  });\n\n  return recommendations;\n}\n\nexport default {\n  calculatePlanetaryInfluences,\n  calculatePlanetaryDignity,\n  calculatePlanetaryStrength,\n  getPlanetaryElementalInfluence,\n  calculatePlanetaryHoursInfluence,\n  getPlanetaryCulinaryRecommendations,\n  PLANETARY_ALCHEMICAL_MAPPINGS,\n  PLANETARY_ELEMENTAL_MAPPINGS,\n  PLANETARY_DIGNITIES\n}; "],"version":3}