c89b1957548d33d48afd6ce2a93b601d
"use strict";
/**
 * Planetary Influences Module
 *
 * Handles the mapping of planetary positions to alchemical properties
 * and calculates planetary influences on culinary recommendations.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPlanetaryCulinaryRecommendations = exports.calculatePlanetaryInfluences = exports.calculatePlanetaryHoursInfluence = exports.getPlanetaryElementalInfluence = exports.calculatePlanetaryStrength = exports.calculatePlanetaryDignity = exports.PLANETARY_DIGNITIES = exports.PLANETARY_ELEMENTAL_MAPPINGS = exports.PLANETARY_ALCHEMICAL_MAPPINGS = void 0;
const calculationCache_1 = require("../../utils/calculationCache");
/**
 * Planetary alchemical property mappings
 * Based on traditional alchemical correspondences
 */
exports.PLANETARY_ALCHEMICAL_MAPPINGS = {
    Sun: { Spirit: 1, Essence: 0, Matter: 0, Substance: 0 },
    moon: { Spirit: 0, Essence: 1, Matter: 1, Substance: 0 },
    Mercury: { Spirit: 1, Essence: 0, Matter: 0, Substance: 1 },
    Venus: { Spirit: 0, Essence: 1, Matter: 1, Substance: 0 },
    Mars: { Spirit: 0, Essence: 1, Matter: 1, Substance: 0 },
    Jupiter: { Spirit: 1, Essence: 1, Matter: 0, Substance: 0 },
    Saturn: { Spirit: 1, Essence: 0, Matter: 1, Substance: 0 },
    Uranus: { Spirit: 0, Essence: 1, Matter: 1, Substance: 0 },
    Neptune: { Spirit: 0, Essence: 1, Matter: 0, Substance: 1 },
    Pluto: { Spirit: 0, Essence: 1, Matter: 1, Substance: 0 }
};
/**
 * Planetary elemental correspondences (day/night variations)
 */
exports.PLANETARY_ELEMENTAL_MAPPINGS = {
    diurnal: {
        Sun: 'Fire',
        moon: 'Water',
        Mercury: 'Air',
        Venus: 'Water',
        Mars: 'Fire',
        Jupiter: 'Air',
        Saturn: 'Air',
        Uranus: 'Water',
        Neptune: 'Water',
        Pluto: 'Earth'
    },
    nocturnal: {
        Sun: 'Fire',
        moon: 'Water',
        Mercury: 'Earth',
        Venus: 'Earth',
        Mars: 'Water',
        Jupiter: 'Fire',
        Saturn: 'Earth',
        Uranus: 'Air',
        Neptune: 'Water',
        Pluto: 'Water'
    }
};
/**
 * Planetary dignity effects
 */
exports.PLANETARY_DIGNITIES = {
    Sun: {
        rulership: ['leo'],
        exaltation: ['aries'],
        detriment: ['aquarius'],
        fall: ['libra']
    },
    moon: {
        rulership: ['cancer'],
        exaltation: ['taurus'],
        detriment: ['capricorn'],
        fall: ['scorpio']
    },
    Mercury: {
        rulership: ['gemini', 'virgo'],
        exaltation: ['virgo'],
        detriment: ['sagittarius', 'pisces'],
        fall: ['pisces']
    },
    Venus: {
        rulership: ['taurus', 'libra'],
        exaltation: ['pisces'],
        detriment: ['aries', 'scorpio'],
        fall: ['virgo']
    },
    Mars: {
        rulership: ['aries', 'scorpio'],
        exaltation: ['capricorn'],
        detriment: ['taurus', 'libra'],
        fall: ['cancer']
    },
    Jupiter: {
        rulership: ['sagittarius', 'pisces'],
        exaltation: ['cancer'],
        detriment: ['gemini', 'virgo'],
        fall: ['capricorn']
    },
    Saturn: {
        rulership: ['capricorn', 'aquarius'],
        exaltation: ['libra'],
        detriment: ['cancer', 'leo'],
        fall: ['aries']
    },
    Uranus: {
        rulership: ['aquarius'],
        exaltation: ['scorpio'],
        detriment: ['leo'],
        fall: ['taurus']
    },
    Neptune: {
        rulership: ['pisces'],
        exaltation: ['cancer'],
        detriment: ['virgo'],
        fall: ['capricorn']
    },
    Pluto: {
        rulership: ['scorpio'],
        exaltation: ['leo'],
        detriment: ['taurus'],
        fall: ['aquarius']
    }
};
/**
 * Calculate planetary dignity modifier
 */
function calculatePlanetaryDignity(planet, sign) {
    const planetKey = planet === null || planet === void 0 ? void 0 : planet.toLowerCase();
    const signKey = sign === null || sign === void 0 ? void 0 : sign.toLowerCase();
    const dignities = exports.PLANETARY_DIGNITIES[planetKey];
    if (!dignities) {
        return { type: 'neutral', modifier: 1.0 };
    }
    if ((Array.isArray(dignities.rulership) ? dignities.rulership.includes(signKey) : dignities.rulership === signKey)) {
        return { type: 'rulership', modifier: 1.5 };
    }
    if ((Array.isArray(dignities.exaltation) ? dignities.exaltation.includes(signKey) : dignities.exaltation === signKey)) {
        return { type: 'exaltation', modifier: 1.3 };
    }
    if ((Array.isArray(dignities.detriment) ? dignities.detriment.includes(signKey) : dignities.detriment === signKey)) {
        return { type: 'detriment', modifier: 0.7 };
    }
    if ((Array.isArray(dignities.fall) ? dignities.fall.includes(signKey) : dignities.fall === signKey)) {
        return { type: 'fall', modifier: 0.5 };
    }
    return { type: 'neutral', modifier: 1.0 };
}
exports.calculatePlanetaryDignity = calculatePlanetaryDignity;
/**
 * Calculate planetary strength based on position and aspects
 */
function calculatePlanetaryStrength(planet, position, aspects) {
    let strength = 1.0;
    // Base strength from dignity
    if (position.sign) {
        const dignity = calculatePlanetaryDignity(planet, position.sign);
        strength *= dignity.modifier;
    }
    // Adjust for retrograde motion
    if (position.isRetrograde) {
        strength *= 0.8;
    }
    // Adjust for aspects (if provided)
    if (aspects) {
        const planetAspects = (aspects || []).filter(aspect => {
            var _a, _b;
            return ((_a = aspect.planet1) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === (planet === null || planet === void 0 ? void 0 : planet.toLowerCase()) ||
                ((_b = aspect.planet2) === null || _b === void 0 ? void 0 : _b.toLowerCase()) === (planet === null || planet === void 0 ? void 0 : planet.toLowerCase());
        });
        (planetAspects || []).forEach(aspect => {
            switch (aspect.type) {
                case 'conjunction':
                    strength *= 1.2;
                    break;
                case 'trine':
                    strength *= 1.15;
                    break;
                case 'sextile':
                    strength *= 1.1;
                    break;
                case 'square':
                    strength *= 0.9;
                    break;
                case 'opposition':
                    strength *= 0.85;
                    break;
            }
        });
    }
    return Math.max(0.3, Math.min(2.0, strength));
}
exports.calculatePlanetaryStrength = calculatePlanetaryStrength;
/**
 * Get planetary elemental influence
 */
function getPlanetaryElementalInfluence(planet, isDaytime = true) {
    const planetKey = planet === null || planet === void 0 ? void 0 : planet.toLowerCase();
    const timeKey = isDaytime ? 'diurnal' : 'nocturnal';
    return exports.PLANETARY_ELEMENTAL_MAPPINGS[timeKey][planetKey] || 'Fire';
}
exports.getPlanetaryElementalInfluence = getPlanetaryElementalInfluence;
/**
 * Calculate planetary hours influence
 */
function calculatePlanetaryHoursInfluence(date) {
    const dayOfWeek = date.getDay();
    const hour = date.getHours();
    const dayRulers = ['Sun', 'Moon', 'Mars', 'Mercury', 'Jupiter', 'Venus', 'Saturn'];
    const hourRulers = [
        'Sun', 'Venus', 'Mercury', 'Moon', 'Saturn', 'Jupiter', 'Mars',
        'Sun', 'Venus', 'Mercury', 'Moon', 'Saturn', 'Jupiter', 'Mars',
        'Sun', 'Venus', 'Mercury', 'Moon', 'Saturn', 'Jupiter', 'Mars',
        'Sun', 'Venus', 'Mercury'
    ];
    const dayRuler = dayRulers[dayOfWeek];
    const hourRuler = hourRulers[hour];
    // Calculate combined influence
    let influence = 1.0;
    if (dayRuler === hourRuler) {
        influence = 1.5; // Same planet rules both day and hour
    }
    else {
        influence = 1.2; // Different planets
    }
    return { dayRuler, hourRuler, influence };
}
exports.calculatePlanetaryHoursInfluence = calculatePlanetaryHoursInfluence;
/**
 * Calculate comprehensive planetary influences
 */
function calculatePlanetaryInfluences(planetaryPositions, isDaytime = true, currentDate) {
    const cacheKey = `planetary_influences_${JSON.stringify(planetaryPositions)}_${isDaytime}_${currentDate === null || currentDate === void 0 ? void 0 : currentDate.getTime()}`;
    return (0, calculationCache_1.getCachedCalculation)(cacheKey, { positions: planetaryPositions, isDaytime, date: currentDate === null || currentDate === void 0 ? void 0 : currentDate.getTime() }, () => {
        const alchemicalInfluences = {
            Spirit: 0,
            Essence: 0,
            Matter: 0,
            Substance: 0
        };
        const elementalInfluences = { Fire: 0, Water: 0, Air: 0, Earth: 0
        };
        const dominantPlanets = [];
        // Process each planet
        Object.entries(planetaryPositions || {}).forEach(([planet, position]) => {
            const planetKey = planet === null || planet === void 0 ? void 0 : planet.toLowerCase();
            const mapping = exports.PLANETARY_ALCHEMICAL_MAPPINGS[planetKey];
            if (mapping) {
                // Calculate planetary strength
                const strength = calculatePlanetaryStrength(planet, position);
                // Add to alchemical influences
                alchemicalInfluences.Spirit += mapping.Spirit * strength;
                alchemicalInfluences.Essence += mapping.Essence * strength;
                alchemicalInfluences.Matter += mapping.Matter * strength;
                alchemicalInfluences.Substance += mapping.Substance * strength;
                // Get elemental influence
                const _element = getPlanetaryElementalInfluence(planet, isDaytime);
                elementalInfluences[_element] += strength;
                // Add to dominant planets list
                dominantPlanets === null || dominantPlanets === void 0 ? void 0 : dominantPlanets.push({
                    planet,
                    strength,
                    element: _element
                });
            }
        });
        // Sort dominant planets by strength
        dominantPlanets.sort((a, b) => b.strength - a.strength);
        // Calculate planetary hours if date provided
        let planetaryHours;
        if (currentDate) {
            planetaryHours = calculatePlanetaryHoursInfluence(currentDate);
        }
        return {
            alchemicalInfluences,
            elementalInfluences,
            dominantPlanets,
            planetaryHours
        };
    }, 300000 // 5 minute cache
    );
}
exports.calculatePlanetaryInfluences = calculatePlanetaryInfluences;
/**
 * Get culinary recommendations based on planetary influences
 */
function getPlanetaryCulinaryRecommendations(dominantPlanets) {
    const recommendations = {
        ingredients: [],
        cookingMethods: [],
        flavors: [],
        timing: []
    };
    // Get top 3 dominant planets
    const topPlanets = dominantPlanets === null || dominantPlanets === void 0 ? void 0 : dominantPlanets.slice(0, 3);
    (topPlanets || []).forEach(({ planet, element }) => {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3;
        const planetKey = planet === null || planet === void 0 ? void 0 : planet.toLowerCase();
        // Planetary ingredient associations
        switch (planetKey) {
            case 'Sun':
                (_a = recommendations.ingredients) === null || _a === void 0 ? void 0 : _a.push('citrus fruits', 'golden grains', 'sunflower oil');
                (_b = recommendations.cookingMethods) === null || _b === void 0 ? void 0 : _b.push('grilling', 'roasting');
                (_c = recommendations.flavors) === null || _c === void 0 ? void 0 : _c.push('bright', 'warming', 'energizing');
                (_d = recommendations.timing) === null || _d === void 0 ? void 0 : _d.push('midday', 'solar hours');
                break;
            case 'Moon':
                (_e = recommendations.ingredients) === null || _e === void 0 ? void 0 : _e.push('dAiry products', 'seafood', 'white vegetables');
                (_f = recommendations.cookingMethods) === null || _f === void 0 ? void 0 : _f.push('steaming', 'poaching');
                (_g = recommendations.flavors) === null || _g === void 0 ? void 0 : _g.push('cooling', 'soothing', 'nurturing');
                (_h = recommendations.timing) === null || _h === void 0 ? void 0 : _h.push('evening', 'lunar hours');
                break;
            case 'Mercury':
                (_j = recommendations.ingredients) === null || _j === void 0 ? void 0 : _j.push('nuts', 'seeds', 'leafy greens');
                (_k = recommendations.cookingMethods) === null || _k === void 0 ? void 0 : _k.push('quick sautéing', 'stir-frying');
                (_l = recommendations.flavors) === null || _l === void 0 ? void 0 : _l.push('light', 'crisp', 'stimulating');
                (_m = recommendations.timing) === null || _m === void 0 ? void 0 : _m.push('morning', 'communication hours');
                break;
            case 'Venus':
                (_o = recommendations.ingredients) === null || _o === void 0 ? void 0 : _o.push('fruits', 'herbs', 'sweet vegetables');
                (_p = recommendations.cookingMethods) === null || _p === void 0 ? void 0 : _p.push('gentle cooking', 'raw preparation');
                (_q = recommendations.flavors) === null || _q === void 0 ? void 0 : _q.push('sweet', 'harmonious', 'pleasant');
                (_r = recommendations.timing) === null || _r === void 0 ? void 0 : _r.push('afternoon', 'social hours');
                break;
            case 'Mars':
                (_s = recommendations.ingredients) === null || _s === void 0 ? void 0 : _s.push('spicy peppers', 'red meat', 'garlic');
                (_t = recommendations.cookingMethods) === null || _t === void 0 ? void 0 : _t.push('high-heat cooking', 'grilling');
                (_u = recommendations.flavors) === null || _u === void 0 ? void 0 : _u.push('spicy', 'intense', 'energizing');
                (_v = recommendations.timing) === null || _v === void 0 ? void 0 : _v.push('early morning', 'action hours');
                break;
            case 'Jupiter':
                (_w = recommendations.ingredients) === null || _w === void 0 ? void 0 : _w.push('legumes', 'rich foods', 'exotic spices');
                (_x = recommendations.cookingMethods) === null || _x === void 0 ? void 0 : _x.push('slow cooking', 'braising');
                (_y = recommendations.flavors) === null || _y === void 0 ? void 0 : _y.push('rich', 'abundant', 'satisfying');
                (_z = recommendations.timing) === null || _z === void 0 ? void 0 : _z.push('feast times', 'expansion hours');
                break;
            case 'Saturn':
                (_0 = recommendations.ingredients) === null || _0 === void 0 ? void 0 : _0.push('root vegetables', 'aged foods', 'grains');
                (_1 = recommendations.cookingMethods) === null || _1 === void 0 ? void 0 : _1.push('slow roasting', 'preservation');
                (_2 = recommendations.flavors) === null || _2 === void 0 ? void 0 : _2.push('earthy', 'structured', 'grounding');
                (_3 = recommendations.timing) === null || _3 === void 0 ? void 0 : _3.push('late evening', 'discipline hours');
                break;
        }
    });
    return recommendations;
}
exports.getPlanetaryCulinaryRecommendations = getPlanetaryCulinaryRecommendations;
exports.default = {
    calculatePlanetaryInfluences,
    calculatePlanetaryDignity,
    calculatePlanetaryStrength,
    getPlanetaryElementalInfluence,
    calculatePlanetaryHoursInfluence,
    getPlanetaryCulinaryRecommendations,
    PLANETARY_ALCHEMICAL_MAPPINGS: exports.PLANETARY_ALCHEMICAL_MAPPINGS,
    PLANETARY_ELEMENTAL_MAPPINGS: exports.PLANETARY_ELEMENTAL_MAPPINGS,
    PLANETARY_DIGNITIES: exports.PLANETARY_DIGNITIES
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,