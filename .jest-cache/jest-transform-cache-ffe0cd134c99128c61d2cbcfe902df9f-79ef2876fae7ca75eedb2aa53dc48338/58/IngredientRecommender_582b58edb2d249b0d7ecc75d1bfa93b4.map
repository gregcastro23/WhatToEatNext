{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/components/IngredientRecommender.tsx","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/components/IngredientRecommender.tsx"],"sourcesContent":["import { useAstrologicalState } from '@/hooks/useAstrologicalState';\nimport { useEffect, useState, useMemo } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { ElementalCalculator } from '@/services/ElementalCalculator';\nimport { ElementalProperties } from '@/types/alchemy';\nimport { getChakraBasedRecommendations, GroupedIngredientRecommendations, getIngredientRecommendations, IngredientRecommendation } from '@/utils/ingredientRecommender';\nimport { Flame, Droplets, Mountain, Wind, Info, Clock, Tag, Leaf, X, ChevronDown, ChevronUp, Beaker, Brain, ExternalLink, ArrowRight } from 'lucide-react';\nimport { useChakraInfluencedFood } from '@/hooks/useChakraInfluencedFood';\nimport { normalizeChakraKey } from '@/constants/chakraSymbols';\nimport { herbsCollection, oilsCollection, vinegarsCollection, grainsCollection } from '@/data/ingredients';\nimport type { Ingredient } from '@/types/ingredient';\nimport type { UnifiedIngredient } from '@/types/ingredient';\nimport EnterpriseIntelligencePanel from '@/components/intelligence/EnterpriseIntelligencePanel';\n\n// Props interface for IngredientRecommender\ninterface IngredientRecommenderProps {\n  initialCategory?: string | null;\n  initialSelectedIngredient?: string | null;\n  isFullPageVersion?: boolean;\n  maxDisplayed?: number;\n  onCategorySelect?: (category: string) => void;\n  onIngredientSelect?: (ingredient: IngredientRecommendation) => void;\n}\n\n/**\n * Maps planets to their elemental influences (diurnal and nocturnal elements)\n */\nconst planetaryElements: Record<string, { diurnal: string, nocturnal: string }> = {\n  'Sun': { diurnal: 'Fire', nocturnal: 'Fire' },\n  'Moon': { diurnal: 'Water', nocturnal: 'Water' },\n  'Mercury': { diurnal: 'Air', nocturnal: 'Earth' },\n  'Venus': { diurnal: 'Water', nocturnal: 'Earth' },\n  'Mars': { diurnal: 'Fire', nocturnal: 'Water' },\n  'Jupiter': { diurnal: 'Air', nocturnal: 'Fire' },\n  'Saturn': { diurnal: 'Air', nocturnal: 'Earth' },\n  'Uranus': { diurnal: 'Water', nocturnal: 'Air' },\n  'Neptune': { diurnal: 'Water', nocturnal: 'Water' },\n  'Pluto': { diurnal: 'Earth', nocturnal: 'Water' }\n};\n\n// Define a styles object for animations and custom styles\nconst customStyles = {\n  '@keyframes fadeIn': {\n    '0%': { opacity: 0 },\n    '100%': { opacity: 1 }\n  },\n  animateFadeIn: {\n    animation: 'fadeIn 0.3s ease-in-out'\n  }\n};\n\n// Define category display names\nconst CATEGORY_DISPLAY_NAMES: Record<string, string> = {\n  proteins: 'Proteins',\n  vegetables: 'Vegetables',\n  grains: 'Grains & Starches',\n  fruits: 'Fruits',\n  herbs: 'Herbs & Aromatics',\n  spices: 'Spices & Seasonings',\n  oils: 'Oils & Fats',\n  vinegars: 'Vinegars & Acidifiers'\n};\n\n// Define category display counts\nconst CATEGORY_DISPLAY_COUNTS: Record<string, number> = {\n  proteins: 12,\n  vegetables: 12,\n  grains: 10,\n  fruits: 12,\n  herbs: 10,\n  spices: 12,\n  oils: 8,\n  vinegars: 8\n};\n\n// Using inline styles to avoid CSS module conflicts\nexport default function IngredientRecommender({\n  initialCategory = null,\n  initialSelectedIngredient = null,\n  isFullPageVersion = false,\n  maxDisplayed = 12,\n  onCategorySelect,\n  onIngredientSelect\n}: IngredientRecommenderProps = {}) {\n  const router = useRouter();\n  // Use the hook to get astrological data\n  const astroState = useAstrologicalState();\n  const { \n    currentZodiac, \n    currentPlanetaryAlignment, \n    loading: astroLoading, \n    isDaytime \n  } = astroState;\n  \n  // Note: chakraEnergies are not available from useAstrologicalState\n  // We'll rely on the useChakraInfluencedFood hook for chakra-based recommendations\n  const contextChakraEnergies = null; // Not available from this hook\n  const planetaryPositions = currentPlanetaryAlignment;\n  const astroError = null; // Hook doesn't expose error state\n  const [astroRecommendations, setAstroRecommendations] = useState<GroupedIngredientRecommendations>({});\n  // States for selected item and expansion\n  const [selectedIngredient, setSelectedIngredient] = useState<IngredientRecommendation | null>(null);\n  const [expanded, setExpanded] = useState<Record<string, boolean>>({});\n  const [activeCategory, setActiveCategory] = useState<string>(initialCategory || 'proteins');\n\n  // Initialize state from props\n  useEffect(() => {\n    if (initialCategory) {\n      setActiveCategory(initialCategory);\n    }\n    if (initialSelectedIngredient) {\n      // Find the ingredient in recommendations and set it as selected\n      // This will be handled after recommendations are loaded\n    }\n  }, [initialCategory, initialSelectedIngredient]);\n  \n  // Enterprise Intelligence state\n  const [showEnterpriseIntelligence, setShowEnterpriseIntelligence] = useState<boolean>(false);\n  const [enterpriseIntelligenceAnalysis, setEnterpriseIntelligenceAnalysis] = useState<any>(null);\n  \n  // Use the custom hook for food recommendations\n  const { \n    recommendations: foodRecommendations, \n    chakraEnergies,\n    loading: foodLoading, \n    error: foodError,\n    refreshRecommendations\n  } = useChakraInfluencedFood({ limit: 300 }); // Increased from 200 to 300 to ensure all categories have plenty of items\n  \n  // Helper function to get element icon with inline styles\n  const getElementIcon = (element: string) => {\n    const iconStyle = { \n      marginRight: '2px',\n      color: element === 'Fire' ? '#ff6b6b' : \n            element === 'Water' ? '#6bb5ff' :\n            element === 'Earth' ? '#6bff8e' :\n            '#d9b3ff' // Air\n    };\n    \n    switch (element) {\n      case 'Fire': return <Flame style={iconStyle} size={16} />;\n      case 'Water': return <Droplets style={iconStyle} size={16} />;\n      case 'Earth': return <Mountain style={iconStyle} size={16} />;\n      case 'Air': return <Wind style={iconStyle} size={16} />;\n      default: return null;\n    }\n  };\n  \n  // Handle ingredient selection to display details\n  const handleIngredientSelect = (item: unknown, e: React.MouseEvent) => {\n    e.stopPropagation();\n    \n    // Toggle selected ingredient\n    if (selectedIngredient?.name === item.name) {\n      setSelectedIngredient(null);\n    } else {\n      setSelectedIngredient(item);\n      \n      // Call prop callback if provided\n      if (onIngredientSelect) {\n        onIngredientSelect(item as IngredientRecommendation);\n      }\n      \n      // Store selection in session storage for context preservation\n      try {\n        sessionStorage.setItem('selectedIngredient', JSON.stringify({\n          name: (item as any).name,\n          category: (item as any).category,\n          timestamp: Date.now()\n        }));\n      } catch (error) {\n        console.warn('Failed to store selected ingredient in session storage:', error);\n      }\n    }\n  };\n\n  // Handle category selection\n  const handleCategorySelect = (category: string) => {\n    setActiveCategory(category);\n    \n    // Call prop callback if provided\n    if (onCategorySelect) {\n      onCategorySelect(category);\n    }\n    \n    // Store selection in session storage for context preservation\n    try {\n      sessionStorage.setItem('selectedIngredientCategory', category);\n    } catch (error) {\n      console.warn('Failed to store selected category in session storage:', error);\n    }\n  };\n\n  // Handle navigation to full ingredients page\n  const handleViewMore = () => {\n    // Preserve current context in URL parameters\n    const params = new URLSearchParams();\n    if (activeCategory) {\n      params.set('category', activeCategory);\n    }\n    if (selectedIngredient) {\n      params.set('ingredient', selectedIngredient.name);\n    }\n    \n    const url = `/ingredients${params.toString() ? `?${params.toString()}` : ''}`;\n    router.push(url);\n  };\n  \n  // Toggle expansion for a category\n  const toggleCategoryExpansion = (_category: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    \n    setExpanded(prev => ({\n      ...prev,\n      [_category]: !prev[_category]\n    }));\n  };\n  \n  // Reset selected ingredient when recommendations change\n  useEffect(() => {\n    setSelectedIngredient(null);\n  }, [astroRecommendations, foodRecommendations]);\n  \n  // Use chakra energies and planetary positions to generate ingredient recommendations\n  useEffect(() => {\n    if (!astroLoading && !astroError) {\n      // Create a combined approach using both chakra and standard recommendations\n      const chakraRecommendations = contextChakraEnergies ? getChakraBasedRecommendations(contextChakraEnergies, 16) : {};\n      \n      // Get elemental properties from planetary positions\n      let elementalProps: ElementalProperties | undefined;\n      if (planetaryPositions) {\n        const calculator = new ElementalCalculator();\n        elementalProps = calculator.calculateElementalState(planetaryPositions);\n      }\n      \n      // Determine current planetary day and hour\n      const now = new Date();\n      // Extract planetary day and hour from context if available\n      const planetaryDay = planetaryPositions?.planetaryDay?.planet || 'Sun';\n      const planetaryHour = planetaryPositions?.planetaryHour?.planet || 'Sun';\n      const isDaytime = now.getHours() >= 6 && now.getHours() < 18;\n      \n      // Create an object with astrological state data\n      const astroState = {\n        elementalProperties: elementalProps || {\n          Fire: 0.25,\n          Water: 0.25,\n          Earth: 0.25,\n          Air: 0.25\n        },\n        timestamp: new Date(),\n        currentStability: 1.0,\n        planetaryAlignment: planetaryPositions || {},\n        dominantElement: elementalProps ? \n          Object.entries(elementalProps).sort((a, b) => b[1] - a[1])[0][0] : 'Fire',\n        zodiacSign: currentZodiac || 'aries',\n        activePlanets: ['Sun', 'Moon', 'Mercury', 'Venus', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune', 'Pluto'],\n        // Add standardized planetary day and hour information\n        planetaryDay: planetaryDay,\n        planetaryHour: planetaryHour,\n        isDaytime: isDaytime\n      };\n      \n      // Get standard recommendations with all planets\n      const standardRecommendations = getIngredientRecommendations({\n        ...astroState,\n        lunarPhase: 'new moon',\n        aspects: []\n      } as any, { limit: 40 });\n      \n      // Merge the recommendations, prioritizing chakra-based ones\n      const mergedRecommendations: GroupedIngredientRecommendations = {};\n      \n      // Process all categories\n      const allCategories = new Set([\n        ...Object.keys(chakraRecommendations),\n        ...Object.keys(standardRecommendations)\n      ]);\n      \n      allCategories.forEach(_category => {\n        const chakraItems = chakraRecommendations[_category] || [];\n        const standardItems = standardRecommendations[_category] || [];\n        \n        // Create a unique set of items using name as the key\n        const uniqueItems = new Map();\n        \n        // Add chakra items first (higher priority)\n        chakraItems.forEach(item => {\n          uniqueItems.set(item.name, item);\n        });\n        \n        // Add standard items that aren't already included\n        standardItems.forEach(item => {\n          if (!uniqueItems.has(item.name)) {\n            uniqueItems.set(item.name, item);\n          }\n        });\n        \n        // Convert back to array and limit to prevent overwhelming the user\n        mergedRecommendations[_category] = Array.from(uniqueItems.values()).slice(0, 32);\n      });\n      \n      setAstroRecommendations(mergedRecommendations);\n    }\n  }, [astroLoading, contextChakraEnergies, planetaryPositions, astroError, currentZodiac]);\n  \n  // Define herb names to improve herb detection\n  const herbNames = useMemo(() => Object.keys(herbsCollection), []);\n  \n  // Define oil types for better oil detection\n  const oilTypes = useMemo(() => \n    Object.keys(oilsCollection).concat([\n      'oil', 'olive oil', 'vegetable oil', 'sunflower oil', 'sesame oil', 'coconut oil',\n      'avocado oil', 'walnut oil', 'peanut oil', 'grapeseed oil', 'canola oil'\n    ]), \n  []);\n  \n  // Define vinegar types for better vinegar detection\n  const vinegarTypes = useMemo(() => \n    Object.keys(vinegarsCollection).concat([\n      'vinegar', 'balsamic vinegar', 'apple cider vinegar', 'rice vinegar', 'red wine vinegar',\n      'white wine vinegar', 'champagne vinegar', 'sherry vinegar', 'malt vinegar', \n      'distilled vinegar', 'black vinegar', 'rice wine vinegar', 'white balsamic',\n      'balsamic glaze', 'raspberry vinegar', 'fig vinegar', 'coconut vinegar'\n    ]), \n  []);\n  \n  // Helper function to check if an ingredient is an oil\n  const isOil = (ingredient: Ingredient | UnifiedIngredient): boolean => {\n    const _category = ingredient.category?.toLowerCase() || '';\n    if (_category === 'oil' || _category === 'oils') return true;\n    \n    const name = ingredient.name.toLowerCase();\n    return oilTypes.some(oil => name.includes(oil.toLowerCase()));\n  };\n  \n  // Helper function to check if an ingredient is a vinegar\n  const isVinegar = (ingredient: unknown): boolean => {\n    // Extract ingredient data with safe property access\n    const ingredientData = ingredient as Record<string, unknown>;\n    const _category = ingredientData?.category?.toLowerCase() || '';\n    if (_category === 'vinegar' || _category === 'vinegars') return true;\n    \n    const name = ingredientData?.name?.toLowerCase() || '';\n    return vinegarTypes.some(vinegar => name.includes(vinegar.toLowerCase()));\n  };\n  \n  // Helper function to get normalized category\n  const getNormalizedCategory = (ingredient: unknown): string => {\n    // Extract ingredient data with safe property access\n    const ingredientData = ingredient as Record<string, unknown>;\n    const categoryProperty = ingredientData?.category;\n    \n    if (!categoryProperty) return 'other';\n    \n    const _category = categoryProperty.toLowerCase();\n    \n    // Map categories to our standard ones\n    if (['vegetable', 'vegetables'].includes(_category)) return 'vegetables';\n    if (['protein', 'meat', 'seafood', 'fish', 'poultry'].includes(_category)) return 'proteins';\n    if (['herb', 'herbs', 'culinary_herb', 'medicinal_herb'].includes(_category)) return 'herbs';\n    if (['spice', 'spices', 'seasoning', 'seasonings'].includes(_category)) return 'spices';\n    if (['grain', 'grains', 'pasta', 'rice', 'cereal'].includes(_category)) return 'grains';\n    if (['fruit', 'fruits', 'berry', 'berries'].includes(_category)) return 'fruits';\n    if (['oil', 'oils', 'fat', 'fats'].includes(_category)) return 'oils';\n    if (['vinegar', 'vinegars', 'acid', 'acids'].includes(_category)) return 'vinegars';\n    \n    return 'other';\n  };\n  \n  // Combine and categorize all recommendations\n  const combinedCategorizedRecommendations = useMemo(() => {\n    // Start with empty categories\n    const categories: Record<string, any[]> = {\n      proteins: [],\n      vegetables: [],\n      grains: [],\n      fruits: [],\n      herbs: [],\n      spices: [],\n      oils: [],\n      vinegars: []\n    };\n    \n    // Helper function to normalize ingredient names for comparison\n    const normalizeIngredientName = (name: string): string => {\n      return name.toLowerCase()\n        .replace(/atlantic |wild |farmed |fresh |frozen |organic |raw |cooked /g, '')\n        .replace(/\\s+/g, ' ')\n        .trim();\n    };\n    \n    // Improved function for ingredient name similarity checking with fuzzy matching\n    const areSimilarIngredients = (name1: string, name2: string): boolean => {\n      // Normalize both names\n      const normalized1 = normalizeIngredientName(name1);\n      const normalized2 = normalizeIngredientName(name2);\n      \n      // If normalized names are identical, they're definitely similar\n      if (normalized1 === normalized2) return true;\n      \n      // Check if one name is contained within the other\n      if (normalized1.includes(normalized2) || normalized2.includes(normalized1)) {\n        return true;\n      }\n      \n      // Simple fuzzy matching - check if they share a significant number of characters\n      const commonWords = normalized1.split(' ').filter(word => \n        word.length > 3 && normalized2.includes(word)\n      );\n      \n      if (commonWords.length > 0) return true;\n      \n      // Check for plurals or slight variations\n      if (normalized1.endsWith('s') && normalized2 === normalized1.slice(0, -1)) return true;\n      if (normalized2.endsWith('s') && normalized1 === normalized2.slice(0, -1)) return true;\n      \n      // Check for common substitutions (e.g., \"beef\" and \"beef steak\")\n      const ingredientPairs = [\n        ['chicken', 'chicken breast', 'chicken thigh', 'chicken leg'],\n        ['beef', 'beef steak', 'ground beef', 'beef chuck'],\n        ['pork', 'pork chop', 'pork loin', 'pork shoulder'],\n        ['salmon', 'salmon fillet', 'smoked salmon', 'fresh salmon'],\n        ['tomato', 'tomatoes', 'cherry tomato', 'roma tomato'],\n        ['pepper', 'bell pepper', 'sweet pepper', 'chili pepper'],\n        ['rice', 'brown rice', 'white rice', 'wild rice'],\n        ['olive oil', 'extra virgin olive oil', 'evoo']\n      ];\n      \n      // Check if both names are in the same ingredient family\n      for (const group of ingredientPairs) {\n        if (group.some(item => normalized1.includes(item)) && \n            group.some(item => normalized2.includes(item))) {\n          return true;\n        }\n      }\n      \n      return false;\n    };\n\n    // Add food recommendations first (they are already categorized)\n    if (foodRecommendations && foodRecommendations.length > 0) {\n      foodRecommendations.forEach(ingredient => {\n        const name = ingredient.name.toLowerCase();\n        \n        // For seafood proteins - check first to prevent miscategorization\n        if (\n          name.includes('cod') || name.includes('sole') || name.includes('scallop') || \n          name.includes('salmon') || name.includes('squid') || name.includes('shrimp') || \n          name.includes('flounder') || name.includes('halibut') || name.includes('sea bass') || \n          name.includes('octopus') || name.includes('fish') || name.includes('trout') || \n          name.includes('tuna') || name.includes('crab') || name.includes('lobster')\n        ) {\n          categories.proteins.push({\n            ...ingredient,\n            matchScore: ingredient.score || 0.5\n          });\n        }\n        // Spices and seasonings\n        else if (\n          // Exclude common vegetable peppers\n          (name.includes('pepper') && \n           !name.includes('bell pepper') && \n           !name.includes('sweet pepper') && \n           !name.includes('jalapeno') && \n           !name.includes('poblano') && \n           !name.includes('anaheim') && \n           !name.includes('banana pepper') && \n           !name.includes('chili pepper') && \n           !name.includes('paprika')) || \n          name.includes('cinnamon') || \n          name.includes('nutmeg') || \n          name.includes('cumin') || \n          name.includes('turmeric') || \n          name.includes('cardamom') ||\n          name.includes('spice') || \n          name.includes('seasoning')\n        ) {\n          categories.spices.push({\n            ...ingredient,\n            matchScore: ingredient.score || 0.5\n          });\n        }\n        // Vegetable Peppers\n        else if (\n          name.includes('bell pepper') || \n          name.includes('sweet pepper') || \n          name.includes('jalapeno') || \n          name.includes('poblano') || \n          name.includes('anaheim') || \n          name.includes('banana pepper') || \n          name.includes('chili pepper') || \n          name.includes('paprika')\n        ) {\n          categories.vegetables.push({\n            ...ingredient,\n            matchScore: ingredient.score || 0.5\n          });\n        }\n        // Oils\n        else if (isOil(ingredient)) {\n          categories.oils.push({\n            ...ingredient,\n            matchScore: ingredient.score || 0.5\n          });\n        }\n        // Vinegars\n        else if (isVinegar(ingredient)) {\n          categories.vinegars.push({\n            ...ingredient,\n            matchScore: ingredient.score || 0.5\n          });\n        }\n        // Herbs\n        else if (ingredient.category === 'herb' || name.includes('herb') || herbNames.some(herb => name.includes(herb.toLowerCase()))) {\n          categories.herbs.push({\n            ...ingredient,\n            matchScore: ingredient.score || 0.5\n          });\n        }\n        // For other ingredients, use explicit category if available\n        else {\n          const _category = getNormalizedCategory(ingredient);\n          if (categories[_category]) {\n            categories[_category].push({\n              ...ingredient,\n              matchScore: ingredient.score || 0.5\n            });\n          } else {\n            if (\n              name.includes('ginger') || name.includes('garlic') || name.includes('onion') || \n              name.includes('carrot') || name.includes('broccoli') || name.includes('tomato') ||\n              name.includes('zucchini') || name.includes('cucumber') || name.includes('lettuce') ||\n              name.includes('spinach') || name.includes('kale') || name.includes('cabbage') ||\n              name.includes('cauliflower') || name.includes('celery') || name.includes('potato') ||\n              name.includes('squash') || name.includes('eggplant') || name.includes('beet') ||\n              name.includes('asparagus') || name.includes('artichoke') || name.includes('radish') ||\n              name.includes('arugula') || name.includes('turnip') || name.includes('leek') ||\n              ingredient.category?.toLowerCase() === 'vegetable' || ingredient.category?.toLowerCase() === 'vegetables'\n            ) {\n              categories.vegetables.push({\n                ...ingredient,\n                matchScore: ingredient.score || 0.5\n              });\n            } else if (\n              name.includes('apple') || name.includes('orange') || name.includes('lemon') || \n              name.includes('melon') || name.includes('berry') || name.includes('pineapple')\n            ) {\n              categories.fruits.push({\n                ...ingredient,\n                matchScore: ingredient.score || 0.5\n              });\n            } else {\n              // Default to vegetables for unmatched items\n              categories.vegetables.push({\n                ...ingredient,\n                matchScore: ingredient.score || 0.5\n              });\n            }\n          }\n        }\n      });\n    }\n    \n    // Now add the astrological recommendations\n    Object.entries(astroRecommendations).forEach(([_category, items]) => {\n      items.forEach(item => {\n        const normalizedCategory = getNormalizedCategory(item);\n        const targetCategory = normalizedCategory === 'other' ? determineCategory(item.name) : normalizedCategory;\n        \n        if (categories[targetCategory]) {\n          // Check if this item already exists in the category (with improved duplicate detection)\n          const existingItemIndex = categories[targetCategory].findIndex(\n            existing => areSimilarIngredients(existing.name, item.name)\n          );\n          \n          if (existingItemIndex >= 0) {\n            // Update the existing item with better score if needed\n            if (item.matchScore > categories[targetCategory][existingItemIndex].matchScore) {\n              categories[targetCategory][existingItemIndex] = {\n                ...item,\n                category: targetCategory\n              };\n            }\n          } else {\n            // Add as a new item\n            categories[targetCategory].push({\n              ...item,\n              category: targetCategory\n            });\n          }\n        }\n      });\n    });\n    \n    // Ensure vinegars are always present by adding them from the collection if needed\n    if (!categories.vinegars || categories.vinegars.length === 0) {\n      categories.vinegars = Object.entries(vinegarsCollection).map(([key, vinegarData]) => {\n        const displayName = vinegarData.name || key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n        return {\n          name: displayName,\n          type: 'vinegars',\n          category: 'vinegars',\n          matchScore: 0.6,\n          elementalProperties: vinegarData.elementalProperties || { \n            Water: 0.4, \n            Earth: 0.3, \n            Air: 0.2, \n            Fire: 0.1 \n          },\n          qualities: (vinegarData as Record<string, unknown>).qualities || ['acidic', 'tangy', 'flavorful'],\n          description: `${displayName} - A versatile acidic component for your culinary creations.`\n        } as IngredientRecommendation;\n      });\n    }\n    \n    // Add any missing oils from the oils collection\n    if (!categories.oils || categories.oils.length < 3) {\n      const existingOilNames = new Set((categories.oils || []).map(oil => oil.name.toLowerCase()));\n      const additionalOils = Object.entries(oilsCollection)\n        .filter(([_, oilData]) => \n          !existingOilNames.has(oilData.name?.toLowerCase() || '')\n        )\n        .slice(0, 10) // Limit to 10 additional oils\n        .map(([key, oilData]) => {\n          return {\n            name: oilData.name || key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n            type: 'oils',\n            category: 'oils',\n            matchScore: 0.6,\n            elementalProperties: oilData.elementalProperties || { \n              Fire: 0.3, \n              Water: 0.2, \n              Earth: 0.3, \n              Air: 0.2 \n            },\n            qualities: (oilData as Record<string, unknown>).qualities || ['cooking', 'flavoring'],\n            description: `${oilData.name || key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())} - ${(oilData as string).description || \"A versatile cooking oil with various applications.\"}`\n          } as IngredientRecommendation;\n        });\n      \n      categories.oils = [...(categories.oils || []), ...additionalOils]\n        .sort((a, b) => b.matchScore - a.matchScore);\n    }\n    \n    // Sort each category by matchScore\n    Object.keys(categories).forEach(category => {\n      categories[category] = categories[category]\n        .sort((a, b) => b.matchScore - a.matchScore)\n        .filter(item => item.matchScore > 0);\n    });\n    \n    // Filter out empty categories\n    return Object.fromEntries(\n      Object.entries(categories).filter(([_, items]) => items.length > 0)\n    );\n  }, [foodRecommendations, astroRecommendations, herbNames, oilTypes, vinegarTypes]);\n  \n  // Helper function to determine the category of a food by name\n  function determineCategory(name: string): string {\n    const lowercaseName = name.toLowerCase();\n    \n    // Proteins\n    if (\n      lowercaseName.includes('beef') || lowercaseName.includes('chicken') || \n      lowercaseName.includes('pork') || lowercaseName.includes('lamb') || \n      lowercaseName.includes('fish') || lowercaseName.includes('seafood') ||\n      lowercaseName.includes('tofu') || lowercaseName.includes('tempeh') ||\n      lowercaseName.includes('seitan') || lowercaseName.includes('protein')\n    ) {\n      return 'proteins';\n    }\n    \n    // Herbs\n    if (\n      lowercaseName.includes('basil') || lowercaseName.includes('oregano') || \n      lowercaseName.includes('thyme') || lowercaseName.includes('rosemary') || \n      lowercaseName.includes('mint') || lowercaseName.includes('cilantro') ||\n      lowercaseName.includes('sage') || lowercaseName.includes('herb')\n    ) {\n      return 'herbs';\n    }\n    \n    // Spices\n    if (\n      (lowercaseName.includes('pepper') && \n       !lowercaseName.includes('bell pepper') && \n       !lowercaseName.includes('sweet pepper') && \n       !lowercaseName.includes('jalapeno') && \n       !lowercaseName.includes('poblano') && \n       !lowercaseName.includes('anaheim') && \n       !lowercaseName.includes('banana pepper') && \n       !lowercaseName.includes('chili pepper') && \n       !lowercaseName.includes('paprika')) || \n      lowercaseName.includes('cinnamon') || \n      lowercaseName.includes('nutmeg') || \n      lowercaseName.includes('cumin') || \n      lowercaseName.includes('turmeric') || \n      lowercaseName.includes('cardamom') ||\n      lowercaseName.includes('spice') || \n      lowercaseName.includes('seasoning')\n    ) {\n      return 'spices';\n    }\n    \n    // Vegetable Peppers\n    if (\n      lowercaseName.includes('bell pepper') || \n      lowercaseName.includes('sweet pepper') || \n      lowercaseName.includes('jalapeno') || \n      lowercaseName.includes('poblano') || \n      lowercaseName.includes('anaheim') || \n      lowercaseName.includes('banana pepper') || \n      lowercaseName.includes('chili pepper') || \n      lowercaseName.includes('paprika')\n    ) {\n      return 'vegetables';\n    }\n    \n    // Vinegars\n    if (\n      lowercaseName.includes('vinegar') || lowercaseName.includes('balsamic') || \n      lowercaseName.includes('cider') || lowercaseName.includes('rice wine') || \n      lowercaseName.includes('sherry vinegar') || lowercaseName.includes('red wine vinegar') ||\n      lowercaseName.includes('white wine vinegar') || lowercaseName.includes('champagne vinegar')\n    ) {\n      return 'vinegars';\n    }\n    \n    // Grains\n    if (\n      lowercaseName.includes('rice') || lowercaseName.includes('pasta') || \n      lowercaseName.includes('bread') || lowercaseName.includes('quinoa') || \n      lowercaseName.includes('barley') || lowercaseName.includes('oat') ||\n      lowercaseName.includes('grain') || lowercaseName.includes('wheat')\n    ) {\n      return 'grains';\n    }\n    \n    // Fruits\n    if (\n      lowercaseName.includes('apple') || lowercaseName.includes('orange') || \n      lowercaseName.includes('banana') || lowercaseName.includes('berry') || \n      lowercaseName.includes('melon') || lowercaseName.includes('pear') ||\n      lowercaseName.includes('grape') || lowercaseName.includes('fruit')\n    ) {\n      return 'fruits';\n    }\n    \n    // Vegetables\n    if (\n      lowercaseName.includes('ginger') || lowercaseName.includes('garlic') || lowercaseName.includes('onion') || \n      lowercaseName.includes('carrot') || lowercaseName.includes('broccoli') || lowercaseName.includes('tomato') ||\n      lowercaseName.includes('zucchini') || lowercaseName.includes('cucumber') || lowercaseName.includes('lettuce') ||\n      lowercaseName.includes('spinach') || lowercaseName.includes('kale') || lowercaseName.includes('cabbage') ||\n      lowercaseName.includes('cauliflower') || lowercaseName.includes('celery') || lowercaseName.includes('potato') ||\n      lowercaseName.includes('squash') || lowercaseName.includes('eggplant') || lowercaseName.includes('beet') ||\n      lowercaseName.includes('asparagus') || lowercaseName.includes('artichoke') || lowercaseName.includes('radish') ||\n      lowercaseName.includes('arugula') || lowercaseName.includes('turnip') || lowercaseName.includes('leek') ||\n      lowercaseName.includes('vegetable')\n    ) {\n      return 'vegetables';\n    }\n    \n    // Default to vegetables for anything else\n    return 'vegetables';\n  }\n  \n  // Create match score class based on percentage with enhanced visual styling\n  const getMatchScoreClass = (matchScore?: number): string => {\n    // Use safe score value with default\n    const safeScore = typeof matchScore === 'number' && !isNaN(matchScore) ? matchScore : 0.5;\n    const matchPercentage = Math.round(safeScore * 100);\n    \n    // Enhanced styling with gradients and more distinct ranges\n    if (matchPercentage >= 95) {\n      return \"bg-gradient-to-r from-indigo-600 to-indigo-500 text-white dark:from-indigo-600 dark:to-indigo-400 dark:text-white font-semibold shadow-sm\";\n    } else if (matchPercentage >= 90) {\n      return \"bg-gradient-to-r from-blue-500 to-indigo-400 text-white dark:from-blue-600 dark:to-indigo-500 dark:text-white font-semibold shadow-sm\";\n    } else if (matchPercentage >= 85) {\n      return \"bg-gradient-to-r from-blue-400 to-blue-300 text-blue-900 dark:from-blue-600 dark:to-blue-500 dark:text-blue-100 font-medium\";\n    } else if (matchPercentage >= 80) {\n      return \"bg-blue-100 text-blue-800 dark:bg-blue-800/40 dark:text-blue-200 font-medium\";\n    } else if (matchPercentage >= 75) {\n      return \"bg-green-100 text-green-800 dark:bg-green-800/40 dark:text-green-200\";\n    } else if (matchPercentage >= 70) {\n      return \"bg-green-50 text-green-700 dark:bg-green-800/30 dark:text-green-300\";\n    } else if (matchPercentage >= 65) {\n      return \"bg-yellow-100 text-yellow-800 dark:bg-yellow-800/40 dark:text-yellow-200\";\n    } else if (matchPercentage >= 60) {\n      return \"bg-yellow-50 text-yellow-700 dark:bg-yellow-800/30 dark:text-yellow-300\";\n    } else if (matchPercentage >= 50) {\n      return \"bg-orange-50 text-orange-700 dark:bg-orange-900/30 dark:text-orange-300\";\n    }\n    return \"bg-gray-100 text-gray-700 dark:bg-gray-800/50 dark:text-gray-400\";\n  };\n\n  // Format the match score for display\n  const formatMatchScore = (matchScore?: number): string => {\n    const safeScore = typeof matchScore === 'number' && !isNaN(matchScore) ? matchScore : 0.5;\n    return `${Math.round(safeScore * 100)}%`;\n  };\n  \n  // Render loading state if needed\n  if (astroLoading || foodLoading) {\n    return (\n      <div className=\"flex items-center justify-center p-8 h-64\">\n        <div className=\"text-center\">\n          <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-indigo-500 mb-4\"></div>\n          <p className=\"text-indigo-800 dark:text-indigo-300\">Loading celestial influences...</p>\n        </div>\n      </div>\n    );\n  }\n  \n  if (astroError || foodError) {\n    return (\n      <div className=\"p-6 bg-red-50 dark:bg-red-900/20 rounded-lg border border-red-200 dark:border-red-800 text-red-600 dark:text-red-300\">\n        <p className=\"font-medium\">Error: {astroError || foodError}</p>\n      </div>\n    );\n  }\n  \n  // Display the recommendations\n  return (\n    <div className=\"mt-6 w-full max-w-none\">\n      <div className=\"bg-gradient-to-r from-indigo-800/10 via-purple-800/10 to-indigo-800/10 p-4 rounded-xl backdrop-blur-sm border border-indigo-100 dark:border-indigo-950 mb-6\">\n        <h2 className=\"text-2xl font-bold text-indigo-900 dark:text-indigo-300\">Celestial Ingredient Recommendations</h2>\n        <p className=\"text-indigo-700 dark:text-indigo-400 text-sm\">\n          Ingredients aligned with your current celestial influences for optimal alchemical harmony.\n        </p>\n        <p className=\"text-indigo-600 dark:text-indigo-500 text-xs mt-1 italic\">\n          Click on any ingredient card to view detailed information.\n        </p>\n        \n        {/* Enterprise Intelligence Toggle */}\n        <div className=\"flex items-center justify-between mt-4\">\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => setShowEnterpriseIntelligence(!showEnterpriseIntelligence)}\n              className={`flex items-center space-x-1 px-3 py-1 text-sm rounded transition-colors ${\n                showEnterpriseIntelligence \n                  ? 'bg-purple-100 text-purple-700' \n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n              }`}\n            >\n              <Brain size={16} />\n              <span>Enterprise Intelligence</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Enterprise Intelligence Panel */}\n        {showEnterpriseIntelligence && (\n          <div className=\"mt-4\">\n            <EnterpriseIntelligencePanel\n              recipeData={null}\n              ingredientData={{ ingredients: Object.values(combinedCategorizedRecommendations).flat() }}\n              astrologicalContext={{\n                zodiacSign: (currentZodiac || 'aries') as any,\n                lunarPhase: 'new moon' as any,\n                elementalProperties: astroState.elementalProperties || {\n                  Fire: 0.25, Water: 0.25, Earth: 0.25, Air: 0.25\n                },\n                planetaryPositions: currentPlanetaryAlignment\n              }}\n              className=\"border-t pt-4\"\n              showDetailedMetrics={true}\n              autoAnalyze={true}\n              onAnalysisComplete={(analysis) => {\n                setEnterpriseIntelligenceAnalysis(analysis);\n                console.log('Enterprise Intelligence Analysis completed:', {\n                  overallScore: analysis.overallScore,\n                  systemHealth: analysis.systemHealth\n                });\n              }}\n            />\n          </div>\n        )}\n        \n        {/* Category navigation links */}\n        <div className=\"flex flex-wrap justify-center gap-2 mt-4 bg-white/70 dark:bg-gray-800/70 p-2 rounded-lg shadow-sm\">\n          {Object.entries(combinedCategorizedRecommendations).map(([category]) => {\n            const displayName = CATEGORY_DISPLAY_NAMES[category] || (category.charAt(0).toUpperCase() + category.slice(1));\n            const isActive = category === activeCategory;\n            \n            // Define icons for each category\n            let icon;\n            if (category === 'proteins') icon = <Tag className=\"mr-1 text-rose-500\" size={14} />;\n            else if (category === 'vegetables') icon = <Leaf className=\"mr-1 text-emerald-500\" size={14} />;\n            else if (category === 'grains') icon = <Wind className=\"mr-1 text-amber-500\" size={14} />;\n            else if (category === 'herbs') icon = <Leaf className=\"mr-1 text-green-500\" size={14} />;\n            else if (category === 'spices') icon = <Flame className=\"mr-1 text-orange-500\" size={14} />;\n            else if (category === 'fruits') icon = <Droplets className=\"mr-1 text-cyan-500\" size={14} />;\n            else if (category === 'oils') icon = <Droplets className=\"mr-1 text-yellow-500\" size={14} />;\n            else if (category === 'vinegars') icon = <Beaker className=\"mr-1 text-purple-500\" size={14} />;\n            \n            return (\n              <a \n                key={`nav-${category}`}\n                href={`#${category}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  const element = document.getElementById(category);\n                  if (element) {\n                    element.scrollIntoView({ behavior: 'smooth' });\n                    handleCategorySelect(category);\n                  }\n                }}\n                className={`px-3 py-1.5 rounded-full text-xs font-medium flex items-center shadow-sm transition-colors duration-200 ${\n                  isActive \n                    ? 'bg-indigo-500 text-white' \n                    : 'bg-white/90 dark:bg-gray-700/90 text-gray-700 dark:text-gray-300 hover:bg-indigo-100 dark:hover:bg-indigo-900/40 hover:text-indigo-600 dark:hover:text-indigo-300'\n                }`}\n              >\n                {icon}\n                {displayName}\n              </a>\n            );\n          })}\n        </div>\n      </div>\n      \n      {Object.keys(combinedCategorizedRecommendations).length > 0 ? (\n        <div className=\"space-y-6\">\n          {Object.entries(combinedCategorizedRecommendations).map(([category, items]) => {\n            const displayName = CATEGORY_DISPLAY_NAMES[category] || (category.charAt(0).toUpperCase() + category.slice(1));\n            const displayCount = CATEGORY_DISPLAY_COUNTS[category] || 5;\n            const isExpanded = expanded[category] || false;\n            const itemsToShow = isExpanded ? items : items.slice(0, displayCount);\n            \n            return (\n              <div id={category} key={category} className=\"bg-white/90 dark:bg-gray-800/90 p-4 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 scroll-mt-16\">\n                <div \n                  className=\"flex justify-between items-center mb-3 cursor-pointer\"\n                  onClick={(e) => toggleCategoryExpansion(category, e)}\n                >\n                  <h3 className=\"text-lg font-semibold capitalize text-gray-800 dark:text-gray-200 flex items-center\">\n                    {category === 'proteins' && <Tag className=\"mr-2 text-rose-500\" size={18} />}\n                    {category === 'vegetables' && <Leaf className=\"mr-2 text-emerald-500\" size={18} />}\n                    {category === 'grains' && <Wind className=\"mr-2 text-amber-500\" size={18} />}\n                    {category === 'herbs' && <Leaf className=\"mr-2 text-green-500\" size={18} />}\n                    {category === 'spices' && <Flame className=\"mr-2 text-orange-500\" size={18} />}\n                    {category === 'fruits' && <Droplets className=\"mr-2 text-cyan-500\" size={18} />}\n                    {category === 'oils' && <Droplets className=\"mr-2 text-yellow-500\" size={18} />}\n                    {category === 'vinegars' && <Beaker className=\"mr-2 text-purple-500\" size={18} />}\n                    {displayName}\n                  </h3>\n                  <button className=\"text-gray-500 hover:text-gray-700 focus:outline-none\">\n                    {isExpanded ? (\n                      <ChevronUp className=\"h-5 w-5\" />\n                    ) : (\n                      <ChevronDown className=\"h-5 w-5\" />\n                    )}\n                  </button>\n                </div>\n                \n                <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 2xl:grid-cols-8 gap-3\">\n                  {itemsToShow.map((item) => {\n                    // Get element color class\n                    const elementalProps = item.elementalProperties || {\n                      Fire: 0.25, Water: 0.25, Earth: 0.25, Air: 0.25\n                    };\n                    \n                    // Find dominant element\n                    // Apply Pattern KK-1: Explicit Type Assertion for arithmetic operations\n                    const dominantElement = Object.entries(elementalProps)\n                      .sort((a, b) => {\n                        const aValue = Number(a[1]) || 0;\n                        const bValue = Number(b[1]) || 0;\n                        return bValue - aValue;\n                      })[0][0];\n                    \n                    const elementColor = {\n                      'Fire': 'border-red-400 bg-red-50/70 dark:bg-red-900/30',\n                      'Water': 'border-blue-400 bg-blue-50/70 dark:bg-blue-900/30',\n                      'Earth': 'border-green-400 bg-green-50/70 dark:bg-green-900/30',\n                      'Air': 'border-purple-400 bg-purple-50/70 dark:bg-purple-900/30'\n                    }[dominantElement] || 'border-gray-400 bg-gray-50/70 dark:bg-gray-900/30';\n                    \n                    // Find sensory properties if available\n                    const defaultSeason = ['Spring', 'Summer', 'Fall', 'Winter'][Math.floor(Math.random() * 4)];\n                    let seasonality;\n                    \n                    // Handle both string and object seasonality formats\n                    if (item.seasonality) {\n                      if (typeof item.seasonality === 'string') {\n                        seasonality = item.seasonality;\n                      } else if (typeof item.seasonality === 'object') {\n                        // Handle both array and object formats\n                        if (Array.isArray(item.seasonality)) {\n                          seasonality = item.seasonality.join(', ');\n                        } else if (item.seasonality.peak) {\n                          // Handle {peak: [...], notes: string} format\n                          seasonality = Array.isArray(item.seasonality.peak) \n                            ? item.seasonality.peak.join(', ')\n                            : item.seasonality.peak;\n                        }\n                      }\n                    } else {\n                      seasonality = defaultSeason;\n                    }\n                    \n                    const qualities = item.qualities || [];\n                    \n                    // Use the new getMatchScoreClass function\n                    const matchScoreClass = getMatchScoreClass(item.matchScore);\n                    \n                    const isSelected = selectedIngredient?.name === item.name;\n                    \n                    return (\n                      <div \n                        key={`${item.name}-${category}-${item.subCategory || ''}-${Math.random().toString(36).substr(2, 5)}`} \n                        className={`p-3 rounded-lg border-l-4 ${elementColor} hover:shadow-md transition-all flex flex-col ${isSelected ? 'ring-2 ring-indigo-500 shadow-md min-h-[200px] sm:col-span-2 md:col-span-2 lg:col-span-2' : 'h-full'} cursor-pointer`}\n                        onClick={(e) => handleIngredientSelect(item, e)}\n                      >\n                        <div className=\"flex justify-between items-start\">\n                          <h4 className=\"font-medium text-sm text-gray-800 dark:text-gray-200\">{item.name}</h4>\n                          <span className={`ml-1 text-xs px-1.5 py-0.5 rounded-sm ${matchScoreClass}`}>\n                            {formatMatchScore(item.matchScore)}\n                          </span>\n                        </div>\n                        \n                        {/* Quick info row */}\n                        <div className=\"flex items-center text-xs text-gray-600 dark:text-gray-400 mt-1 gap-2\">\n                          {item.category && (\n                            <span className=\"flex items-center\">\n                              <Tag size={10} className=\"mr-0.5\" />\n                              {item.category.split(' ')[0]}\n                            </span>\n                          )}\n                          \n                          {seasonality && (\n                            <span className=\"flex items-center\">\n                              <Clock size={10} className=\"mr-0.5\" />\n                              {seasonality}\n                            </span>\n                          )}\n                        </div>\n                        \n                        {/* Expanded view */}\n                        {isSelected ? (\n                          <div className=\"mt-2 pt-1\" style={{ animation: 'fadeIn 0.3s ease-in-out' }}>\n                            {/* Close button */}\n                            <div className=\"flex justify-end\">\n                              <button \n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  setSelectedIngredient(null);\n                                }}\n                                className=\"text-gray-400 hover:text-gray-600 p-1 rounded-full hover:bg-gray-200/50 dark:hover:bg-gray-700/50\"\n                                aria-label=\"Close details\"\n                              >\n                                <X size={14} />\n                              </button>\n                            </div>\n                            \n                            {/* More detailed information */}\n                            <div className=\"mt-1 space-y-2 text-xs text-gray-700 dark:text-gray-300\">\n                              {item.description && (\n                                <p>{item.description}</p>\n                              )}\n                              \n                              {item.qualities && item.qualities.length > 0 && (\n                                <div>\n                                  <span className=\"font-semibold\">Qualities:</span> {item.qualities.join(', ')}\n                                </div>\n                              )}\n                              \n                              {/* Show culinary applications */}\n                              {item.culinaryApplications && (\n                                <div>\n                                  <span className=\"font-semibold\">Culinary Applications:</span>{' '}\n                                  {Object.keys(item.culinaryApplications).slice(0, 3).join(', ')}\n                                </div>\n                              )}\n\n                              {/* Show varieties if available */}\n                              {item.varieties && Object.keys(item.varieties).length > 0 && (\n                                <div>\n                                  <span className=\"font-semibold\">Varieties:</span>{' '}\n                                  {Object.keys(item.varieties).slice(0, 3).join(', ')}\n                                </div>\n                              )}\n\n                              {/* Show storage information */}\n                              {item.storage && (\n                                <div>\n                                  <span className=\"font-semibold\">Storage:</span>{' '}\n                                  {item.storage.duration}\n                                  {item.storage.temperature && typeof item.storage.temperature === 'object' && \n                                   ` at ${item.storage.temperature.fahrenheit}°F`}\n                                </div>\n                              )}\n                              \n                              {/* Show smoke point for oils */}\n                              {category === 'oils' && item.smokePoint && (\n                                <div>\n                                  <span className=\"font-semibold\">Smoke Point:</span> {item.smokePoint.fahrenheit}°F / {item.smokePoint.celsius}°C\n                                </div>\n                              )}\n                              \n                              {/* Show recommended culinary applications for oils */}\n                              {category === 'oils' && item.culinaryApplications && (\n                                <div>\n                                  <span className=\"font-semibold\">Best for:</span> {\n                                    Object.entries(item.culinaryApplications)\n                                      .map(([type, data]) => {\n                                        if (typeof data === 'object') {\n                                          // Extract data with safe property access\n                                          const culinaryData = data as Record<string, unknown>;\n                                          const techniques = culinaryData?.techniques;\n                                          if (Array.isArray(techniques)) {\n                                            return techniques.slice(0, 2).join(', ');\n                                          }\n                                        }\n                                        return type;\n                                      })\n                                      .filter(Boolean)\n                                      .join(', ')\n                                  }\n                                </div>\n                              )}\n                              \n                              {/* Show seasonal adjustments */}\n                              {item.seasonalAdjustments && (\n                                <div>\n                                  <span className=\"font-semibold\">Seasonal Preparations:</span>{' '}\n                                  {Object.keys(item.seasonalAdjustments).join(', ')}\n                                </div>\n                              )}\n\n                              {/* Show cooking time/methods for proteins */}\n                              {category === 'proteins' && item.culinaryApplications && (\n                                <div>\n                                  <span className=\"font-semibold\">Cooking Times:</span>{' '}\n                                  {Object.entries(item.culinaryApplications).map(([method, details], index) => {\n                                    let cookingTime = '';\n                                    \n                                    // Handle different data formats for cooking time\n                                    // Extract details data with safe property access\n                                    const detailsData = details as Record<string, unknown>;\n                                    const timing = detailsData?.timing;\n                                    \n                                    if (timing) {\n                                      if (typeof timing === 'string') {\n                                        cookingTime = timing;\n                                      } else if (typeof timing === 'object') {\n                                        // Extract timing properties with safe access\n                                        const timingData = timing as Record<string, unknown>;\n                                        const minimum = timingData?.minimum;\n                                        const maximum = timingData?.maximum;\n                                        const optimal = timingData?.optimal;\n                                        \n                                        if (minimum && maximum) {\n                                          cookingTime = `${minimum}-${maximum}`;\n                                        } else if (optimal) {\n                                          cookingTime = optimal;\n                                        } else {\n                                          const times = Object.values(timing).filter(t => typeof t === 'string');\n                                          if (times.length) cookingTime = times.join('-');\n                                        }\n                                      }\n                                    }\n                                    \n                                    return cookingTime ? (\n                                      <span key={method}>\n                                        {index > 0 ? ', ' : ''}\n                                        {method.replace(/_/g, ' ')}: {cookingTime}\n                                      </span>\n                                    ) : null;\n                                  }).filter(Boolean)}\n                                </div>\n                              )}\n\n                              {/* Show temperature recommendations for proteins */}\n                              {category === 'proteins' && item.culinaryApplications && (\n                                <div>\n                                  <span className=\"font-semibold\">Cooking Temperatures:</span>{' '}\n                                  {Object.entries(item.culinaryApplications).map(([method, details], index) => {\n                                    let temp = '';\n                                    \n                                    // Handle different data formats for temperature\n                                    // Extract details data with safe property access\n                                    const tempDetailsData = details as Record<string, unknown>;\n                                    const temperature = tempDetailsData?.temperature;\n                                    \n                                    if (temperature) {\n                                      if (typeof temperature === 'string') {\n                                        temp = temperature;\n                                      } else if (typeof temperature === 'object') {\n                                        // Extract temperature properties with safe access\n                                        const temperatureData = temperature as Record<string, unknown>;\n                                        const fahrenheit = temperatureData?.fahrenheit;\n                                        const min = temperatureData?.min;\n                                        const max = temperatureData?.max;\n                                        const unit = temperatureData?.unit;\n                                        \n                                        if (fahrenheit) {\n                                          temp = `${fahrenheit}°F`;\n                                        } else if (min && max) {\n                                          temp = `${min}-${max}°${unit === 'celsius' ? 'C' : 'F'}`;\n                                        }\n                                      }\n                                    }\n                                    \n                                    return temp ? (\n                                      <span key={method}>\n                                        {index > 0 ? ', ' : ''}\n                                        {method.replace(/_/g, ' ')}: {temp}\n                                      </span>\n                                    ) : null;\n                                  }).filter(Boolean)}\n                                </div>\n                              )}\n\n                              {/* Show cuts for seafood and proteins */}\n                              {item.cuts && Object.keys(item.cuts).length > 0 && (\n                                <div>\n                                  <span className=\"font-semibold\">Available Cuts:</span>{' '}\n                                  {Object.values(item.cuts).map(cut => {\n                                    if (typeof cut === 'object') {\n                                      // Extract cut data with safe property access\n                                      const cutData = cut as Record<string, unknown>;\n                                      const name = cutData?.name;\n                                      return name ? name : '';\n                                    }\n                                    return '';\n                                  }).filter(Boolean).join(', ')}\n                                </div>\n                              )}\n\n                              {/* Show health benefits */}\n                              {item.healthBenefits && item.healthBenefits.length > 0 && (\n                                <div>\n                                  <span className=\"font-semibold\">Health Benefits:</span>{' '}\n                                  {Array.isArray(item.healthBenefits) \n                                    ? item.healthBenefits.slice(0, 2).join(', ')\n                                    : typeof item.healthBenefits === 'string' ? item.healthBenefits : ''}\n                                </div>\n                              )}\n                              \n                              {/* Show thermodynamic properties for oils and other ingredients */}\n                              {item.thermodynamicProperties && (\n                                <div>\n                                  <span className=\"font-semibold\">Properties:</span> {\n                                    Object.entries(item.thermodynamicProperties)\n                                      .filter(([key]) => ['heat', 'reactivity', 'energy'].includes(key))\n                                      .map(([key, value]) => `${key}: ${Math.round((Number(value) || 0) * 100)}%`)\n                                      .join(', ')\n                                  }\n                                </div>\n                              )}\n                              \n                              {item.culinaryUses && item.culinaryUses.length > 0 && (\n                                <div>\n                                  <span className=\"font-semibold\">Uses:</span> {item.culinaryUses.join(', ')}\n                                </div>\n                              )}\n\n                              {/* Show nutritional highlights if available */}\n                              {item.nutritionalProfile && (\n                                <div>\n                                  <span className=\"font-semibold\">Nutrition:</span>{' '}\n                                  {item.nutritionalProfile.calories && `${item.nutritionalProfile.calories} cal`}\n                                  {item.nutritionalProfile.macros && item.nutritionalProfile.macros.protein && \n                                   `, ${item.nutritionalProfile.macros.protein}g protein`}\n                                </div>\n                              )}\n                              \n                              {item.astrologicalProfile && item.astrologicalProfile.rulingPlanets && (\n                                <div>\n                                  <span className=\"font-semibold\">Planets:</span> {item.astrologicalProfile.rulingPlanets.join(', ')}\n                                </div>\n                              )}\n                            </div>\n                            \n                            {/* Elemental properties - show in expanded view */}\n                            <div className=\"mt-2 pt-1 space-y-1\">\n                              <div className=\"font-semibold text-xs text-gray-700 dark:text-gray-300\">Elemental Balance:</div>\n                              {Object.entries(elementalProps).map(([element, value]) => (\n                                <div key={element} className=\"flex items-center text-xs\">\n                                  {getElementIcon(element)}\n                                  <div className=\"flex-grow ml-1 bg-gray-200 dark:bg-gray-700 h-1.5 rounded-full overflow-hidden\">\n                                    <div \n                                      className=\"h-full rounded-full\"\n                                      style={{ \n                                        width: `${(Number(value) || 0) * 100}%`,\n                                        backgroundColor: \n                                          element === 'Fire' ? '#ff6b6b' : \n                                          element === 'Water' ? '#6bb5ff' :\n                                          element === 'Earth' ? '#6bff8e' :\n                                          '#d9b3ff' // Air\n                                      }}\n                                    ></div>\n                                  </div>\n                                  <span className=\"ml-1 w-7 text-right text-gray-600 dark:text-gray-400\">{Math.round((Number(value) || 0) * 100)}%</span>\n                                </div>\n                              ))}\n                            </div>\n                          </div>\n                        ) : (\n                          <>\n                            {/* Elemental properties in collapsed view */}\n                            <div className=\"mt-2 pt-1 space-y-1\">\n                              {Object.entries(elementalProps).map(([element, value]) => (\n                                <div key={element} className=\"flex items-center text-xs\">\n                                  {getElementIcon(element)}\n                                  <div className=\"flex-grow ml-1 bg-gray-200 dark:bg-gray-700 h-1.5 rounded-full overflow-hidden\">\n                                    <div \n                                      className=\"h-full rounded-full\"\n                                      style={{ \n                                        width: `${(Number(value) || 0) * 100}%`,\n                                        backgroundColor: \n                                          element === 'Fire' ? '#ff6b6b' : \n                                          element === 'Water' ? '#6bb5ff' :\n                                          element === 'Earth' ? '#6bff8e' :\n                                          '#d9b3ff' // Air\n                                      }}\n                                    ></div>\n                                  </div>\n                                  <span className=\"ml-1 w-7 text-right text-gray-600 dark:text-gray-400\">{Math.round((Number(value) || 0) * 100)}%</span>\n                                </div>\n                              ))}\n                            </div>\n                            \n                            {/* Qualities tags if space allows */}\n                            {qualities.length > 0 && (\n                              <div className=\"flex flex-wrap gap-1 mt-2\">\n                                {qualities.slice(0, 2).map(quality => (\n                                  <span key={quality} className=\"text-xs bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-1 py-0.5 rounded text-[10px]\">\n                                    {quality}\n                                  </span>\n                                ))}\n                              </div>\n                            )}\n                            \n                            {/* Compact smoke point display for oils */}\n                            {category === 'oils' && item.smokePoint && (\n                              <div className=\"mt-1 text-[10px] text-gray-600 dark:text-gray-400\">\n                                <span className=\"font-medium\">Smoke Point:</span> {item.smokePoint.fahrenheit}°F\n                              </div>\n                            )}\n\n                            {/* Compact cooking methods for proteins */}\n                            {category === 'proteins' && item.culinaryApplications && (\n                              <div className=\"mt-1 text-[10px] text-gray-600 dark:text-gray-400\">\n                                <span className=\"font-medium\">Cook:</span>{' '}\n                                {Object.keys(item.culinaryApplications).slice(0, 2).map((method, idx) => (\n                                  <span key={method}>\n                                    {idx > 0 && ', '}\n                                    {method.replace(/_/g, ' ')}\n                                  </span>\n                                ))}\n                              </div>\n                            )}\n                          </>\n                        )}\n                      </div>\n                    );\n                  })}\n                  \n                  {/* Show more/less button */}\n                  {items.length > displayCount && (\n                    <div \n                      className=\"col-span-full flex justify-center mt-2\"\n                    >\n                      <button \n                        onClick={(e) => toggleCategoryExpansion(category, e)}\n                        className=\"text-indigo-600 dark:text-indigo-400 text-sm font-medium hover:text-indigo-800 dark:hover:text-indigo-300 transition-colors py-1 px-3 rounded-full border border-indigo-200 dark:border-indigo-700/50 hover:bg-indigo-50 dark:hover:bg-indigo-900/30\"\n                      >\n                        {isExpanded ? (\n                          <span className=\"flex items-center\">Show Less <ChevronUp size={14} className=\"ml-1\" /></span>\n                        ) : (\n                          <span className=\"flex items-center\">Show {items.length - displayCount} More <ChevronDown size={14} className=\"ml-1\" /></span>\n                        )}\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <div className=\"bg-gray-100 dark:bg-gray-800 p-8 rounded-lg text-center\">\n          <p className=\"text-gray-600 dark:text-gray-400\">No recommendations available. Try refreshing your astrological data.</p>\n        </div>\n      )}\n      \n      <div className=\"mt-6 text-center space-y-3\">\n        {/* Navigation to full ingredients page - only show if not already on full page */}\n        {!isFullPageVersion && (\n          <button \n            className=\"px-5 py-2 bg-gradient-to-r from-green-600 to-teal-600 text-white font-medium rounded-lg shadow-sm hover:shadow-md transform hover:-translate-y-0.5 transition-all flex items-center gap-2 mx-auto\"\n            onClick={handleViewMore}\n          >\n            View All Ingredients <ExternalLink size={16} />\n          </button>\n        )}\n        \n        <button \n          className=\"px-5 py-2 bg-gradient-to-r from-indigo-600 to-purple-600 text-white font-medium rounded-lg shadow-sm hover:shadow-md transform hover:-translate-y-0.5 transition-all\"\n          onClick={() => window.location.reload()}\n        >\n          Refresh Celestial Recommendations\n        </button>\n      </div>\n    </div>\n  );\n} "],"version":3}