{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/__tests__/linting/AstrologicalRulesValidation.test.ts","mappings":";AAAA;;;;;;GAMG;;AAGH,mCAAgC;AAEhC,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;IACzC,IAAI,MAAc,CAAC;IAEnB,SAAS,CAAC,GAAG,EAAE;QACb,+CAA+C;QAC/C,MAAM,GAAG,IAAI,eAAM,CAAC;YAClB,UAAU,EAAE;gBACV,eAAe,EAAE;oBACf,WAAW,EAAE,IAAI;oBACjB,UAAU,EAAE,QAAQ;oBACpB,MAAM,EAAE,OAAO,CAAC,2BAA2B,CAAC;oBAC5C,aAAa,EAAE;wBACb,YAAY,EAAE;4BACZ,GAAG,EAAE,IAAI;yBACV;qBACF;iBACF;gBACD,OAAO,EAAE;oBACP,YAAY,EAAE,OAAO,CAAC,6CAA6C,CAAC;iBACrE;gBACD,KAAK,EAAE;oBACL,2CAA2C,EAAE,OAAO;oBACpD,oDAAoD,EAAE,OAAO;oBAC7D,4CAA4C,EAAE,OAAO;oBACrD,8CAA8C,EAAE,MAAM;oBACtD,uCAAuC,EAAE,OAAO;iBACjD;aACF;YACD,WAAW,EAAE,KAAK;SACnB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,mCAAmC,EAAE,GAAG,EAAE;QACjD,IAAI,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;YACjE,MAAM,IAAI,GAAG;;;OAGZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;YAC7E,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE;YACxE,MAAM,IAAI,GAAG;;;OAGZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;YAC7E,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;YACvE,MAAM,IAAI,GAAG;;;OAGZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;YAC7E,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;YACnE,MAAM,IAAI,GAAG;;;;OAIZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,4CAA4C,EAAE,GAAG,EAAE;QAC1D,IAAI,CAAC,kEAAkE,EAAE,KAAK,IAAI,EAAE;YAClF,MAAM,IAAI,GAAG;;;;;;OAMZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,oDAAoD,CAAC,CAAC;YACtF,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,6BAA6B,CAAC,CAAC;YACrE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;YACxD,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iEAAiE,EAAE,KAAK,IAAI,EAAE;YACjF,MAAM,IAAI,GAAG;;;;;;;OAOZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;YACvD,MAAM,IAAI,GAAG;;;;;;;;;;OAUZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAClD,IAAI,CAAC,kEAAkE,EAAE,KAAK,IAAI,EAAE;YAClF,MAAM,IAAI,GAAG;;;;;;OAMZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;YAC9E,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC;YACnE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YAC/C,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;YAC/D,MAAM,IAAI,GAAG;;;;;;;OAOZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;YAC9E,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC;YAC/D,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;YACnE,MAAM,IAAI,GAAG;;;;;;;OAOZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;YACjE,MAAM,IAAI,GAAG;;;;;;;OAOZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,sCAAsC,EAAE,GAAG,EAAE;QACpD,IAAI,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;YAC5E,MAAM,IAAI,GAAG;;;;;OAKZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;gBACpC,QAAQ,EAAE,+BAA+B;aAC1C,CAAC,CAAC;YACH,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,8CAA8C,CAAC,CAAC;YAChF,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,4CAA4C,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;YACtE,MAAM,IAAI,GAAG;;;;;;;OAOZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;gBACpC,QAAQ,EAAE,+BAA+B;aAC1C,CAAC,CAAC;YACH,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,8CAA8C,CAAC,CAAC;YAChF,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,+CAA+C,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;YAC9D,MAAM,IAAI,GAAG;;;;;;;OAOZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;gBACpC,QAAQ,EAAE,+BAA+B;aAC1C,CAAC,CAAC;YACH,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;YACxD,MAAM,IAAI,GAAG;;;;OAIZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;gBACpC,QAAQ,EAAE,2BAA2B;aACtC,CAAC,CAAC;YACH,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;QAC7C,IAAI,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;YACnE,MAAM,IAAI,GAAG;;;OAGZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;YACzE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;YACzE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChF,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE;YACxE,MAAM,IAAI,GAAG;;;OAGZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;YACzE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,6BAA6B,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;YACzD,MAAM,IAAI,GAAG;;;;;;;OAOZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;YACxD,MAAM,IAAI,GAAG;;;;OAIZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,gDAAgD,EAAE,GAAG,EAAE;QAC9D,IAAI,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,IAAI,GAAG;;;;;;;;;;;;;;OAcZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,IAAI,GAAG;;;;;;;;;;;;;;;OAeZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,CAAC;YAChE,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,iCAAiC,EAAE,GAAG,EAAE;QAC/C,IAAI,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;YACvD,MAAM,SAAS,GAAG;UACd,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;0BACjB,CAAC;;sBAEL,CAAC;8BACO,CAAC;;;SAGtB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;OACd,CAAC;YAEF,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC7B,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YACpE,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAE3B,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,kCAAkC;YAClF,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;YACzD,MAAM,aAAa,GAAG;;;;OAIrB,CAAC;YAEF,2DAA2D;YAC3D,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAExE,iEAAiE;YACjE,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;YACxD,MAAM,IAAI,GAAG;;;;;;;;;;;;;;;;;OAiBZ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;YAC/D,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/__tests__/linting/AstrologicalRulesValidation.test.ts"],"sourcesContent":["/**\n * Comprehensive Tests for Astrological ESLint Rules\n *\n * Tests the custom ESLint plugin rules for astrological calculations\n * to ensure they properly validate planetary positions, elemental properties,\n * and transit date validation patterns.\n */\n\n\nimport { ESLint } from 'eslint';\n\ndescribe('Astrological ESLint Rules', () => {\n  let eslint: ESLint;\n\n  beforeAll(() => {\n    // Create ESLint instance with our custom rules\n    eslint = new ESLint({\n      baseConfig: {\n        languageOptions: {\n          ecmaVersion: 2022,\n          sourceType: 'module',\n          parser: require('@typescript-eslint/parser'),\n          parserOptions: {\n            ecmaFeatures: {\n              jsx: true\n            }\n          }\n        },\n        plugins: {\n          astrological: require('../../eslint-plugins/astrological-rules.cjs')\n        },\n        rules: {\n          'astrological/preserve-planetary-constants': 'error',\n          'astrological/validate-planetary-position-structure': 'error',\n          'astrological/validate-elemental-properties': 'error',\n          'astrological/require-transit-date-validation': 'warn',\n          'astrological/preserve-fallback-values': 'error'\n        }\n      },\n      useEslintrc: false\n    });\n  });\n\n  describe('preserve-planetary-constants rule', () => {\n    test('should error when modifying protected constants', async () => {\n      const code = `\n        const DEGREES_PER_SIGN = 30;\n        DEGREES_PER_SIGN = 25; // This should error\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(1);\n      expect(messages[0].ruleId).toBe('astrological/preserve-planetary-constants');\n      expect(messages[0].message).toContain('should not be modified');\n    });\n\n    test('should error when modifying constant object properties', async () => {\n      const code = `\n        const RELIABLE_POSITIONS = { sun: { sign: 'aries' } };\n        RELIABLE_POSITIONS.sun = { sign: 'taurus' }; // This should error\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(1);\n      expect(messages[0].ruleId).toBe('astrological/preserve-planetary-constants');\n      expect(messages[0].message).toContain('should not be modified');\n    });\n\n    test('should error when using update operators on constants', async () => {\n      const code = `\n        let MAX_LONGITUDE = 360;\n        MAX_LONGITUDE++; // This should error\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(1);\n      expect(messages[0].ruleId).toBe('astrological/preserve-planetary-constants');\n      expect(messages[0].message).toContain('should not be modified');\n    });\n\n    test('should allow using constants without modification', async () => {\n      const code = `\n        const DEGREES_PER_SIGN = 30;\n        const angle = DEGREES_PER_SIGN * 2; // This should be fine\n        console.log(RELIABLE_POSITIONS.sun.sign); // This should be fine\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(0);\n    });\n  });\n\n  describe('validate-planetary-position-structure rule', () => {\n    test('should error when planetary position missing required properties', async () => {\n      const code = `\n        const position = {\n          sign: 'aries',\n          degree: 15\n          // Missing exactLongitude and isRetrograde\n        };\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(1);\n      expect(messages[0].ruleId).toBe('astrological/validate-planetary-position-structure');\n      expect(messages[0].message).toContain('missing required properties');\n      expect(messages[0].message).toContain('exactLongitude');\n      expect(messages[0].message).toContain('isRetrograde');\n    });\n\n    test('should pass when planetary position has all required properties', async () => {\n      const code = `\n        const position = {\n          sign: 'aries',\n          degree: 15.5,\n          exactLongitude: 15.5,\n          isRetrograde: false\n        };\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(0);\n    });\n\n    test('should not flag non-planetary objects', async () => {\n      const code = `\n        const config = {\n          timeout: 5000,\n          retries: 3\n        };\n\n        const user = {\n          name: 'John',\n          age: 30\n        };\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(0);\n    });\n  });\n\n  describe('validate-elemental-properties rule', () => {\n    test('should error when elemental properties missing required elements', async () => {\n      const code = `\n        const properties = {\n          Fire: 0.8,\n          Water: 0.2\n          // Missing Earth and Air\n        };\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(1);\n      expect(messages[0].ruleId).toBe('astrological/validate-elemental-properties');\n      expect(messages[0].message).toContain('missing required elements');\n      expect(messages[0].message).toContain('Earth');\n      expect(messages[0].message).toContain('Air');\n    });\n\n    test('should error when using invalid element names', async () => {\n      const code = `\n        const properties = {\n          Fire: 0.5,\n          Water: 0.3,\n          Earth: 0.1,\n          Wind: 0.1 // Should be Air\n        };\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(1);\n      expect(messages[0].ruleId).toBe('astrological/validate-elemental-properties');\n      expect(messages[0].message).toContain('Invalid element names');\n      expect(messages[0].message).toContain('Wind');\n    });\n\n    test('should error when element values are out of range', async () => {\n      const code = `\n        const properties = {\n          Fire: 1.5, // Too high\n          Water: -0.1, // Too low\n          Earth: 0.3,\n          Air: 0.2\n        };\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(2);\n      expect(messages.some(m => m.message.includes('1.5'))).toBe(true);\n      expect(messages.some(m => m.message.includes('-0.1'))).toBe(true);\n    });\n\n    test('should pass when elemental properties are valid', async () => {\n      const code = `\n        const properties = {\n          Fire: 0.7,\n          Water: 0.1,\n          Earth: 0.1,\n          Air: 0.1\n        };\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(0);\n    });\n  });\n\n  describe('require-transit-date-validation rule', () => {\n    test('should warn when astrological file lacks validation import', async () => {\n      const code = `\n        // This is in a calculations file but has no validation\n        function calculatePlanetaryInfluence() {\n          return { influence: 0.8 };\n        }\n      `;\n\n      const results = eslint.lintText(code, {\n        filePath: 'src/calculations/planetary.ts'\n      });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(1);\n      expect(messages[0].ruleId).toBe('astrological/require-transit-date-validation');\n      expect(messages[0].message).toContain('should import transit validation utilities');\n    });\n\n    test('should warn when validation is imported but not used', async () => {\n      const code = `\n        import { validateTransitDate } from '@/utils/astrology/transitValidation';\n\n        function calculatePlanetaryInfluence() {\n          // Validation imported but not called\n          return { influence: 0.8 };\n        }\n      `;\n\n      const results = eslint.lintText(code, {\n        filePath: 'src/calculations/planetary.ts'\n      });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(1);\n      expect(messages[0].ruleId).toBe('astrological/require-transit-date-validation');\n      expect(messages[0].message).toContain('Consider adding transit date validation calls');\n    });\n\n    test('should pass when validation is properly used', async () => {\n      const code = `\n        import { validateTransitDate } from '@/utils/astrology/transitValidation';\n\n        function calculatePlanetaryInfluence(planet, date) {\n          const isValid = validateTransitDate(planet, date, 'aries', transitDates);\n          return { influence: isValid ? 0.8 : 0.5 };\n        }\n      `;\n\n      const results = eslint.lintText(code, {\n        filePath: 'src/calculations/planetary.ts'\n      });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(0);\n    });\n\n    test('should not flag non-astrological files', async () => {\n      const code = `\n        function regularFunction() {\n          return { result: 'success' };\n        }\n      `;\n\n      const results = eslint.lintText(code, {\n        filePath: 'src/components/Button.tsx'\n      });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(0);\n    });\n  });\n\n  describe('preserve-fallback-values rule', () => {\n    test('should error when fallback variable assigned null', async () => {\n      const code = `\n        let FALLBACK_POSITIONS = null; // This should error\n        const RELIABLE_DATA = undefined; // This should error\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(2);\n      expect(messages[0].ruleId).toBe('astrological/preserve-fallback-values');\n      expect(messages[1].ruleId).toBe('astrological/preserve-fallback-values');\n      expect(messages.some(m => m.message.includes('FALLBACK_POSITIONS'))).toBe(true);\n      expect(messages.some(m => m.message.includes('RELIABLE_DATA'))).toBe(true);\n    });\n\n    test('should error when fallback variable reassigned to null', async () => {\n      const code = `\n        let MARCH2025_POSITIONS = { sun: { sign: 'aries' } };\n        MARCH2025_POSITIONS = null; // This should error\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(1);\n      expect(messages[0].ruleId).toBe('astrological/preserve-fallback-values');\n      expect(messages[0].message).toContain('should not be assigned null');\n    });\n\n    test('should allow valid fallback assignments', async () => {\n      const code = `\n        const FALLBACK_POSITIONS = {\n          sun: { sign: 'aries', degree: 8.5 }\n        };\n\n        let RELIABLE_DATA = getReliableData\n        RELIABLE_DATA = { updated: true };\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(0);\n    });\n\n    test('should not flag non-fallback variables', async () => {\n      const code = `\n        let regularVariable = null;\n        const anotherVar = undefined;\n        regularVariable = null;\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(0);\n    });\n  });\n\n  describe('Integration with existing ESLint configuration', () => {\n    test('should work with TypeScript files', async () => {\n      const code = `\n        interface PlanetaryPosition {\n          sign: string;\n          degree: number;\n          exactLongitude: number;\n          isRetrograde: boolean;\n        }\n\n        const position: PlanetaryPosition = {\n          sign: 'aries',\n          degree: 15.5,\n          exactLongitude: 15.5,\n          isRetrograde: false\n        };\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(0);\n    });\n\n    test('should work with React components', async () => {\n      const code = `\n        import React from 'react';\n\n        interface Props {\n          elementalProperties: {\n            Fire: number;\n            Water: number;\n            Earth: number;\n            Air: number;\n          };\n        }\n\n        const ElementalDisplay: React.FC<Props> = ({ elementalProperties }) => {\n          return <div>Elemental display</div>;\n        };\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.tsx' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(0);\n    });\n  });\n\n  describe('Rule performance and edge cases', () => {\n    test('should handle large files efficiently', async () => {\n      const largeCode = `\n        ${Array(100).fill(0).map((_, i) => `\n          const position${i} = {\n            sign: 'aries',\n            degree: ${i},\n            exactLongitude: ${i},\n            isRetrograde: false\n          };\n        `).join('\\n')}\n      `;\n\n      const startTime = Date.now();\n      const results = eslint.lintText(largeCode, { filePath: 'test.ts' });\n      const endTime = Date.now();\n\n      expect(endTime - startTime).toBeLessThan(1000); // Should complete within 1 second\n      expect(results[0].messages).toHaveLength(0);\n    });\n\n    test('should handle malformed code gracefully', async () => {\n      const malformedCode = `\n        const incomplete = {\n          sign: 'aries'\n          // Missing comma and closing brace\n      `;\n\n      // This should not throw an error, even with malformed code\n      const results = eslint.lintText(malformedCode, { filePath: 'test.ts' });\n\n      // ESLint should handle syntax errors, our rules should not crash\n      expect(results).toBeDefined();\n    });\n\n    test('should handle nested objects correctly', async () => {\n      const code = `\n        const planetData = {\n          mercury: {\n            position: {\n              sign: 'gemini',\n              degree: 10.5,\n              exactLongitude: 70.5,\n              isRetrograde: true\n            },\n            properties: {\n              Fire: 0.3,\n              Water: 0.2,\n              Earth: 0.2,\n              Air: 0.3\n            }\n          }\n        };\n      `;\n\n      const results = eslint.lintText(code, { filePath: 'test.ts' });\n      const messages = results[0].messages;\n\n      expect(messages).toHaveLength(0);\n    });\n  });\n});\n"],"version":3}