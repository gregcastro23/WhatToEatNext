{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/DependencySecurityMonitor.test.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/DependencySecurityMonitor.test.ts"],"sourcesContent":["/**\n * Dependency Security Monitor Tests\n * Comprehensive test suite for dependency and security monitoring functionality\n */\n\nimport {\n  DependencySecurityMonitor,\n  DEFAULT_DEPENDENCY_SECURITY_CONFIG,\n  DependencySecurityConfig,\n} from './DependencySecurityMonitor';\nimport * as fs from 'fs';\nimport { execSync } from 'child_process';\n\n// Mock dependencies\njest.mock('fs');\njest.mock('child_process');\njest.mock('../../utils/logger');\n\nconst mockFs = fs as jest.Mocked<typeof fs>;\nconst mockExecSync = execSync as jest.MockedFunction<typeof execSync>;\n\ndescribe('DependencySecurityMonitor', () => {\n  let dependencyMonitor: DependencySecurityMonitor;\n  let testConfig: DependencySecurityConfig;\n\n  beforeEach(() => {\n    testConfig = {\n      ...DEFAULT_DEPENDENCY_SECURITY_CONFIG,\n      maxDependenciesPerBatch: 5,\n      safetyValidationEnabled: true,\n    };\n    dependencyMonitor = new DependencySecurityMonitor(testConfig);\n\n    // Reset mocks\n    jest.clearAllMocks();\n  });\n\n  describe('scanSecurityVulnerabilities', () => {\n    test('detects and categorizes security vulnerabilities', async () => {\n      const auditOutput = JSON.stringify({\n        vulnerabilities: {\n          lodash: {\n            severity: 'high',\n            via: [\n              {\n                source: 'CVE-2021-23337',\n                title: 'Command Injection in lodash',\n                range: '>=1.0.0 <4.17.21',\n              },\n            ],\n            range: '>=1.0.0 <4.17.21',\n            fixAvailable: {\n              version: '4.17.21',\n            },\n          },\n          axios: {\n            severity: 'critical',\n            via: [\n              {\n                source: 'CVE-2021-3749',\n                title: 'Regular Expression Denial of Service in axios',\n                range: '>=0.8.1 <0.21.2',\n              },\n            ],\n            range: '>=0.8.1 <0.21.2',\n            fixAvailable: {\n              version: '0.21.2',\n            },\n          },\n        },\n      });\n\n      mockExecSync.mockReturnValue(auditOutput);\n\n      const securityReport =\n        await dependencyMonitor.scanSecurityVulnerabilities();\n\n      expect(securityReport.vulnerabilities).toHaveLength(2);\n      expect(securityReport.summary.critical).toBe(1);\n      expect(securityReport.summary.high).toBe(1);\n      expect(securityReport.summary.total).toBe(2);\n\n      const lodashVuln = securityReport.vulnerabilities.find(\n        v => v.packageName === 'lodash'\n      );\n      expect(lodashVuln).toBeDefined();\n      expect(lodashVuln?.severity).toBe('high');\n      expect(lodashVuln?.patchAvailable).toBe(true);\n      expect(lodashVuln?.fixedVersion).toBe('4.17.21');\n    });\n\n    test('handles npm audit errors gracefully', async () => {\n      mockExecSync.mockImplementation(() => {\n        throw new Error('npm audit failed');\n      });\n\n      const securityReport =\n        await dependencyMonitor.scanSecurityVulnerabilities();\n\n      expect(securityReport.vulnerabilities).toHaveLength(0);\n      expect(securityReport.summary.total).toBe(0);\n      expect(securityReport.recommendations).toContain(\n        'Failed to scan for vulnerabilities. Please run npm audit manually.'\n      );\n    });\n\n    test('generates appropriate security recommendations', async () => {\n      const auditOutput = JSON.stringify({\n        vulnerabilities: {\n          'test-package': {\n            severity: 'critical',\n            via: [{ source: 'CVE-2021-0001', title: 'Test vulnerability' }],\n            fixAvailable: { version: '2.0.0' },\n          },\n        },\n      });\n\n      mockExecSync.mockReturnValue(auditOutput);\n\n      const securityReport =\n        await dependencyMonitor.scanSecurityVulnerabilities();\n\n      expect(securityReport.recommendations).toContain(\n        expect.stringContaining(\n          '1 critical vulnerabilities found - immediate action required'\n        )\n      );\n      expect(securityReport.recommendations).toContain(\n        expect.stringContaining('1 vulnerabilities have patches available')\n      );\n    });\n  });\n\n  describe('checkDependencyUpdates', () => {\n    test('detects available dependency updates', async () => {\n      const outdatedOutput = JSON.stringify({\n        lodash: {\n          current: '4.17.20',\n          wanted: '4.17.21',\n          latest: '4.17.21',\n          location: 'node_modules/lodash',\n        },\n        react: {\n          current: '17.0.0',\n          wanted: '17.0.2',\n          latest: '18.0.0',\n          location: 'node_modules/react',\n        },\n      });\n\n      const error = new Error('npm outdated found updates') as any;\n      error.stdout = outdatedOutput;\n      mockExecSync.mockImplementation(() => {\n        throw error;\n      });\n\n      const updateReport = await dependencyMonitor.checkDependencyUpdates();\n\n      expect(updateReport.availableUpdates).toHaveLength(2);\n      expect(updateReport.summary.total).toBe(2);\n\n      const lodashUpdate = updateReport.availableUpdates.find(\n        u => u.packageName === 'lodash'\n      );\n      expect(lodashUpdate).toBeDefined();\n      expect(lodashUpdate?.updateType).toBe('patch');\n      expect(lodashUpdate?.breakingChanges).toBe(false);\n\n      const reactUpdate = updateReport.availableUpdates.find(\n        u => u.packageName === 'react'\n      );\n      expect(reactUpdate).toBeDefined();\n      expect(reactUpdate?.updateType).toBe('major');\n      expect(reactUpdate?.breakingChanges).toBe(true);\n    });\n\n    test('handles no updates available', async () => {\n      mockExecSync.mockReturnValue('{}');\n\n      const updateReport = await dependencyMonitor.checkDependencyUpdates();\n\n      expect(updateReport.availableUpdates).toHaveLength(0);\n      expect(updateReport.summary.total).toBe(0);\n    });\n  });\n\n  describe('applySecurityPatches', () => {\n    test('applies security patches for critical vulnerabilities', async () => {\n      const config = {\n        ...testConfig,\n        autoUpdateEnabled: true,\n        securityThresholds: {\n          ...testConfig.securityThresholds,\n          autoFixCritical: true,\n        },\n      };\n      const monitor = new DependencySecurityMonitor(config);\n\n      const vulnerabilities = [\n        {\n          packageName: 'lodash',\n          currentVersion: '4.17.20',\n          vulnerableVersions: '>=1.0.0 <4.17.21',\n          severity: 'critical' as const,\n          cve: 'CVE-2021-23337',\n          description: 'Command Injection',\n          fixedVersion: '4.17.21',\n          patchAvailable: true,\n        },\n      ];\n\n      mockExecSync.mockReturnValue('');\n\n      const appliedUpdates =\n        await monitor.applySecurityPatches(vulnerabilities);\n\n      expect(appliedUpdates).toHaveLength(1);\n      expect(appliedUpdates[0].packageName).toBe('lodash');\n      expect(appliedUpdates[0].securityFix).toBe(true);\n      expect(mockExecSync).toHaveBeenCalledWith(\n        'npm install lodash@4.17.21',\n        expect.any(Object)\n      );\n    });\n\n    test('skips excluded packages', async () => {\n      const config = {\n        ...testConfig,\n        autoUpdateEnabled: true,\n        excludedPackages: ['lodash'],\n        securityThresholds: {\n          ...testConfig.securityThresholds,\n          autoFixCritical: true,\n        },\n      };\n      const monitor = new DependencySecurityMonitor(config);\n\n      const vulnerabilities = [\n        {\n          packageName: 'lodash',\n          currentVersion: '4.17.20',\n          vulnerableVersions: '>=1.0.0 <4.17.21',\n          severity: 'critical' as const,\n          cve: 'CVE-2021-23337',\n          description: 'Command Injection',\n          fixedVersion: '4.17.21',\n          patchAvailable: true,\n        },\n      ];\n\n      const appliedUpdates =\n        await monitor.applySecurityPatches(vulnerabilities);\n\n      expect(appliedUpdates).toHaveLength(0);\n      expect(mockExecSync).not.toHaveBeenCalled();\n    });\n\n    test('respects security threshold settings', async () => {\n      const config = {\n        ...testConfig,\n        autoUpdateEnabled: true,\n        securityThresholds: {\n          ...testConfig.securityThresholds,\n          autoFixCritical: false,\n          autoFixHigh: false,\n        },\n      };\n      const monitor = new DependencySecurityMonitor(config);\n\n      const vulnerabilities = [\n        {\n          packageName: 'lodash',\n          currentVersion: '4.17.20',\n          vulnerableVersions: '>=1.0.0 <4.17.21',\n          severity: 'high' as const,\n          cve: 'CVE-2021-23337',\n          description: 'Command Injection',\n          fixedVersion: '4.17.21',\n          patchAvailable: true,\n        },\n      ];\n\n      const appliedUpdates =\n        await monitor.applySecurityPatches(vulnerabilities);\n\n      expect(appliedUpdates).toHaveLength(0);\n    });\n  });\n\n  describe('applySafeUpdates', () => {\n    test('applies safe patch updates', async () => {\n      const config = {\n        ...testConfig,\n        autoUpdateEnabled: true,\n      };\n      const monitor = new DependencySecurityMonitor(config);\n\n      const availableUpdates = [\n        {\n          packageName: 'lodash',\n          currentVersion: '4.17.20',\n          latestVersion: '4.17.21',\n          updateType: 'patch' as const,\n          breakingChanges: false,\n          securityFix: false,\n          testingRequired: false,\n        },\n      ];\n\n      mockExecSync.mockReturnValue('');\n\n      const appliedUpdates = await monitor.applySafeUpdates(availableUpdates);\n\n      expect(appliedUpdates).toHaveLength(1);\n      expect(mockExecSync).toHaveBeenCalledWith(\n        'npm install lodash@4.17.21',\n        expect.any(Object)\n      );\n    });\n\n    test('skips major updates requiring manual approval', async () => {\n      const config = {\n        ...testConfig,\n        autoUpdateEnabled: true,\n        updateStrategies: [\n          {\n            name: 'Default',\n            description: 'Default strategy',\n            pattern: /.*/,\n            updateType: 'minor' as const,\n            requiresManualApproval: true,\n            testingRequired: false,\n          },\n        ],\n      };\n      const monitor = new DependencySecurityMonitor(config);\n\n      const availableUpdates = [\n        {\n          packageName: 'react',\n          currentVersion: '17.0.0',\n          latestVersion: '18.0.0',\n          updateType: 'major' as const,\n          breakingChanges: true,\n          securityFix: false,\n          testingRequired: true,\n        },\n      ];\n\n      const appliedUpdates = await monitor.applySafeUpdates(availableUpdates);\n\n      expect(appliedUpdates).toHaveLength(0);\n      expect(mockExecSync).not.toHaveBeenCalledWith(\n        expect.stringContaining('npm install react@18.0.0'),\n        expect.any(Object)\n      );\n    });\n  });\n\n  describe('runCompatibilityTests', () => {\n    test('runs build and test commands successfully', async () => {\n      mockExecSync.mockReturnValue('');\n\n      const result = await dependencyMonitor.runCompatibilityTests();\n\n      expect(result).toBe(true);\n      expect(mockExecSync).toHaveBeenCalledWith(\n        'npm run build',\n        expect.any(Object)\n      );\n      expect(mockExecSync).toHaveBeenCalledWith('npm test', expect.any(Object));\n    });\n\n    test('returns false when tests fail', async () => {\n      mockExecSync\n        .mockReturnValueOnce('') // Build succeeds\n        .mockImplementationOnce(() => {\n          // Test fails\n          throw new Error('Tests failed');\n        });\n\n      const result = await dependencyMonitor.runCompatibilityTests();\n\n      expect(result).toBe(false);\n    });\n\n    test('returns false when build fails', async () => {\n      mockExecSync.mockImplementation(() => {\n        throw new Error('Build failed');\n      });\n\n      const result = await dependencyMonitor.runCompatibilityTests();\n\n      expect(result).toBe(false);\n    });\n  });\n\n  describe('executeDependencySecurityMonitoring', () => {\n    test('executes complete monitoring workflow', async () => {\n      const packageJson = {\n        dependencies: { lodash: '4.17.20' },\n        devDependencies: { jest: '29.0.0' },\n      };\n\n      mockFs.readFileSync.mockReturnValue(JSON.stringify(packageJson));\n\n      // Mock npm audit (no vulnerabilities)\n      mockExecSync.mockReturnValueOnce(JSON.stringify({ vulnerabilities: {} }));\n\n      // Mock npm outdated (no updates)\n      mockExecSync.mockReturnValueOnce('{}');\n\n      const result =\n        await dependencyMonitor.executeDependencySecurityMonitoring();\n\n      expect(result.dependenciesScanned).toBe(2);\n      expect(result.vulnerabilitiesFound).toBe(0);\n      expect(result.updatesAvailable).toBe(0);\n      expect(result.errors).toHaveLength(0);\n    });\n\n    test('handles security scan and update workflow', async () => {\n      const config = {\n        ...testConfig,\n        autoUpdateEnabled: true,\n        securityThresholds: {\n          ...testConfig.securityThresholds,\n          autoFixCritical: true,\n        },\n      };\n      const monitor = new DependencySecurityMonitor(config);\n\n      const packageJson = {\n        dependencies: { lodash: '4.17.20' },\n      };\n\n      mockFs.readFileSync.mockReturnValue(JSON.stringify(packageJson));\n\n      // Mock npm audit with vulnerability\n      const auditOutput = JSON.stringify({\n        vulnerabilities: {\n          lodash: {\n            severity: 'critical',\n            via: [{ source: 'CVE-2021-23337', title: 'Test vuln' }],\n            fixAvailable: { version: '4.17.21' },\n          },\n        },\n      });\n      mockExecSync.mockReturnValueOnce(auditOutput);\n\n      // Mock npm outdated\n      const outdatedError = new Error('Updates available') as any;\n      outdatedError.stdout = JSON.stringify({\n        lodash: {\n          current: '4.17.20',\n          latest: '4.17.21',\n        },\n      });\n      mockExecSync.mockImplementationOnce(() => {\n        throw outdatedError;\n      });\n\n      // Mock security patch application\n      mockExecSync.mockReturnValueOnce(''); // npm install for security patch\n\n      // Mock compatibility tests\n      mockExecSync.mockReturnValueOnce(''); // npm run build\n      mockExecSync.mockReturnValueOnce(''); // npm test\n\n      const result = await monitor.executeDependencySecurityMonitoring();\n\n      expect(result.vulnerabilitiesFound).toBe(1);\n      expect(result.updatesAvailable).toBe(1);\n      expect(result.securityPatchesApplied).toBe(1);\n      expect(result.compatibilityTestsPassed).toBe(true);\n    });\n\n    test('handles errors gracefully', async () => {\n      mockFs.readFileSync.mockImplementation(() => {\n        throw new Error('Package.json not found');\n      });\n\n      const result =\n        await dependencyMonitor.executeDependencySecurityMonitoring();\n\n      expect(result.dependenciesScanned).toBe(0);\n      expect(result.errors.length).toBeGreaterThan(0);\n    });\n  });\n\n  describe('update type determination', () => {\n    test('correctly identifies major updates', () => {\n      const monitor = new DependencySecurityMonitor(testConfig);\n\n      // Access private method through any cast for testing\n      const determineUpdateType = (monitor as any).determineUpdateType;\n\n      expect(determineUpdateType('1.0.0', '2.0.0')).toBe('major');\n      expect(determineUpdateType('17.0.0', '18.0.0')).toBe('major');\n    });\n\n    test('correctly identifies minor updates', () => {\n      const monitor = new DependencySecurityMonitor(testConfig);\n      const determineUpdateType = (monitor as any).determineUpdateType;\n\n      expect(determineUpdateType('1.0.0', '1.1.0')).toBe('minor');\n      expect(determineUpdateType('17.0.0', '17.1.0')).toBe('minor');\n    });\n\n    test('correctly identifies patch updates', () => {\n      const monitor = new DependencySecurityMonitor(testConfig);\n      const determineUpdateType = (monitor as any).determineUpdateType;\n\n      expect(determineUpdateType('1.0.0', '1.0.1')).toBe('patch');\n      expect(determineUpdateType('17.0.0', '17.0.1')).toBe('patch');\n    });\n  });\n\n  describe('configuration validation', () => {\n    test('uses default configuration when not provided', () => {\n      const monitor = new DependencySecurityMonitor(\n        DEFAULT_DEPENDENCY_SECURITY_CONFIG\n      );\n      expect(monitor).toBeDefined();\n    });\n\n    test('respects custom configuration', () => {\n      const customConfig: DependencySecurityConfig = {\n        maxDependenciesPerBatch: 5,\n        safetyValidationEnabled: false,\n        autoUpdateEnabled: true,\n        securityScanEnabled: false,\n        compatibilityTestingEnabled: false,\n        updateStrategies: [],\n        securityThresholds: {\n          critical: 0,\n          high: 0,\n          moderate: 0,\n          low: 0,\n          autoFixCritical: false,\n          autoFixHigh: false,\n        },\n        excludedPackages: ['react', 'next'],\n      };\n\n      const monitor = new DependencySecurityMonitor(customConfig);\n      expect(monitor).toBeDefined();\n    });\n  });\n});\n"],"version":3}