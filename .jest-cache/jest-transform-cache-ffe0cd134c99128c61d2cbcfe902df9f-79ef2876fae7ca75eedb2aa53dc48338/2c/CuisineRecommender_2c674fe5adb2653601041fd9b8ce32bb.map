{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/components/CuisineRecommender.tsx","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/components/CuisineRecommender.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { logger } from '@/utils/logger';\nimport {\n  Sparkles,\n  Star,\n  Moon,\n  AlertCircle,\n  RefreshCw,\n  BarChart3,\n  Zap,\n  Brain\n} from 'lucide-react';\nimport { \n  getCuisineRecommendations,\n  generateTopSauceRecommendations,\n  getMatchScoreClass,\n  calculateElementalProfileFromZodiac,\n} from '@/utils/cuisineRecommender';\nimport { \n  calculateMomentMonicaConstant,\n  performEnhancedAnalysis,\n  calculateMonicaKalchmCompatibility,\n} from '@/utils/monicaKalchmCalculations';\nimport { \n  CulturalAnalyticsService,\n  CulturalAnalytics,\n  FusionCuisineRecommendation \n} from '@/services/CulturalAnalyticsService';\nimport {\n  ElementalProperties,\n  ZodiacSign,\n  LunarPhase,\n} from '@/types/alchemy';\nimport { useAlchemical } from '@/contexts/AlchemicalContext/hooks';\nimport { getAllRecipes } from '@/data/recipes';\nimport { Recipe } from '@/types/recipe';\nimport RecipeRecommendations from './RecipeRecommendations';\nimport SauceRecommendations from './SauceRecommendations';\nimport AdvancedSearchFilters, { SearchFilters } from './AdvancedSearchFilters';\nimport { \n  processNaturalLanguageQuery, \n  enhancedSearch, \n  applyFilters,\n  SearchIntent \n} from '@/utils/naturalLanguageProcessor';\nimport { useRecommendationAnalytics, useInteractionTracking } from '@/hooks/useRecommendationAnalytics';\nimport PerformanceAnalyticsDashboard from '@/components/analytics/PerformanceAnalyticsDashboard';\nimport EnterpriseIntelligencePanel from '@/components/intelligence/EnterpriseIntelligencePanel';\n\n// ========== INTERFACES ==========\n\ninterface CuisineData {\n  id: string;\n  name: string;\n  description?: string;\n  elementalProperties?: ElementalProperties;\n  matchPercentage?: number;\n  score?: number;\n  reasoning?: string[];\n  recipes?: RecipeData[];\n  [key: string]: unknown;\n}\n\ninterface RecipeData {\n  id?: string;\n  name?: string;\n  description?: string;\n  cuisine?: string;\n  matchPercentage?: number;\n  matchScore?: number;\n  elementalProperties?: ElementalProperties;\n  ingredients?: unknown[];\n  instructions?: unknown[];\n  cookTime?: string;\n  prepTime?: string;\n  servingSize?: number;\n  difficulty?: string;\n  [key: string]: unknown;\n}\n\ninterface SauceData {\n  id: string;\n  name: string;\n  description?: string;\n  matchPercentage?: number;\n  score?: number;\n  reasoning?: string[];\n  [key: string]: unknown;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n  retryCount: number;\n}\n\ninterface LoadingState {\n  isLoading: boolean;\n  step: string;\n  progress: number;\n}\n\n// ========== HELPER FUNCTIONS ==========\n\nconst getSafeScore = (score: unknown): number => {\n  const numScore = typeof score === 'number' ? score : parseFloat(String(score));\n  return !isNaN(numScore) ? numScore : 0.5;\n};\n\nconst getCurrentSeason = (): string => {\n  const now = new Date();\n  const month = now.getMonth(); // 0 = January, 11 = December\n  \n  if (month >= 2 && month <= 4) return 'spring';\n  if (month >= 5 && month <= 7) return 'summer';\n  if (month >= 8 && month <= 10) return 'autumn';\n  return 'winter';\n};\n\n// Calculate alchemical balance optimization score\nconst calculateAlchemicalBalance = (alchemicalProperties: any): number => {\n  if (!alchemicalProperties) return 0.5;\n  \n  const { Spirit, Essence, Matter, Substance } = alchemicalProperties;\n  \n  // Calculate balance based on how evenly distributed the alchemical properties are\n  const values = [Spirit, Essence, Matter, Substance];\n  const mean = values.reduce((sum, val) => sum + val, 0) / values.length;\n  const variance = values.reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / values.length;\n  const standardDeviation = Math.sqrt(variance);\n  \n  // Lower standard deviation = better balance\n  // Normalize to 0-1 scale where 1 is perfect balance\n  const balanceScore = Math.max(0, 1 - (standardDeviation / mean));\n  \n  return Math.min(1, Math.max(0, balanceScore));\n};\n\n// Calculate seasonal optimization score for cuisine\nconst calculateSeasonalOptimization = (cuisineName: string, season: string): number => {\n  // Seasonal preferences for different cuisines\n  const seasonalPreferences: Record<string, Record<string, number>> = {\n    'italian': { spring: 0.9, summer: 0.95, autumn: 0.85, winter: 0.8 },\n    'chinese': { spring: 0.85, summer: 0.8, autumn: 0.9, winter: 0.95 },\n    'japanese': { spring: 0.95, summer: 0.85, autumn: 0.9, winter: 0.8 },\n    'indian': { spring: 0.8, summer: 0.7, autumn: 0.85, winter: 0.9 },\n    'thai': { spring: 0.85, summer: 0.95, autumn: 0.8, winter: 0.7 },\n    'mexican': { spring: 0.9, summer: 0.95, autumn: 0.85, winter: 0.8 },\n    'french': { spring: 0.9, summer: 0.85, autumn: 0.95, winter: 0.9 },\n    'mediterranean': { spring: 0.95, summer: 0.95, autumn: 0.85, winter: 0.75 },\n    'middle-eastern': { spring: 0.85, summer: 0.9, autumn: 0.8, winter: 0.85 }\n  };\n  \n  const cuisineKey = cuisineName.toLowerCase();\n  const preferences = seasonalPreferences[cuisineKey];\n  \n  if (preferences && preferences[season]) {\n    return preferences[season];\n  }\n  \n  // Default seasonal optimization\n  return 0.8;\n};\n\n// Calculate Kalchm harmony score for recipe recommendations\nconst calculateRecipeKalchmHarmony = (\n  recipeThermodynamics: any,\n  cuisineThermodynamics?: any\n): number => {\n  if (!recipeThermodynamics) return 0.7;\n  \n  // If we have cuisine thermodynamics, compare them\n  if (cuisineThermodynamics) {\n    const kalchmRatio = Math.min(recipeThermodynamics.kalchm, cuisineThermodynamics.kalchm) / \n                       Math.max(recipeThermodynamics.kalchm, cuisineThermodynamics.kalchm);\n    const monicaHarmony = 1 - Math.abs(recipeThermodynamics.monica - cuisineThermodynamics.monica) / 5;\n    \n    return Math.max(0, Math.min(1, (kalchmRatio * 0.6) + (monicaHarmony * 0.4)));\n  }\n  \n  // Otherwise, score based on thermodynamic stability\n  const stabilityScore = Math.max(0, 1 - Math.abs(recipeThermodynamics.gregsEnergy) / 5);\n  const kalchmScore = Math.min(1, recipeThermodynamics.kalchm / 2); // Normalize Kalchm\n  \n  return Math.max(0, Math.min(1, (stabilityScore * 0.5) + (kalchmScore * 0.5)));\n};\n\n// Calculate thermodynamic optimization for recipes\nconst calculateThermodynamicOptimization = (\n  thermodynamics: any,\n  currentElementalProfile: ElementalProperties\n): number => {\n  if (!thermodynamics) return 0.7;\n  \n  // Calculate optimization based on thermodynamic efficiency\n  const heatEfficiency = Math.max(0, Math.min(1, thermodynamics.heat));\n  const entropyBalance = Math.max(0, 1 - thermodynamics.entropy / 2);\n  const reactivityOptimal = Math.max(0, 1 - Math.abs(thermodynamics.reactivity - 1) / 2);\n  \n  // Weight the factors for overall optimization\n  const optimization = (heatEfficiency * 0.4) + (entropyBalance * 0.3) + (reactivityOptimal * 0.3);\n  \n  return Math.max(0, Math.min(1, optimization));\n};\n\nconst buildCompleteRecipe = (recipe: Recipe, cuisineName: string): RecipeData => {\n  const defaultElementalProperties: ElementalProperties = { \n    Fire: 0.25, Water: 0.25, Earth: 0.25, Air: 0.25 \n  };\n  \n  const matchScore = typeof recipe.matchScore === 'number' ? recipe.matchScore : 0.85;\n  \n  return {\n    id: recipe.id || `recipe-${Math.random().toString(36).substring(2, 9)}`,\n    name: recipe.name || `${cuisineName} Recipe`,\n    description: recipe.description || `A traditional recipe from ${cuisineName} cuisine.`,\n    cuisine: recipe.cuisine || cuisineName,\n    matchPercentage: recipe.matchPercentage || Math.round(matchScore * 100),\n    matchScore,\n    elementalProperties: recipe.elementalProperties || defaultElementalProperties,\n    ingredients: Array.isArray(recipe.ingredients) ? recipe.ingredients : [],\n    instructions: Array.isArray(recipe.instructions) ? recipe.instructions : [],\n    cookTime: String(recipe.cookTime || \"30 minutes\"),\n    prepTime: String(recipe.prepTime || \"15 minutes\"),\n    servingSize: typeof recipe.servingSize === 'number' ? recipe.servingSize : 4,\n    difficulty: String(recipe.difficulty || \"Medium\"),\n    ...recipe\n  };\n};\n\n// ========== ERROR BOUNDARY COMPONENT ==========\n\nclass CuisineRecommenderErrorBoundary extends React.Component<\n  { children: React.ReactNode; onRetry: () => void },\n  ErrorBoundaryState\n> {\n  constructor(props: { children: React.ReactNode; onRetry: () => void }) {\n    super(props);\n    this.state = { hasError: false, error: null, retryCount: 0 };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { hasError: true, error, retryCount: 0 };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    logger.error('CuisineRecommender Error:', error, errorInfo);\n  }\n\n  handleRetry = () => {\n    if (this.state.retryCount < 3) {\n      this.setState(prevState => ({\n        hasError: false,\n        error: null,\n        retryCount: prevState.retryCount + 1\n      }));\n      this.props.onRetry();\n    }\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"p-6 bg-red-50 border border-red-200 rounded-lg\">\n          <div className=\"flex items-center space-x-2 mb-3\">\n            <AlertCircle className=\"text-red-500\" size={20} />\n            <h3 className=\"text-red-800 font-medium\">Something went wrong</h3>\n          </div>\n          <p className=\"text-red-600 text-sm mb-4\">\n            We encountered an error loading the cuisine recommendations. \n            {this.state.retryCount < 3 && \" You can try again.\"}\n          </p>\n          {this.state.retryCount < 3 && (\n            <button\n              onClick={this.handleRetry}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-red-100 hover:bg-red-200 text-red-700 rounded transition-colors\"\n            >\n              <RefreshCw size={16} />\n              <span>Try Again ({3 - this.state.retryCount} attempts left)</span>\n            </button>\n          )}\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n// ========== LOADING COMPONENT ==========\n\nconst LoadingComponent: React.FC<{ loadingState: LoadingState }> = ({ loadingState }) => (\n  <div className=\"p-6 flex flex-col items-center justify-center space-y-3 bg-white rounded-lg shadow\">\n    <div className=\"w-10 h-10 border-4 border-blue-200 border-t-blue-500 rounded-full animate-spin\"></div>\n    <p className=\"text-lg font-medium\">Loading cuisine recommendations...</p>\n    <p className=\"text-sm text-gray-500\">{loadingState.step}</p>\n    <div className=\"w-full max-w-xs bg-gray-200 rounded-full h-2\">\n      <div \n        className=\"bg-blue-500 h-2 rounded-full transition-all duration-300\" \n        style={{ width: `${loadingState.progress}%` }}\n      ></div>\n    </div>\n  </div>\n);\n\n// ========== MAIN COMPONENT ==========\n\nexport default function CuisineRecommender() {\n  // ========== CONTEXT AND STATE ==========\n  const alchemicalContext = useAlchemical();\n  const { planetaryPositions = {}, state } = alchemicalContext ?? {};\n  const { astrologicalState = { zodiacSign: 'aries', lunarPhase: 'new moon' } } = state ?? {};\n  const { zodiacSign: currentZodiac, lunarPhase } = astrologicalState;\n\n  // Component state\n  const [selectedCuisine, setSelectedCuisine] = useState<string | null>(null);\n  const [cuisineRecommendations, setCuisineRecommendations] = useState<CuisineData[]>([]);\n  const [loadingState, setLoadingState] = useState<LoadingState>({\n    isLoading: true,\n    step: 'Initializing...',\n    progress: 0\n  });\n  const [error, setError] = useState<string | null>(null);\n  const [matchingRecipes, setMatchingRecipes] = useState<RecipeData[]>([]);\n  const [sauceRecommendations, setSauceRecommendations] = useState<SauceData[]>([]);\n  \n  // Cultural Analytics state\n  const [culturalAnalytics, setCulturalAnalytics] = useState<Record<string, CulturalAnalytics>>({});\n  const [fusionRecommendations, setFusionRecommendations] = useState<FusionCuisineRecommendation[]>([]);\n  \n  // UI state\n  const [showCuisineDetails, setShowCuisineDetails] = useState<boolean>(false);\n  const [selectedRecipe, setSelectedRecipe] = useState<RecipeData | null>(null);\n  const [showCulturalAnalytics, setShowCulturalAnalytics] = useState<boolean>(false);\n  const [showFusionRecommendations, setShowFusionRecommendations] = useState<boolean>(false);\n  \n  // Advanced Search and Filtering state\n  const [searchFilters, setSearchFilters] = useState<SearchFilters>({\n    query: '',\n    dietaryRestrictions: [],\n    difficultyLevel: [],\n    cookingTime: { min: 0, max: 480 },\n    cuisineTypes: [],\n    mealTypes: [],\n    spiciness: [],\n    ingredients: []\n  });\n  const [searchIntent, setSearchIntent] = useState<SearchIntent | null>(null);\n  const [filteredCuisines, setFilteredCuisines] = useState<CuisineData[]>([]);\n  const [originalCuisines, setOriginalCuisines] = useState<CuisineData[]>([]);\n\n  // Performance Analytics and Caching state\n  const [showPerformanceAnalytics, setShowPerformanceAnalytics] = useState<boolean>(false);\n  \n  // Enterprise Intelligence state\n  const [showEnterpriseIntelligence, setShowEnterpriseIntelligence] = useState<boolean>(false);\n  const [enterpriseIntelligenceAnalysis, setEnterpriseIntelligenceAnalysis] = useState<any>(null);\n  \n  // Analytics hooks\n  const [analyticsState, analyticsActions] = useRecommendationAnalytics({\n    enablePerformanceTracking: true,\n    enableCaching: true,\n    enableInteractionTracking: true,\n    metricsUpdateInterval: 5000\n  });\n  \n  const { trackClick, trackView, trackExpand, trackSearch, trackFilter } = useInteractionTracking();\n\n  // ========== MEMOIZED VALUES ==========\n  \n  const currentMomentElementalProfile = useMemo(() => {\n    const elementalState = (state as any)?.elementalState || (state as any)?.astrologicalState?.elementalState;\n    if (elementalState) {\n      return elementalState as ElementalProperties;\n    }\n    if (currentZodiac) {\n      return calculateElementalProfileFromZodiac(currentZodiac as ZodiacSign);\n    }\n    return { Fire: 0.25, Water: 0.25, Earth: 0.25, Air: 0.25 };\n  }, [state, currentZodiac]);\n\n  const astrologicalStateForRecommendations = useMemo(() => ({\n    zodiacSign: String(currentZodiac || 'aries') as ZodiacSign,\n    lunarPhase: String(lunarPhase || 'new moon') as LunarPhase,\n    planetaryPositions: planetaryPositions || {},\n  }), [currentZodiac, lunarPhase, planetaryPositions]);\n\n  // ========== DATA LOADING ==========\n\n  const loadCuisineData = useCallback(async () => {\n    // Start performance tracking\n    const endTiming = analyticsActions.startTiming('cuisine_recommendation_load');\n    const loadStartTime = performance.now();\n    \n    try {\n      setLoadingState({ isLoading: true, step: 'Getting astrological state...', progress: 10 });\n      setError(null);\n      \n      // Check cache first\n      const cacheKey = `cuisine_recommendations_${JSON.stringify(currentMomentElementalProfile)}_${JSON.stringify(astrologicalStateForRecommendations)}`;\n      const cachedRecommendations = analyticsActions.getCachedRecommendation<{\n        cuisines: CuisineData[];\n        culturalAnalytics: Record<string, CulturalAnalytics>;\n        fusionRecommendations: FusionCuisineRecommendation[];\n        sauces: SauceData[];\n      }>(cacheKey);\n      \n      if (cachedRecommendations) {\n        logger.info('Using cached cuisine recommendations');\n        setCuisineRecommendations(cachedRecommendations.cuisines);\n        setOriginalCuisines(cachedRecommendations.cuisines);\n        setFilteredCuisines(cachedRecommendations.cuisines);\n        setCulturalAnalytics(cachedRecommendations.culturalAnalytics);\n        setFusionRecommendations(cachedRecommendations.fusionRecommendations);\n        setSauceRecommendations(cachedRecommendations.sauces);\n        \n        const loadTime = performance.now() - loadStartTime;\n        analyticsActions.recordLoadTime(loadTime);\n        endTiming();\n        \n        setLoadingState({ isLoading: false, step: 'Complete!', progress: 100 });\n        return;\n      }\n      \n      // Small delay to show loading state\n      await new Promise(resolve => setTimeout(resolve, 100));\n      \n      setLoadingState({ isLoading: true, step: 'Generating cuisine recommendations...', progress: 30 });\n      \n      const recommendations = getCuisineRecommendations(\n        currentMomentElementalProfile,\n        astrologicalStateForRecommendations,\n        { count: 12, includeRegional: true }\n      );\n      \n      setLoadingState({ isLoading: true, step: 'Loading recipe data...', progress: 50 });\n      \n      const recipes = await getAllRecipes();\n      \n      setLoadingState({ isLoading: true, step: 'Calculating Monica/Kalchm compatibility...', progress: 65 });\n      \n      // Enhanced recommendations with Monica/Kalchm integration\n      const enhancedRecommendations = recommendations.map(cuisine => {\n        // Ensure elemental properties are properly typed\n        const cuisineElemental: ElementalProperties = cuisine.elementalProperties || \n          { Fire: 0.25, Water: 0.25, Earth: 0.25, Air: 0.25 };\n        \n        // Perform comprehensive enhanced analysis\n        const enhancedAnalysis = performEnhancedAnalysis(\n          { elemental: cuisineElemental },\n          currentMomentElementalProfile\n        );\n        \n        // Calculate Monica compatibility\n        const monicaCompatibility = calculateMonicaKalchmCompatibility(\n          { elemental: cuisineElemental },\n          { elemental: currentMomentElementalProfile }\n        );\n        \n        // Calculate moment Monica constant for user and cuisine\n        const userMonica = calculateMomentMonicaConstant(currentMomentElementalProfile);\n        const cuisineMonica = calculateMomentMonicaConstant(cuisineElemental);\n        \n        // Calculate thermodynamic harmony score\n        const thermodynamicHarmony = Math.max(0, 1 - Math.abs(enhancedAnalysis.thermodynamicMetrics.gregsEnergy) / 10);\n        \n        // Calculate alchemical balance optimization\n        const alchemicalBalance = calculateAlchemicalBalance(enhancedAnalysis.alchemicalProperties);\n        \n        // Calculate cultural synergy score (5% weight in 7-factor algorithm)\n        const culturalSynergyData = CulturalAnalyticsService.calculateCulturalSynergy(\n          cuisine.name.toLowerCase(),\n          [],\n          { season: getCurrentSeason() }\n        );\n        \n        // Enhanced 7-factor scoring algorithm:\n        // 1. Original astrological score (50%)\n        // 2. Monica/Kalchm compatibility (20%)\n        // 3. Thermodynamic harmony (10%)\n        // 4. Alchemical balance (10%)\n        // 5. Cultural synergy (5%)\n        // 6. Confidence factor (3%)\n        // 7. Seasonal optimization (2%)\n        const originalScore = getSafeScore(cuisine.score);\n        const seasonalOptimization = calculateSeasonalOptimization(cuisine.name, getCurrentSeason());\n        \n        const enhancedScore = (\n          (originalScore * 0.50) + \n          (monicaCompatibility * 0.20) + \n          (thermodynamicHarmony * 0.10) + \n          (alchemicalBalance * 0.10) + \n          (culturalSynergyData.score * 0.05) + \n          (enhancedAnalysis.confidence * 0.03) + \n          (seasonalOptimization * 0.02)\n        );\n        \n        // Log enhanced analytics integration for verification\n        logger.info(`Enhanced Monica/Kalchm Analytics for ${cuisine.name}:`, {\n          originalScore,\n          monicaCompatibility,\n          thermodynamicHarmony,\n          alchemicalBalance,\n          culturalSynergy: culturalSynergyData.score,\n          confidence: enhancedAnalysis.confidence,\n          seasonalOptimization,\n          enhancedScore,\n          thermodynamicMetrics: enhancedAnalysis.thermodynamicMetrics\n        });\n        \n        return {\n          ...cuisine,\n          score: enhancedScore,\n          matchPercentage: Math.round(enhancedScore * 100),\n          monicaCompatibility,\n          userMonica,\n          cuisineMonica,\n          thermodynamicHarmony,\n          alchemicalBalance,\n          enhancedAnalysis,\n          reasoning: [\n            ...(cuisine.reasoning || []),\n            `Monica compatibility: ${Math.round(monicaCompatibility * 100)}%`,\n            `Thermodynamic harmony: ${Math.round(thermodynamicHarmony * 100)}%`,\n            `Alchemical balance: ${Math.round(alchemicalBalance * 100)}%`\n          ]\n        };\n      });\n      \n      setLoadingState({ isLoading: true, step: 'Matching recipes to cuisines...', progress: 75 });\n      \n      const cuisinesWithRecipes = enhancedRecommendations.map(cuisine => {\n        const matching = recipes.filter(recipe => \n          recipe.cuisine && recipe.cuisine.toLowerCase() === cuisine.name.toLowerCase()\n        );\n        \n        // Enhanced recipe building with Monica/Kalchm integration\n        const enhancedRecipes = matching.map(recipe => {\n          const baseRecipe = buildCompleteRecipe(recipe, cuisine.name);\n          \n          // Perform enhanced analysis on recipe\n          if (baseRecipe.elementalProperties) {\n            const analysis = performEnhancedAnalysis(\n              { elemental: baseRecipe.elementalProperties },\n              currentMomentElementalProfile\n            );\n            \n            // Calculate Kalchm harmony score for recipe\n            const kalchmHarmony = calculateRecipeKalchmHarmony(\n              analysis.thermodynamicMetrics,\n              (cuisine as any).enhancedAnalysis?.thermodynamicMetrics\n            );\n            \n            // Calculate recipe thermodynamic optimization\n            const thermodynamicOptimization = calculateThermodynamicOptimization(\n              analysis.thermodynamicMetrics,\n              currentMomentElementalProfile\n            );\n            \n            // Enhanced recipe scoring with thermodynamic properties\n            const originalScore = baseRecipe.matchScore || 0.85;\n            const enhancedRecipeScore = (\n              (originalScore * 0.60) + \n              (analysis.compatibilityScore * 0.25) + \n              (kalchmHarmony * 0.10) + \n              (thermodynamicOptimization * 0.05)\n            );\n            \n            return {\n              ...baseRecipe,\n              enhancedAnalysis: analysis,\n              monicaScore: analysis.thermodynamicMetrics.monica,\n              kalchmScore: analysis.thermodynamicMetrics.kalchm,\n              kalchmHarmony,\n              thermodynamicOptimization,\n              compatibilityScore: analysis.compatibilityScore,\n              confidence: analysis.confidence,\n              matchScore: enhancedRecipeScore,\n              matchPercentage: Math.round(enhancedRecipeScore * 100)\n            };\n          }\n          \n          return baseRecipe;\n        });\n        \n        return {\n          ...cuisine,\n          recipes: enhancedRecipes\n        };\n      });\n      setCuisineRecommendations(cuisinesWithRecipes);\n      setOriginalCuisines(cuisinesWithRecipes);\n      setFilteredCuisines(cuisinesWithRecipes);\n\n      setLoadingState({ isLoading: true, step: 'Analyzing cultural intelligence...', progress: 80 });\n      \n      // Generate cultural analytics for each cuisine\n      const culturalAnalyticsData: Record<string, CulturalAnalytics> = {};\n      for (const cuisine of cuisinesWithRecipes) {\n        try {\n          const analytics = CulturalAnalyticsService.generateCulturalAnalytics(\n            cuisine.name.toLowerCase(),\n            cuisine.elementalProperties || { Fire: 0.25, Water: 0.25, Earth: 0.25, Air: 0.25 },\n            astrologicalStateForRecommendations\n          );\n          culturalAnalyticsData[cuisine.id] = analytics;\n        } catch (error) {\n          logger.warn(`Failed to generate cultural analytics for ${cuisine.name}:`, error);\n        }\n      }\n      setCulturalAnalytics(culturalAnalyticsData);\n      \n      // Generate fusion recommendations\n      const availableCuisineNames = cuisinesWithRecipes.map(c => c.name.toLowerCase());\n      const topCuisine = cuisinesWithRecipes[0]?.name?.toLowerCase();\n      if (topCuisine) {\n        const fusionRecs = CulturalAnalyticsService.generateFusionRecommendations(\n          topCuisine,\n          availableCuisineNames,\n          3\n        );\n        setFusionRecommendations(fusionRecs);\n      }\n\n      setLoadingState({ isLoading: true, step: 'Harmonizing sauces...', progress: 90 });\n      \n      const topSauces = generateTopSauceRecommendations(\n        currentMomentElementalProfile,\n        6,\n        astrologicalStateForRecommendations\n      );\n      setSauceRecommendations(topSauces as SauceData[]);\n\n      // Calculate overall confidence score for caching\n      const overallConfidence = analyticsActions.calculateConfidence({\n        astrologicalAlignment: 0.9,\n        elementalHarmony: 0.85,\n        culturalRelevance: 0.8,\n        seasonalOptimization: calculateSeasonalOptimization('average', getCurrentSeason()),\n        userPreferenceMatch: 0.8,\n        dataQuality: 0.95\n      });\n\n      // Cache the complete recommendation set with confidence-based TTL\n      const cacheData = {\n        cuisines: cuisinesWithRecipes,\n        culturalAnalytics: culturalAnalyticsData,\n        fusionRecommendations: fusionRecs,\n        sauces: topSauces\n      };\n      \n      analyticsActions.cacheRecommendation(cacheKey, cacheData, overallConfidence.overallScore);\n      \n      // Record final load time\n      const totalLoadTime = performance.now() - loadStartTime;\n      analyticsActions.recordLoadTime(totalLoadTime);\n      endTiming();\n      \n      logger.info(`Cuisine recommendations loaded in ${totalLoadTime.toFixed(2)}ms with confidence ${overallConfidence.overallScore.toFixed(2)}`);\n\n      setLoadingState({ isLoading: false, step: 'Complete!', progress: 100 });\n    } catch (err) {\n      logger.error('Error loading cuisine data:', err);\n      setError('Failed to load cuisine recommendations. Please try again.');\n      setLoadingState({ isLoading: false, step: 'Error', progress: 0 });\n      \n      // Record error in analytics\n      const errorLoadTime = performance.now() - loadStartTime;\n      analyticsActions.recordLoadTime(errorLoadTime);\n      endTiming();\n    }\n  }, [currentMomentElementalProfile, astrologicalStateForRecommendations, analyticsActions]);\n\n  // ========== EFFECTS ==========\n\n  useEffect(() => {\n    loadCuisineData();\n  }, [loadCuisineData]);\n\n  // ========== EVENT HANDLERS ==========\n\n  const handleCuisineSelect = useCallback((cuisineId: string) => {\n    // Track user interaction\n    const selectedData = cuisineRecommendations.find(c => c.id === cuisineId);\n    trackClick(`cuisine_${cuisineId}`, {\n      cuisineName: selectedData?.name,\n      matchPercentage: selectedData?.matchPercentage,\n      isExpanding: selectedCuisine !== cuisineId\n    });\n\n    if (selectedCuisine === cuisineId) {\n      setShowCuisineDetails(!showCuisineDetails);\n      trackExpand(`cuisine_details_${cuisineId}`, {\n        action: showCuisineDetails ? 'collapse' : 'expand'\n      });\n      return;\n    }\n    \n    setSelectedCuisine(cuisineId);\n    setShowCuisineDetails(true);\n\n    if (selectedData?.recipes?.length > 0) {\n      setMatchingRecipes(selectedData.recipes);\n    } else {\n      setMatchingRecipes([]);\n    }\n  }, [selectedCuisine, showCuisineDetails, cuisineRecommendations, trackClick, trackExpand]);\n\n  const handleRetry = useCallback(() => {\n    setError(null);\n    loadCuisineData();\n  }, [loadCuisineData]);\n\n  // ========== ADVANCED SEARCH AND FILTERING HANDLERS ==========\n\n  const handleFiltersChange = useCallback((filters: SearchFilters) => {\n    setSearchFilters(filters);\n    \n    // Process natural language query if present\n    if (filters.query.trim()) {\n      const intent = processNaturalLanguageQuery(filters.query);\n      setSearchIntent(intent);\n      \n      // Merge extracted filters with manual filters\n      const mergedFilters = {\n        ...filters,\n        ...intent.extractedFilters,\n        // Preserve manual selections over extracted ones for arrays\n        dietaryRestrictions: [\n          ...new Set([\n            ...filters.dietaryRestrictions,\n            ...(intent.extractedFilters.dietaryRestrictions || [])\n          ])\n        ],\n        cuisineTypes: [\n          ...new Set([\n            ...filters.cuisineTypes,\n            ...(intent.extractedFilters.cuisineTypes || [])\n          ])\n        ],\n        difficultyLevel: [\n          ...new Set([\n            ...filters.difficultyLevel,\n            ...(intent.extractedFilters.difficultyLevel || [])\n          ])\n        ]\n      };\n      \n      // Apply enhanced search and filtering\n      let filtered = originalCuisines;\n      \n      // Apply text search first\n      if (intent.query.trim()) {\n        filtered = enhancedSearch(filtered, intent.query, ['name', 'description']);\n      }\n      \n      // Apply filters\n      filtered = applyFilters(filtered, mergedFilters);\n      \n      setFilteredCuisines(filtered);\n    } else {\n      // No query, just apply filters\n      const filtered = applyFilters(originalCuisines, filters);\n      setFilteredCuisines(filtered);\n      setSearchIntent(null);\n    }\n  }, [originalCuisines]);\n\n  const handleSearch = useCallback((query: string) => {\n    // Track search interaction\n    trackSearch(query, {\n      originalResultCount: originalCuisines.length,\n      timestamp: Date.now()\n    });\n\n    const intent = processNaturalLanguageQuery(query);\n    setSearchIntent(intent);\n    \n    // Update filters with extracted information\n    const updatedFilters = {\n      ...searchFilters,\n      query,\n      ...intent.extractedFilters\n    };\n    \n    setSearchFilters(updatedFilters);\n    \n    // Apply enhanced search\n    let filtered = originalCuisines;\n    \n    if (intent.query.trim()) {\n      filtered = enhancedSearch(filtered, intent.query, ['name', 'description']);\n    }\n    \n    filtered = applyFilters(filtered, updatedFilters);\n    setFilteredCuisines(filtered);\n\n    // Track filter results\n    trackFilter('search_results', {\n      query,\n      resultCount: filtered.length,\n      originalCount: originalCuisines.length,\n      confidence: intent.confidence\n    });\n  }, [searchFilters, originalCuisines, trackSearch, trackFilter]);\n\n  // ========== RENDER HELPERS ==========\n\n  const selectedCuisineData = useMemo(() => \n    cuisineRecommendations.find(c => c.id === selectedCuisine),\n    [cuisineRecommendations, selectedCuisine]\n  );\n\n  // ========== RENDER ==========\n\n  if (loadingState.isLoading) {\n    return <LoadingComponent loadingState={loadingState} />;\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-4 bg-red-50 border border-red-200 text-red-700 rounded-lg\">\n        <div className=\"flex items-center space-x-2 mb-2\">\n          <AlertCircle size={20} />\n          <span className=\"font-medium\">Error</span>\n        </div>\n        <p className=\"mb-3\">{error}</p>\n        <button\n          onClick={handleRetry}\n          className=\"flex items-center space-x-2 px-3 py-1 bg-red-100 hover:bg-red-200 rounded transition-colors\"\n        >\n          <RefreshCw size={16} />\n          <span>Retry</span>\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <CuisineRecommenderErrorBoundary onRetry={handleRetry}>\n      <div className=\"bg-white rounded-lg shadow p-4\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <h2 className=\"text-xl font-medium\">Celestial Cuisine Guide</h2>\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => setShowEnterpriseIntelligence(!showEnterpriseIntelligence)}\n              className={`flex items-center space-x-1 px-3 py-1 text-sm rounded transition-colors ${\n                showEnterpriseIntelligence \n                  ? 'bg-purple-100 text-purple-700' \n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n              }`}\n              title=\"Toggle Enterprise Intelligence\"\n            >\n              <Brain size={14} />\n              <span>Intelligence</span>\n            </button>\n            <button\n              onClick={() => setShowPerformanceAnalytics(!showPerformanceAnalytics)}\n              className={`flex items-center space-x-1 px-3 py-1 text-sm rounded transition-colors ${\n                showPerformanceAnalytics \n                  ? 'bg-blue-100 text-blue-700' \n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n              }`}\n              title=\"Toggle Performance Analytics\"\n            >\n              <BarChart3 size={14} />\n              <span>Analytics</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Performance Analytics Dashboard */}\n        {showPerformanceAnalytics && (\n          <div className=\"mb-6\">\n            <PerformanceAnalyticsDashboard \n              className=\"border-t pt-4\"\n              compact={false}\n              showDetails={true}\n            />\n          </div>\n        )}\n\n        {/* Enterprise Intelligence Panel */}\n        {showEnterpriseIntelligence && (\n          <div className=\"mb-6\">\n            <EnterpriseIntelligencePanel\n              recipeData={selectedCuisine ? cuisineRecommendations.find(c => c.id === selectedCuisine) : null}\n              ingredientData={{ ingredients: matchingRecipes }}\n              astrologicalContext={{\n                zodiacSign: astrologicalStateForRecommendations.zodiacSign,\n                lunarPhase: astrologicalStateForRecommendations.lunarPhase,\n                elementalProperties: currentMomentElementalProfile,\n                planetaryPositions: astrologicalStateForRecommendations.planetaryPositions\n              }}\n              className=\"border-t pt-4\"\n              showDetailedMetrics={true}\n              autoAnalyze={true}\n              onAnalysisComplete={(analysis) => {\n                setEnterpriseIntelligenceAnalysis(analysis);\n                logger.info('Enterprise Intelligence Analysis completed:', {\n                  overallScore: analysis.overallScore,\n                  systemHealth: analysis.systemHealth\n                });\n              }}\n            />\n          </div>\n        )}\n\n        {/* Compact Performance Indicator (always visible) */}\n        {!showPerformanceAnalytics && analyticsState.metrics && (\n          <div className=\"mb-4 flex items-center justify-between text-xs text-gray-500 bg-gray-50 px-3 py-2 rounded\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-1\">\n                <Zap size={12} className=\"text-blue-500\" />\n                <span>Load: {analyticsState.metrics.loadTime.toFixed(0)}ms</span>\n              </div>\n              <div className=\"flex items-center space-x-1\">\n                <span>Cache: {(analyticsState.cacheStats.hitRate * 100).toFixed(0)}%</span>\n              </div>\n              <div className=\"flex items-center space-x-1\">\n                <span>Score: {analyticsState.performanceTrends.performanceScore.toFixed(0)}/100</span>\n              </div>\n            </div>\n            <button\n              onClick={() => setShowPerformanceAnalytics(true)}\n              className=\"text-blue-600 hover:text-blue-800 underline\"\n            >\n              View Details\n            </button>\n          </div>\n        )}\n\n        {/* Advanced Search and Filtering */}\n        <div className=\"mb-6\">\n          <AdvancedSearchFilters\n            onFiltersChange={handleFiltersChange}\n            onSearch={handleSearch}\n            availableCuisines={originalCuisines.map(c => c.name.toLowerCase())}\n            className=\"mb-4\"\n          />\n          \n          {/* Search Intent Display */}\n          {searchIntent && searchIntent.confidence > 0.5 && (\n            <div className=\"mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <Sparkles size={16} className=\"text-blue-500\" />\n                <span className=\"text-sm font-medium text-blue-700\">Search Intelligence</span>\n                <span className=\"text-xs bg-blue-100 text-blue-600 px-2 py-1 rounded\">\n                  {Math.round(searchIntent.confidence * 100)}% confidence\n                </span>\n              </div>\n              {searchIntent.suggestions.length > 0 && (\n                <div className=\"text-sm text-blue-600\">\n                  <span className=\"font-medium\">Suggestions: </span>\n                  {searchIntent.suggestions.slice(0, 3).join(', ')}\n                </div>\n              )}\n            </div>\n          )}\n          \n          {/* Results Summary */}\n          <div className=\"flex items-center justify-between mb-4 text-sm text-gray-600\">\n            <span>\n              Showing {filteredCuisines.length} of {originalCuisines.length} cuisines\n              {searchFilters.query && ` for \"${searchFilters.query}\"`}\n            </span>\n            {filteredCuisines.length !== originalCuisines.length && (\n              <button\n                onClick={() => {\n                  setSearchFilters({\n                    query: '',\n                    dietaryRestrictions: [],\n                    difficultyLevel: [],\n                    cookingTime: { min: 0, max: 480 },\n                    cuisineTypes: [],\n                    mealTypes: [],\n                    spiciness: [],\n                    ingredients: []\n                  });\n                  setFilteredCuisines(originalCuisines);\n                  setSearchIntent(null);\n                }}\n                className=\"text-blue-600 hover:text-blue-800 underline\"\n              >\n                Clear filters\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Cuisine Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 mb-4\">\n          {filteredCuisines.map(cuisine => (\n            <div\n              key={cuisine.id}\n              className={`rounded border p-3 cursor-pointer transition-all duration-200 hover:shadow-md ${\n                selectedCuisine === cuisine.id ? 'border-blue-400 bg-blue-50' : 'border-gray-200'\n              }`}\n              onClick={() => handleCuisineSelect(cuisine.id)}\n            >\n              <div className=\"flex justify-between items-center mb-2\">\n                <h3 className=\"font-medium text-sm\">{cuisine.name}</h3>\n                <span className={`text-xs px-2 py-1 rounded ${getMatchScoreClass(getSafeScore(cuisine.score))}`}>\n                  {cuisine.matchPercentage}%\n                </span>\n              </div>\n              <p className=\"text-xs text-gray-600 mb-2 line-clamp-2\" title={cuisine.description}>\n                {cuisine.description}\n              </p>\n              <div className=\"flex items-center space-x-2 text-xs text-gray-500\">\n                <Sparkles size={14} className=\"text-yellow-500\" />\n                <span>{cuisine.reasoning?.[0]}</span>\n              </div>\n              {cuisine.reasoning?.[1] && (\n                <div className=\"flex items-center space-x-2 text-xs text-gray-500 mt-1\">\n                  {cuisine.reasoning[1].includes('Favorable') ? \n                    <Star size={14} className=\"text-green-500\" /> : \n                    <Moon size={14} className=\"text-blue-500\" />\n                  }\n                  <span>{cuisine.reasoning[1]}</span>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {/* Enhanced Sauce Recommendations */}\n        <div className=\"mt-6 pt-4 border-t border-gray-200\">\n          <SauceRecommendations\n            sauces={sauceRecommendations}\n            currentElementalProfile={currentMomentElementalProfile}\n            currentZodiac={currentZodiac}\n            lunarPhase={lunarPhase}\n            currentSeason={getCurrentSeason()}\n            maxDisplayed={6}\n            onSauceSelect={(sauce) => {\n              logger.info('Sauce selected:', sauce.name);\n              // Future: Add sauce selection logic here\n            }}\n          />\n        </div>\n\n        {/* Selected Cuisine Details */}\n        {selectedCuisineData && showCuisineDetails && (\n          <div className=\"mt-4 pt-3 border-t border-gray-200\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <h3 className=\"font-semibold text-lg\">{selectedCuisineData.name} Cuisine</h3>\n              <span className={`text-xs px-2 py-1 rounded ${getMatchScoreClass(getSafeScore(selectedCuisineData.score))}`}>\n                {selectedCuisineData.matchPercentage}% match\n              </span>\n            </div>\n            <p className=\"text-sm text-gray-600 mb-3\">{selectedCuisineData.description}</p>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n              <div className=\"bg-gray-50 p-3 rounded border\">\n                <h4 className=\"text-sm font-medium mb-2\">Elemental Properties</h4>\n                <div className=\"grid grid-cols-2 gap-2\">\n                  {Object.entries(selectedCuisineData.elementalProperties || {}).map(([element, value]) => (\n                    <div key={element} className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">{element}</span>\n                      <div className=\"w-20 bg-gray-200 rounded-full h-2.5\">\n                        <div \n                          className=\"h-2.5 rounded-full bg-blue-500\" \n                          style={{ width: `${Math.round(Number(value) * 100)}%` }}\n                        ></div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"bg-gray-50 p-3 rounded border\">\n                <h4 className=\"text-sm font-medium mb-2\">Recommendation Reasoning</h4>\n                <ul className=\"list-disc pl-4 text-sm text-gray-600\">\n                  {selectedCuisineData.reasoning?.map((reason, i) => <li key={i}>{reason}</li>)}\n                </ul>\n              </div>\n            </div>\n\n            {/* Monica/Kalchm Thermodynamic Metrics */}\n            {(selectedCuisineData as any).monicaCompatibility && (\n              <div className=\"mb-4 bg-gradient-to-r from-purple-50 to-blue-50 p-4 rounded-lg border\">\n                <h4 className=\"text-sm font-medium mb-3 flex items-center\">\n                  <Sparkles size={16} className=\"text-purple-500 mr-2\" />\n                  Alchemical Compatibility Analysis\n                </h4>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-semibold text-purple-600\">\n                      {Math.round(((selectedCuisineData as any).monicaCompatibility || 0) * 100)}%\n                    </div>\n                    <div className=\"text-xs text-gray-600\">Monica Compatibility</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-semibold text-blue-600\">\n                      {((selectedCuisineData as any).userMonica || 1.0).toFixed(2)}\n                    </div>\n                    <div className=\"text-xs text-gray-600\">Your Monica Constant</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-semibold text-green-600\">\n                      {((selectedCuisineData as any).cuisineMonica || 1.0).toFixed(2)}\n                    </div>\n                    <div className=\"text-xs text-gray-600\">Cuisine Monica</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-semibold text-orange-600\">\n                      {Math.abs(((selectedCuisineData as any).userMonica || 1.0) - ((selectedCuisineData as any).cuisineMonica || 1.0)) < 0.5 ? 'High' : 'Medium'}\n                    </div>\n                    <div className=\"text-xs text-gray-600\">Harmony Level</div>\n                  </div>\n                </div>\n                <div className=\"mt-3 text-xs text-gray-600\">\n                  Monica constants measure alchemical transformation potential. Closer values indicate better compatibility.\n                </div>\n              </div>\n            )}\n\n            {/* Enhanced Thermodynamic Metrics Display */}\n            {(selectedCuisineData as any).enhancedAnalysis && (\n              <div className=\"mb-4 bg-gradient-to-r from-green-50 to-teal-50 p-4 rounded-lg border\">\n                <h4 className=\"text-sm font-medium mb-3 flex items-center\">\n                  <Star size={16} className=\"text-green-500 mr-2\" />\n                  Enhanced Thermodynamic Analysis\n                </h4>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3 mb-3\">\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-semibold text-green-600\">\n                      {Math.round(((selectedCuisineData as any).thermodynamicHarmony || 0) * 100)}%\n                    </div>\n                    <div className=\"text-xs text-gray-600\">Thermodynamic Harmony</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-semibold text-teal-600\">\n                      {Math.round(((selectedCuisineData as any).alchemicalBalance || 0) * 100)}%\n                    </div>\n                    <div className=\"text-xs text-gray-600\">Alchemical Balance</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-semibold text-blue-600\">\n                      {((selectedCuisineData as any).enhancedAnalysis.thermodynamicMetrics.kalchm || 1.0).toFixed(2)}\n                    </div>\n                    <div className=\"text-xs text-gray-600\">Kalchm Constant</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-semibold text-purple-600\">\n                      {((selectedCuisineData as any).enhancedAnalysis.thermodynamicMetrics.gregsEnergy || 0).toFixed(2)}\n                    </div>\n                    <div className=\"text-xs text-gray-600\">Greg's Energy</div>\n                  </div>\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\n                  <div className=\"bg-white p-3 rounded border\">\n                    <h5 className=\"text-sm font-medium mb-2\">Heat Efficiency</h5>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">{((selectedCuisineData as any).enhancedAnalysis.thermodynamicMetrics.heat || 0).toFixed(3)}</span>\n                      <div className=\"w-16 bg-gray-200 rounded-full h-2\">\n                        <div \n                          className=\"h-2 rounded-full bg-red-500\" \n                          style={{ width: `${Math.min(100, Math.max(0, ((selectedCuisineData as any).enhancedAnalysis.thermodynamicMetrics.heat || 0) * 100))}%` }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-white p-3 rounded border\">\n                    <h5 className=\"text-sm font-medium mb-2\">Entropy Balance</h5>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">{((selectedCuisineData as any).enhancedAnalysis.thermodynamicMetrics.entropy || 0).toFixed(3)}</span>\n                      <div className=\"w-16 bg-gray-200 rounded-full h-2\">\n                        <div \n                          className=\"h-2 rounded-full bg-yellow-500\" \n                          style={{ width: `${Math.min(100, Math.max(0, ((selectedCuisineData as any).enhancedAnalysis.thermodynamicMetrics.entropy || 0) * 50))}%` }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-white p-3 rounded border\">\n                    <h5 className=\"text-sm font-medium mb-2\">Reactivity</h5>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">{((selectedCuisineData as any).enhancedAnalysis.thermodynamicMetrics.reactivity || 0).toFixed(3)}</span>\n                      <div className=\"w-16 bg-gray-200 rounded-full h-2\">\n                        <div \n                          className=\"h-2 rounded-full bg-orange-500\" \n                          style={{ width: `${Math.min(100, Math.max(0, ((selectedCuisineData as any).enhancedAnalysis.thermodynamicMetrics.reactivity || 0) * 50))}%` }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"mt-3 text-xs text-gray-600\">\n                  Enhanced thermodynamic analysis integrates heat efficiency, entropy balance, and reactivity for optimal culinary recommendations.\n                </div>\n              </div>\n            )}\n\n            {/* Alchemical Properties Display */}\n            {(selectedCuisineData as any).enhancedAnalysis?.alchemicalProperties && (\n              <div className=\"mb-4 bg-gradient-to-r from-yellow-50 to-amber-50 p-4 rounded-lg border\">\n                <h4 className=\"text-sm font-medium mb-3 flex items-center\">\n                  <Sparkles size={16} className=\"text-yellow-500 mr-2\" />\n                  Alchemical Properties Balance\n                </h4>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n                  {Object.entries((selectedCuisineData as any).enhancedAnalysis.alchemicalProperties).map(([property, value]) => (\n                    <div key={property} className=\"text-center\">\n                      <div className=\"text-lg font-semibold text-amber-600\">\n                        {(Number(value) || 0).toFixed(2)}\n                      </div>\n                      <div className=\"text-xs text-gray-600\">{property}</div>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2 mt-1\">\n                        <div \n                          className=\"h-2 rounded-full bg-amber-500\" \n                          style={{ width: `${Math.min(100, Math.max(0, (Number(value) || 0) * 100))}%` }}\n                        ></div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"mt-3 text-xs text-gray-600\">\n                  Alchemical balance optimization contributes 10% weight to the enhanced 7-factor scoring algorithm.\n                </div>\n              </div>\n            )}\n\n            {/* Cultural Analytics and Intelligence Section */}\n            {culturalAnalytics[selectedCuisineData.id] && (\n              <div className=\"mb-4 bg-gradient-to-r from-amber-50 to-orange-50 p-4 rounded-lg border\">\n                <div className=\"flex justify-between items-center mb-3\">\n                  <h4 className=\"text-sm font-medium flex items-center\">\n                    <Star size={16} className=\"text-amber-500 mr-2\" />\n                    Cultural Analytics & Intelligence\n                  </h4>\n                  <button\n                    onClick={() => setShowCulturalAnalytics(!showCulturalAnalytics)}\n                    className=\"text-xs px-2 py-1 bg-amber-100 hover:bg-amber-200 rounded transition-colors\"\n                  >\n                    {showCulturalAnalytics ? 'Hide Details' : 'Show Details'}\n                  </button>\n                </div>\n                \n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3 mb-3\">\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-semibold text-amber-600\">\n                      {Math.round(culturalAnalytics[selectedCuisineData.id].culturalSynergy * 100)}%\n                    </div>\n                    <div className=\"text-xs text-gray-600\">Cultural Synergy</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-semibold text-orange-600\">\n                      {Math.round(culturalAnalytics[selectedCuisineData.id].culturalCompatibility * 100)}%\n                    </div>\n                    <div className=\"text-xs text-gray-600\">Astrological Compatibility</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-semibold text-yellow-600\">\n                      {Math.round(culturalAnalytics[selectedCuisineData.id].fusionPotential * 100)}%\n                    </div>\n                    <div className=\"text-xs text-gray-600\">Fusion Potential</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-semibold text-red-600\">\n                      {Math.round(culturalAnalytics[selectedCuisineData.id].culturalDiversityScore * 100)}%\n                    </div>\n                    <div className=\"text-xs text-gray-600\">Cultural Diversity</div>\n                  </div>\n                </div>\n                \n                {showCulturalAnalytics && (\n                  <div className=\"space-y-3 mt-4\">\n                    <div className=\"bg-white p-3 rounded border\">\n                      <h5 className=\"text-sm font-medium mb-2\">Historical Significance</h5>\n                      <p className=\"text-xs text-gray-700\">{culturalAnalytics[selectedCuisineData.id].historicalSignificance}</p>\n                    </div>\n                    \n                    <div className=\"bg-white p-3 rounded border\">\n                      <h5 className=\"text-sm font-medium mb-2\">Cultural Context</h5>\n                      <p className=\"text-xs text-gray-700\">{culturalAnalytics[selectedCuisineData.id].culturalContext}</p>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                      <div className=\"bg-white p-3 rounded border\">\n                        <h5 className=\"text-sm font-medium mb-2\">Traditional Principles</h5>\n                        <ul className=\"list-disc pl-4 text-xs text-gray-700\">\n                          {culturalAnalytics[selectedCuisineData.id].traditionalPrinciples.slice(0, 3).map((principle, i) => (\n                            <li key={i}>{principle}</li>\n                          ))}\n                        </ul>\n                      </div>\n                      \n                      <div className=\"bg-white p-3 rounded border\">\n                        <h5 className=\"text-sm font-medium mb-2\">Modern Adaptations</h5>\n                        <ul className=\"list-disc pl-4 text-xs text-gray-700\">\n                          {culturalAnalytics[selectedCuisineData.id].modernAdaptations.slice(0, 3).map((adaptation, i) => (\n                            <li key={i}>{adaptation}</li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                \n                <div className=\"mt-3 text-xs text-gray-600\">\n                  Cultural synergy contributes 5% weight to the 7-factor recommendation algorithm.\n                </div>\n              </div>\n            )}\n\n            {/* Fusion Cuisine Recommendations */}\n            {fusionRecommendations.length > 0 && (\n              <div className=\"mb-4 bg-gradient-to-r from-indigo-50 to-purple-50 p-4 rounded-lg border\">\n                <div className=\"flex justify-between items-center mb-3\">\n                  <h4 className=\"text-sm font-medium flex items-center\">\n                    <Sparkles size={16} className=\"text-indigo-500 mr-2\" />\n                    Fusion Cuisine Recommendations\n                  </h4>\n                  <button\n                    onClick={() => setShowFusionRecommendations(!showFusionRecommendations)}\n                    className=\"text-xs px-2 py-1 bg-indigo-100 hover:bg-indigo-200 rounded transition-colors\"\n                  >\n                    {showFusionRecommendations ? 'Hide Fusion' : 'Show Fusion'}\n                  </button>\n                </div>\n                \n                {showFusionRecommendations && (\n                  <div className=\"space-y-3\">\n                    {fusionRecommendations.map((fusion, index) => (\n                      <div key={index} className=\"bg-white p-3 rounded border\">\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <h5 className=\"text-sm font-medium\">{fusion.name}</h5>\n                          <div className=\"flex space-x-2\">\n                            <span className=\"text-xs px-2 py-1 bg-indigo-100 rounded\">\n                              {Math.round(fusion.fusionScore * 100)}% Fusion\n                            </span>\n                            <span className=\"text-xs px-2 py-1 bg-purple-100 rounded\">\n                              {Math.round(fusion.culturalHarmony * 100)}% Harmony\n                            </span>\n                          </div>\n                        </div>\n                        \n                        <p className=\"text-xs text-gray-600 mb-2\">\n                          Blend of {fusion.parentCuisines.join(' and ')} cuisines\n                        </p>\n                        \n                        <div className=\"mb-2\">\n                          <h6 className=\"text-xs font-medium mb-1\">Recommended Dishes:</h6>\n                          <div className=\"flex flex-wrap gap-1\">\n                            {fusion.recommendedDishes.map((dish, i) => (\n                              <span key={i} className=\"text-xs px-2 py-1 bg-gray-100 rounded\">\n                                {dish}\n                              </span>\n                            ))}\n                          </div>\n                        </div>\n                        \n                        <div className=\"text-xs text-gray-700\">\n                          <p>{fusion.culturalNotes[0]}</p>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n                \n                <div className=\"mt-3 text-xs text-gray-600\">\n                  Fusion recommendations based on cultural compatibility and culinary harmony analysis.\n                </div>\n              </div>\n            )}\n            \n            {/* Enhanced Recipe Recommendations */}\n            <div className=\"mt-4\">\n              <RecipeRecommendations\n                recipes={matchingRecipes}\n                cuisineName={selectedCuisineData.name}\n                currentElementalProfile={currentMomentElementalProfile}\n                maxDisplayed={6}\n                onRecipeSelect={(recipe) => {\n                  logger.info('Recipe selected:', recipe.name);\n                  setSelectedRecipe(recipe);\n                }}\n              />\n            </div>\n\n            {/* Recipe-Specific Sauce Recommendations */}\n            {selectedRecipe && (\n              <div className=\"mt-6 pt-4 border-t border-gray-200\">\n                <SauceRecommendations\n                  sauces={sauceRecommendations}\n                  cuisineName={selectedCuisineData.name}\n                  selectedRecipe={selectedRecipe}\n                  currentElementalProfile={currentMomentElementalProfile}\n                  currentZodiac={currentZodiac}\n                  lunarPhase={lunarPhase}\n                  currentSeason={getCurrentSeason()}\n                  maxDisplayed={4}\n                  onSauceSelect={(sauce) => {\n                    logger.info('Sauce selected for recipe:', sauce.name, 'with', selectedRecipe.name);\n                    // Future: Add sauce-recipe pairing logic here\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </CuisineRecommenderErrorBoundary>\n  );\n}"],"version":3}