{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/utils/errorHandling.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/utils/errorHandling.ts"],"sourcesContent":["import React from 'react';\nimport { logger } from '@/utils/logger';\nimport ErrorBoundary from '@/components/error-boundaries/ErrorBoundary';\n\n// Error types for better categorization\nexport enum ErrorType {\n  NETWORK = 'NETWORK',\n  VALIDATION = 'VALIDATION',\n  AUTHENTICATION = 'AUTHENTICATION',\n  AUTHORIZATION = 'AUTHORIZATION',\n  NOT_FOUND = 'NOT_FOUND',\n  SERVER_ERROR = 'SERVER_ERROR',\n  CLIENT_ERROR = 'CLIENT_ERROR',\n  ASTROLOGICAL_CALCULATION = 'ASTROLOGICAL_CALCULATION',\n  DATA_PROCESSING = 'DATA_PROCESSING',\n  COMPONENT_ERROR = 'COMPONENT_ERROR',\n  UNKNOWN = 'UNKNOWN'\n}\n\n// Error severity levels\nexport enum ErrorSeverity {\n  LOW = 'LOW',\n  MEDIUM = 'MEDIUM',\n  HIGH = 'HIGH',\n  CRITICAL = 'CRITICAL'\n}\n\n// Enhanced error interface\nexport interface EnhancedError extends Error {\n  type: ErrorType;\n  severity: ErrorSeverity;\n  context?: Record<string, any>;\n  userMessage?: string;\n  recoverable?: boolean;\n  retryable?: boolean;\n  timestamp: Date;\n  errorId: string;\n}\n\n// Error recovery strategies\nexport interface ErrorRecoveryStrategy {\n  canRecover: (error: EnhancedError) => boolean;\n  recover: (error: EnhancedError) => Promise<any> | any;\n  fallback?: () => any;\n}\n\n// User-friendly error messages\nconst USER_FRIENDLY_MESSAGES: Record<ErrorType, string> = {\n  [ErrorType.NETWORK]: 'Unable to connect to the server. Please check your internet connection and try again.',\n  [ErrorType.VALIDATION]: 'Please check your input and try again.',\n  [ErrorType.AUTHENTICATION]: 'Please log in to continue.',\n  [ErrorType.AUTHORIZATION]: 'You don\\'t have permission to access this resource.',\n  [ErrorType.NOT_FOUND]: 'The requested information could not be found.',\n  [ErrorType.SERVER_ERROR]: 'A server error occurred. Please try again later.',\n  [ErrorType.CLIENT_ERROR]: 'An error occurred while processing your request.',\n  [ErrorType.ASTROLOGICAL_CALCULATION]: 'Unable to calculate astrological data. Using cached information.',\n  [ErrorType.DATA_PROCESSING]: 'Error processing data. Please try again.',\n  [ErrorType.COMPONENT_ERROR]: 'A component failed to load. Please refresh the page.',\n  [ErrorType.UNKNOWN]: 'An unexpected error occurred. Please try again.'\n};\n\n// Create enhanced error\nexport function createEnhancedError(\n  message: string,\n  type: ErrorType = ErrorType.UNKNOWN,\n  severity: ErrorSeverity = ErrorSeverity.MEDIUM,\n  context?: Record<string, any>,\n  originalError?: Error\n): EnhancedError {\n  const error = new Error(message) as EnhancedError;\n  \n  error.type = type;\n  error.severity = severity;\n  error.context = context;\n  error.userMessage = USER_FRIENDLY_MESSAGES[type];\n  error.recoverable = isRecoverable(type);\n  error.retryable = isRetryable(type);\n  error.timestamp = new Date();\n  error.errorId = `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  \n  // Preserve original error stack if available\n  if (originalError) {\n    error.stack = originalError.stack;\n    error.cause = originalError;\n  }\n  \n  return error;\n}\n\n// Determine if error is recoverable\nfunction isRecoverable(type: ErrorType): boolean {\n  return [\n    ErrorType.NETWORK,\n    ErrorType.ASTROLOGICAL_CALCULATION,\n    ErrorType.DATA_PROCESSING,\n    ErrorType.COMPONENT_ERROR\n  ].includes(type);\n}\n\n// Determine if error is retryable\nfunction isRetryable(type: ErrorType): boolean {\n  return [\n    ErrorType.NETWORK,\n    ErrorType.SERVER_ERROR,\n    ErrorType.ASTROLOGICAL_CALCULATION,\n    ErrorType.DATA_PROCESSING\n  ].includes(type);\n}\n\n// Error classification based on error message or type\nexport function classifyError(error: Error | string): ErrorType {\n  const message = typeof error === 'string' ? error : error.message;\n  const lowerMessage = message.toLowerCase();\n  \n  if (lowerMessage.includes('network') || lowerMessage.includes('fetch') || lowerMessage.includes('connection')) {\n    return ErrorType.NETWORK;\n  }\n  \n  if (lowerMessage.includes('validation') || lowerMessage.includes('invalid')) {\n    return ErrorType.VALIDATION;\n  }\n  \n  if (lowerMessage.includes('unauthorized') || lowerMessage.includes('authentication')) {\n    return ErrorType.AUTHENTICATION;\n  }\n  \n  if (lowerMessage.includes('forbidden') || lowerMessage.includes('permission')) {\n    return ErrorType.AUTHORIZATION;\n  }\n  \n  if (lowerMessage.includes('not found') || lowerMessage.includes('404')) {\n    return ErrorType.NOT_FOUND;\n  }\n  \n  if (lowerMessage.includes('server') || lowerMessage.includes('500') || lowerMessage.includes('503')) {\n    return ErrorType.SERVER_ERROR;\n  }\n  \n  if (lowerMessage.includes('planetary') || lowerMessage.includes('astrological') || lowerMessage.includes('zodiac')) {\n    return ErrorType.ASTROLOGICAL_CALCULATION;\n  }\n  \n  if (lowerMessage.includes('component') || lowerMessage.includes('render')) {\n    return ErrorType.COMPONENT_ERROR;\n  }\n  \n  return ErrorType.UNKNOWN;\n}\n\n// Error handler class\nexport class ErrorHandler {\n  private recoveryStrategies: ErrorRecoveryStrategy[] = [];\n  private errorQueue: EnhancedError[] = [];\n  private maxQueueSize = 50;\n\n  // Add recovery strategy\n  addRecoveryStrategy(strategy: ErrorRecoveryStrategy) {\n    this.recoveryStrategies.push(strategy);\n  }\n\n  // Handle error with recovery attempts\n  async handleError(error: Error | EnhancedError, context?: Record<string, any>): Promise<any> {\n    let enhancedError: EnhancedError;\n    \n    if ('type' in error && 'severity' in error) {\n      enhancedError = error as EnhancedError;\n    } else {\n      const type = classifyError(error);\n      const severity = this.determineSeverity(type);\n      enhancedError = createEnhancedError(error.message, type, severity, context, error);\n    }\n\n    // Log the error\n    this.logError(enhancedError);\n    \n    // Add to error queue\n    this.addToQueue(enhancedError);\n    \n    // Attempt recovery\n    const recoveryResult = await this.attemptRecovery(enhancedError);\n    \n    if (recoveryResult.success) {\n      logger.info(`Error recovered successfully: ${enhancedError.errorId}`);\n      return recoveryResult.data;\n    }\n    \n    // If recovery failed, throw the enhanced error\n    throw enhancedError;\n  }\n\n  // Attempt error recovery\n  private async attemptRecovery(error: EnhancedError): Promise<{ success: boolean; data?: any }> {\n    for (const strategy of this.recoveryStrategies) {\n      if (strategy.canRecover(error)) {\n        try {\n          const result = await strategy.recover(error);\n          return { success: true, data: result };\n        } catch (recoveryError) {\n          logger.warn(`Recovery strategy failed for error ${error.errorId}:`, recoveryError);\n          \n          // Try fallback if available\n          if (strategy.fallback) {\n            try {\n              const fallbackResult = strategy.fallback();\n              return { success: true, data: fallbackResult };\n            } catch (fallbackError) {\n              logger.warn(`Fallback strategy failed for error ${error.errorId}:`, fallbackError);\n            }\n          }\n        }\n      }\n    }\n    \n    return { success: false };\n  }\n\n  // Determine error severity\n  private determineSeverity(type: ErrorType): ErrorSeverity {\n    switch (type) {\n      case ErrorType.AUTHENTICATION:\n      case ErrorType.AUTHORIZATION:\n        return ErrorSeverity.HIGH;\n      \n      case ErrorType.SERVER_ERROR:\n        return ErrorSeverity.HIGH;\n      \n      case ErrorType.NETWORK:\n      case ErrorType.ASTROLOGICAL_CALCULATION:\n        return ErrorSeverity.MEDIUM;\n      \n      case ErrorType.VALIDATION:\n      case ErrorType.NOT_FOUND:\n        return ErrorSeverity.LOW;\n      \n      default:\n        return ErrorSeverity.MEDIUM;\n    }\n  }\n\n  // Log error with appropriate level\n  private logError(error: EnhancedError) {\n    const logData = {\n      errorId: error.errorId,\n      type: error.type,\n      severity: error.severity,\n      message: error.message,\n      userMessage: error.userMessage,\n      context: error.context,\n      timestamp: error.timestamp,\n      stack: error.stack\n    };\n\n    switch (error.severity) {\n      case ErrorSeverity.CRITICAL:\n      case ErrorSeverity.HIGH:\n        logger.error('High severity error:', logData);\n        break;\n      \n      case ErrorSeverity.MEDIUM:\n        logger.warn('Medium severity error:', logData);\n        break;\n      \n      case ErrorSeverity.LOW:\n        logger.info('Low severity error:', logData);\n        break;\n    }\n  }\n\n  // Add error to queue for analysis\n  private addToQueue(error: EnhancedError) {\n    this.errorQueue.push(error);\n    \n    // Maintain queue size\n    if (this.errorQueue.length > this.maxQueueSize) {\n      this.errorQueue.shift();\n    }\n  }\n\n  // Get error statistics\n  getErrorStats(): {\n    total: number;\n    byType: Record<ErrorType, number>;\n    bySeverity: Record<ErrorSeverity, number>;\n    recent: EnhancedError[];\n  } {\n    const byType = {} as Record<ErrorType, number>;\n    const bySeverity = {} as Record<ErrorSeverity, number>;\n    \n    this.errorQueue.forEach(error => {\n      byType[error.type] = (byType[error.type] || 0) + 1;\n      bySeverity[error.severity] = (bySeverity[error.severity] || 0) + 1;\n    });\n    \n    return {\n      total: this.errorQueue.length,\n      byType,\n      bySeverity,\n      recent: this.errorQueue.slice(-10) // Last 10 errors\n    };\n  }\n\n  // Clear error queue\n  clearErrorQueue() {\n    this.errorQueue = [];\n  }\n}\n\n// Global error handler instance\nexport const globalErrorHandler = new ErrorHandler();\n\n// Default recovery strategies\nglobalErrorHandler.addRecoveryStrategy({\n  canRecover: (error) => error.type === ErrorType.ASTROLOGICAL_CALCULATION,\n  recover: async (error) => {\n    logger.info(`Attempting to recover from astrological calculation error: ${error.errorId}`);\n    // Return cached astrological data\n    const cachedData = localStorage.getItem('cachedAstrologicalData');\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n    throw new Error('No cached astrological data available');\n  },\n  fallback: () => {\n    // Return default astrological state\n    return {\n      zodiacSign: 'aries',\n      lunarPhase: 'new moon',\n      elementalState: { Fire: 0.25, Water: 0.25, Earth: 0.25, Air: 0.25 }\n    };\n  }\n});\n\nglobalErrorHandler.addRecoveryStrategy({\n  canRecover: (error) => error.type === ErrorType.NETWORK,\n  recover: async (error) => {\n    logger.info(`Attempting to recover from network error: ${error.errorId}`);\n    // Try to use cached data\n    const cacheKey = error.context?.cacheKey;\n    if (cacheKey) {\n      const cachedData = localStorage.getItem(cacheKey);\n      if (cachedData) {\n        return JSON.parse(cachedData);\n      }\n    }\n    throw new Error('No cached data available for network recovery');\n  }\n});\n\n// Utility functions for common error scenarios\nexport function handleAsyncError<T>(\n  promise: Promise<T>,\n  context?: Record<string, any>\n): Promise<T> {\n  return promise.catch(error => {\n    return globalErrorHandler.handleError(error, context);\n  });\n}\n\nexport function handleSyncError<T>(\n  fn: () => T,\n  context?: Record<string, any>\n): T {\n  try {\n    return fn();\n  } catch (error) {\n    throw globalErrorHandler.handleError(error as Error, context);\n  }\n}\n\n// React hook for error handling\nexport function useErrorHandler() {\n  const handleError = React.useCallback(async (error: Error, context?: Record<string, any>) => {\n    try {\n      return await globalErrorHandler.handleError(error, context);\n    } catch (enhancedError) {\n      // Re-throw enhanced error for component error boundaries to catch\n      throw enhancedError;\n    }\n  }, []);\n\n  const getErrorStats = React.useCallback(() => {\n    return globalErrorHandler.getErrorStats();\n  }, []);\n\n  return { handleError, getErrorStats };\n}\n\n// Error boundary helper for specific error types\nexport function createErrorBoundaryForType(errorType: ErrorType) {\n  return function ErrorBoundaryForType({ children }: { children: React.ReactNode }) {\n    return React.createElement(ErrorBoundary, {\n      fallback: (error: Error, errorInfo: React.ErrorInfo) => {\n        const enhancedError = createEnhancedError(\n          error.message,\n          errorType,\n          ErrorSeverity.MEDIUM,\n          { componentStack: errorInfo.componentStack }\n        );\n        \n        return React.createElement('div', {\n          className: \"bg-yellow-50 border border-yellow-200 rounded-lg p-4 m-2\"\n        }, [\n          React.createElement('h4', {\n            key: 'title',\n            className: \"text-yellow-800 font-medium mb-2\"\n          }, `${errorType} Error`),\n          React.createElement('p', {\n            key: 'message',\n            className: \"text-yellow-700 text-sm mb-3\"\n          }, enhancedError.userMessage),\n          React.createElement('button', {\n            key: 'button',\n            onClick: () => window.location.reload(),\n            className: \"bg-yellow-600 text-white px-3 py-1 rounded text-sm hover:bg-yellow-700 transition-colors\"\n          }, 'Reload Page')\n        ]);\n      }\n    }, children);\n  };\n}\n\nexport default ErrorHandler;"],"version":3}