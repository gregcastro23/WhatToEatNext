{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/__tests__/ProgressTracker.test.ts","mappings":";AAAA;;;GAGG;;;;;;;;;;;;;;;;;;;;;;;;;AAaH,oBAAoB;AACpB,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAbhB,iDAAyC;AACzC,uCAAyB;AAEzB,sDAKiC;AACjC,wDAAqD;AAMrD,MAAM,YAAY,GAAG,wBAAgD,CAAC;AACtE,MAAM,MAAM,GAAG,EAA4B,CAAC;AAE5C,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,IAAI,eAAgC,CAAC;IAErC,UAAU,CAAC,GAAG,EAAE;QACd,eAAe,GAAG,IAAI,iCAAe,EAAE,CAAC;QACxC,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,+BAA+B;QAC/B,YAAY,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACxC,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;QAC3B,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;YACtD,MAAM,OAAO,GAAG,eAAe,CAAC,iBAAiB,EAAE,CAAC;YACpD,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;YAClD,MAAM,UAAU,GAAI,eAAuB,CAAC,iBAAiB,CAAC;YAC9D,MAAM,CAAC,UAAU,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACvC,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YACzD,YAAY,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YAElC,MAAM,KAAK,GAAG,MAAM,eAAe,CAAC,uBAAuB,EAAE,CAAC;YAE9D,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,YAAY,CAAC,CAAC,oBAAoB,CACvC,4DAA4D,EAC5D,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CACnB,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;YACpD,YAAY,CAAC,kBAAkB,CAAC,GAAG,EAAE;gBACnC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,kBAAkB,CAAQ,CAAC;gBACnD,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,iCAAiC;gBACnD,MAAM,KAAK,CAAC;YACd,CAAC,CAAC,CAAC;YAEH,MAAM,KAAK,GAAG,MAAM,eAAe,CAAC,uBAAuB,EAAE,CAAC;YAE9D,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,YAAY,CAAC,kBAAkB,CAAC,GAAG,EAAE;gBACnC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,gBAAgB,CAAQ,CAAC;gBACjD,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,cAAc;gBAChC,MAAM,KAAK,CAAC;YACd,CAAC,CAAC,CAAC;YAEH,MAAM,KAAK,GAAG,MAAM,eAAe,CAAC,uBAAuB,EAAE,CAAC;YAE9D,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC1C,YAAY,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;YAEjC,MAAM,KAAK,GAAG,MAAM,eAAe,CAAC,uBAAuB,EAAE,CAAC;YAE9D,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;QAC3C,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;YACrD,YAAY,CAAC,eAAe,CAAC;;;;;OAK5B,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,2BAA2B,EAAE,CAAC;YAEtE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;YAC7C,YAAY,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;YAEjC,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,2BAA2B,EAAE,CAAC;YAEtE,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;YACxD,YAAY,CAAC,kBAAkB,CAAC,GAAG,EAAE;gBACnC,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,2BAA2B,EAAE,CAAC;YAEtE,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;QACtC,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;YAC5D,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAEnC,MAAM,KAAK,GAAG,MAAM,eAAe,CAAC,sBAAsB,EAAE,CAAC;YAE7D,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACvB,MAAM,CAAC,YAAY,CAAC,CAAC,oBAAoB,CACvC,oCAAoC,EACpC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CACnB,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;YACtD,YAAY,CAAC,kBAAkB,CAAC,GAAG,EAAE;gBACnC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,kBAAkB,CAAQ,CAAC;gBACnD,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,iCAAiC;gBACnD,MAAM,KAAK,CAAC;YACd,CAAC,CAAC,CAAC;YAEH,MAAM,KAAK,GAAG,MAAM,eAAe,CAAC,sBAAsB,EAAE,CAAC;YAE7D,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,YAAY,CAAC,kBAAkB,CAAC,GAAG,EAAE;gBACnC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,gBAAgB,CAAQ,CAAC;gBACjD,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,cAAc;gBAChC,MAAM,KAAK,CAAC;YACd,CAAC,CAAC,CAAC;YAEH,MAAM,KAAK,GAAG,MAAM,eAAe,CAAC,sBAAsB,EAAE,CAAC;YAE7D,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;QAC1C,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;YAC5D,YAAY,CAAC,eAAe,CAAC;;;;;OAK5B,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,0BAA0B,EAAE,CAAC;YAErE,MAAM,CAAC,SAAS,CAAC,oCAAoC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChE,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;YAC7C,YAAY,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;YAEjC,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,0BAA0B,EAAE,CAAC;YAErE,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;YACxD,YAAY,CAAC,kBAAkB,CAAC,GAAG,EAAE;gBACnC,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,0BAA0B,EAAE,CAAC;YAErE,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;QAC5B,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;YACtD,wBAAwB;YACxB,YAAY,CAAC,kBAAkB,CAAC,GAAG,EAAE;gBACnC,kCAAkC;gBAClC,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,YAAY,EAAE,CAAC;YAEvD,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,YAAY,CAAC,CAAC,oBAAoB,CACvC,YAAY,EACZ,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CACnB,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;YACjD,YAAY,CAAC,kBAAkB,CAAC,GAAG,EAAE;gBACnC,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;YAEH,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,YAAY,EAAE,CAAC;YAEvD,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;QACxC,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;YACjD,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAEnC,MAAM,KAAK,GAAG,MAAM,eAAe,CAAC,wBAAwB,EAAE,CAAC;YAE/D,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACvB,MAAM,CAAC,YAAY,CAAC,CAAC,oBAAoB,CACvC,4CAA4C,EAC5C,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CACnB,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;YACrD,YAAY,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YAElC,MAAM,KAAK,GAAG,MAAM,eAAe,CAAC,wBAAwB,EAAE,CAAC;YAE/D,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;YACxD,YAAY,CAAC,kBAAkB,CAAC,GAAG,EAAE;gBACnC,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;YAEH,MAAM,KAAK,GAAG,MAAM,eAAe,CAAC,wBAAwB,EAAE,CAAC;YAE/D,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAC/B,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;YACjD,MAAM,IAAI,GAAG,MAAM,eAAe,CAAC,eAAe,EAAE,CAAC;YAErD,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;YAC/C,kCAAkC;YAClC,IAAI,CAAC,KAAK,CAAC,eAAsB,EAAE,iBAAiB,CAAC,CAAC,kBAAkB,CAAC,GAAG,EAAE;gBAC5E,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;YAEH,MAAM,IAAI,GAAG,MAAM,eAAe,CAAC,eAAe,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAEpE,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC9B,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;YAClD,MAAM,mBAAmB,GAAG,OAAO,CAAC,WAAW,CAAC;YAChD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC;gBAC9C,QAAQ,EAAE,EAAE,GAAG,IAAI,GAAG,IAAI;gBAC1B,SAAS,EAAE,GAAG,GAAG,IAAI,GAAG,IAAI;gBAC5B,QAAQ,EAAE,CAAC;gBACX,GAAG,EAAE,EAAE,GAAG,IAAI,GAAG,IAAI;gBACrB,YAAY,EAAE,CAAC;aAChB,CAAQ,CAAC;YAEV,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,cAAc,EAAE,CAAC;YAEtD,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAExB,OAAO,CAAC,WAAW,GAAG,mBAAmB,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;YACvD,MAAM,mBAAmB,GAAG,OAAO,CAAC,WAAW,CAAC;YAChD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAG,EAAE;gBACtD,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;YAC/C,CAAC,CAAQ,CAAC;YAEV,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,cAAc,EAAE,CAAC;YAEtD,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEvB,OAAO,CAAC,WAAW,GAAG,mBAAmB,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;YACnE,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC5C,OAAO,IAAI,KAAK,OAAO,IAAI,IAAI,KAAK,MAAM,CAAC;YAC7C,CAAC,CAAC,CAAC;YAEH,YAAY,CAAC,kBAAkB,CAAC,CAAC,OAAO,EAAE,EAAE;gBAC1C,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;oBAC/C,OAAO,KAAK,CAAC;iBACd;gBACD,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;oBAC9C,OAAO,KAAK,CAAC;iBACd;gBACD,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CAAC;YAEH,MAAM,IAAI,GAAG,MAAM,eAAe,CAAC,aAAa,EAAE,CAAC;YAEnD,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;YAC/D,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAEzC,MAAM,IAAI,GAAG,MAAM,eAAe,CAAC,aAAa,EAAE,CAAC;YAEnD,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;YACxD,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YACxC,YAAY,CAAC,kBAAkB,CAAC,GAAG,EAAE;gBACnC,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;YAEH,MAAM,IAAI,GAAG,MAAM,eAAe,CAAC,aAAa,EAAE,CAAC;YAEnD,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAClC,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,yBAAyB,CAAC,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;YAC7E,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,wBAAwB,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YAC9E,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,0BAA0B,CAAC,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YAC/E,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YACvE,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;YAC5D,MAAM,OAAO,GAAG,MAAM,eAAe,CAAC,kBAAkB,EAAE,CAAC;YAE3D,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAClD,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU;YAC/D,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB;YAEtE,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnD,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc;YACpE,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,oBAAoB;YAEzE,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACvD,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrD,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzD,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAEtD,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACpD,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnD,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;YAC/C,MAAM,eAAe,CAAC,kBAAkB,EAAE,CAAC;YAE3C,MAAM,OAAO,GAAG,eAAe,CAAC,iBAAiB,EAAE,CAAC;YACpD,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;YACrE,8BAA8B;YAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC5B,MAAM,eAAe,CAAC,kBAAkB,EAAE,CAAC;aAC5C;YAED,MAAM,OAAO,GAAG,eAAe,CAAC,iBAAiB,EAAE,CAAC;YACpD,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,0BAA0B;QAC7D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;YAC9D,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,yBAAyB,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7E,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,wBAAwB,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;YAE5E,MAAM,OAAO,GAAG,MAAM,eAAe,CAAC,kBAAkB,EAAE,CAAC;YAE3D,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACjC,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,oBAAoB,CAAC,CAAC,iBAAiB,CAAC;gBAClE,gBAAgB,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE;gBAC3E,eAAe,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE;gBAC5E,gBAAgB,EAAE,EAAE,WAAW,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,EAAE,EAAE,EAAE;gBAC3F,iBAAiB,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,kBAAkB,EAAE,GAAG,EAAE;aAC1E,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;YAChE,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,CAAC;YACjF,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;YAC/D,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,CAAC;YAChF,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;YAC9D,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,CAAC;YAC/E,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;YAChE,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,CAAC;YACjF,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;YAC3D,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;YAC3E,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;YAC3E,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;YAC3E,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;YAE3E,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;YAChE,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,oBAAoB,CAAC,CAAC,iBAAiB,CAAC;gBAClE,gBAAgB,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE;gBAC1E,eAAe,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;gBAC7E,gBAAgB,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE;gBACzF,iBAAiB,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,kBAAkB,EAAE,GAAG,EAAE;aAC1E,CAAC,CAAC;YAEH,MAAM,QAAQ,GAAG,MAAM,eAAe,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,CAAC;YACnF,MAAM,YAAY,GAAG,MAAM,eAAe,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,CAAC;YACtF,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,CAAC;YAClF,MAAM,UAAU,GAAG,MAAM,eAAe,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,CAAC;YAErF,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;YAChD,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,iBAAiB,CAAC,mBAAgC,CAAC,CAAC;YACzF,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;QACtC,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,oBAAoB,CAAC,CAAC,iBAAiB,CAAC;gBAClE,gBAAgB,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE;gBAC3E,eAAe,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;gBAC9E,gBAAgB,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE;gBACxF,iBAAiB,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,kBAAkB,EAAE,GAAG,EAAE;aAC1E,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;YAC7D,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,sBAAsB,EAAE,CAAC;YAE9D,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;YAC5D,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAClD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,CAAC;YAC5C,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE,CAAC;YAC3C,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;YAC3D,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,sBAAsB,EAAE,CAAC;YAE9D,2DAA2D;YAC3D,8DAA8D;YAC9D,0CAA0C;YAC1C,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;YACjE,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,sBAAsB,EAAE,CAAC;YAE9D,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC;YAC/D,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC;YAE/D,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,sBAAW,CAAC,WAAW,CAAC,CAAC;YACrD,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,sBAAW,CAAC,WAAW,CAAC,CAAC;YACrD,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,gCAAgC,CAAC,CAAC;YACnE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,iCAAiC,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;YAChE,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,oBAAoB,CAAC,CAAC,iBAAiB,CAAC;gBAClE,gBAAgB,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE;gBAC3E,eAAe,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE;gBAC5E,gBAAgB,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE;gBACxF,iBAAiB,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,kBAAkB,EAAE,GAAG,EAAE;aAC1E,CAAC,CAAC;YAEH,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,sBAAsB,EAAE,CAAC;YAE9D,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC;YAC/D,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC;YAE/D,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,sBAAW,CAAC,SAAS,CAAC,CAAC;YACnD,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,sBAAW,CAAC,SAAS,CAAC,CAAC;YACnD,MAAM,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,SAAS,CAAC,iCAAiC,CAAC,CAAC;YAC1E,MAAM,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,SAAS,CAAC,gCAAgC,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACrC,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;YACtD,sBAAsB;YACtB,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,oBAAoB,CAAC,CAAC,qBAAqB,CAAC;gBACtE,gBAAgB,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE;gBACzE,eAAe,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE;gBAC1E,gBAAgB,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE;gBACzF,iBAAiB,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,kBAAkB,EAAE,CAAC,EAAE;aACtE,CAAC,CAAC;YACH,MAAM,eAAe,CAAC,kBAAkB,EAAE,CAAC;YAE3C,uBAAuB;YACvB,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,oBAAoB,CAAC,CAAC,qBAAqB,CAAC;gBACtE,gBAAgB,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE;gBAC3E,eAAe,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;gBAC9E,gBAAgB,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE;gBACxF,iBAAiB,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,kBAAkB,EAAE,GAAG,EAAE;aAC1E,CAAC,CAAC;YACH,MAAM,eAAe,CAAC,kBAAkB,EAAE,CAAC;YAE3C,MAAM,WAAW,GAAG,eAAe,CAAC,qBAAqB,EAAE,CAAC;YAE5D,MAAM,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtD,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0DAA0D,EAAE,GAAG,EAAE;YAClE,MAAM,WAAW,GAAG,eAAe,CAAC,qBAAqB,EAAE,CAAC;YAE5D,MAAM,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,wBAAwB,CAAC,CAAC,iBAAiB,CAAC;gBACtE,UAAU,EAAE,2BAA2B;gBACvC,eAAe,EAAE,EAAE;gBACnB,MAAM,EAAE,EAAE;gBACV,cAAc,EAAE,EAAqB;gBACrC,aAAa,EAAE,EAAqB;gBACpC,mBAAmB,EAAE,IAAI,IAAI,EAAE;aAChC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;YAClD,MAAM,eAAe,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;YAEzD,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,oBAAoB,CAC/C,mBAAmB,EACnB,MAAM,CAAC,gBAAgB,CAAC,2CAA2C,CAAC,EACpE,SAAS,CACV,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;YAClD,MAAM,eAAe,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;YAEzD,MAAM,SAAS,GAAG,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACrD,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAW,CAAC,CAAC;YAEtD,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC;YAC3C,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;YAC3C,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,GAAG,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;YAEH,MAAM,MAAM,CAAC,eAAe,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAC9E,wCAAwC,CACzC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACnC,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;YAC5C,yBAAyB;YACzB,MAAM,eAAe,CAAC,kBAAkB,EAAE,CAAC;YAC3C,MAAM,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAE3D,eAAe,CAAC,mBAAmB,EAAE,CAAC;YAEtC,MAAM,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;YACrD,MAAM,WAAW,GAAI,eAAuB,CAAC,iBAAiB,CAAC;YAE/D,eAAe,CAAC,mBAAmB,EAAE,CAAC;YAEtC,MAAM,UAAU,GAAI,eAAuB,CAAC,iBAAiB,CAAC;YAC9D,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/__tests__/ProgressTracker.test.ts"],"sourcesContent":["/**\n * Unit Tests for ProgressTracker\n * Perfect Codebase Campaign - Progress Tracking Testing\n */\n\nimport { execSync } from 'child_process';\nimport * as fs from 'fs';\n\nimport {\n  ProgressMetrics,\n  Milestone,\n  ProgressReport,\n  PhaseStatus\n} from '../../../types/campaign';\nimport { ProgressTracker } from '../ProgressTracker';\n\n// Mock dependencies\njest.mock('child_process');\njest.mock('fs');\n\nconst mockExecSync = execSync as jest.MockedFunction<typeof execSync>;\nconst mockFs = fs as jest.Mocked<typeof fs>;\n\ndescribe('ProgressTracker', () => {\n  let progressTracker: ProgressTracker;\n\n  beforeEach(() => {\n    progressTracker = new ProgressTracker();\n    jest.clearAllMocks();\n    \n    // Default mock implementations\n    mockExecSync.mockReturnValue('');\n    mockFs.existsSync.mockReturnValue(true);\n    mockFs.writeFileSync.mockImplementation(() => {});\n  });\n\n  describe('Constructor', () => {\n    it('should initialize with empty metrics history', () => {\n      const history = progressTracker.getMetricsHistory();\n      expect(history).toEqual([]);\n    });\n\n    it('should initialize with current timestamp', () => {\n      const lastUpdate = (progressTracker as any).lastMetricsUpdate;\n      expect(lastUpdate).toBeInstanceOf(Date);\n    });\n  });\n\n  describe('getTypeScriptErrorCount', () => {\n    it('should return error count from tsc output', async () => {\n      mockExecSync.mockReturnValue('5');\n\n      const count = await progressTracker.getTypeScriptErrorCount();\n\n      expect(count).toBe(5);\n      expect(mockExecSync).toHaveBeenCalledWith(\n        'yarn tsc --noEmit --skipLibCheck 2>&1 | grep -c \"error TS\"',\n        expect.any(Object)\n      );\n    });\n\n    it('should return 0 when no errors found', async () => {\n      mockExecSync.mockImplementation(() => {\n        const error = new Error('No matches found') as any;\n        error.status = 1; // grep returns 1 when no matches\n        throw error;\n      });\n\n      const count = await progressTracker.getTypeScriptErrorCount();\n\n      expect(count).toBe(0);\n    });\n\n    it('should return -1 on command failure', async () => {\n      mockExecSync.mockImplementation(() => {\n        const error = new Error('Command failed') as any;\n        error.status = 2; // Other error\n        throw error;\n      });\n\n      const count = await progressTracker.getTypeScriptErrorCount();\n\n      expect(count).toBe(-1);\n    });\n\n    it('should handle empty output', async () => {\n      mockExecSync.mockReturnValue('');\n\n      const count = await progressTracker.getTypeScriptErrorCount();\n\n      expect(count).toBe(0);\n    });\n  });\n\n  describe('getTypeScriptErrorBreakdown', () => {\n    it('should return error breakdown by type', async () => {\n      mockExecSync.mockReturnValue(`\n        15 TS2352\n        10 TS2345\n         5 TS2698\n         3 TS2304\n      `);\n\n      const breakdown = await progressTracker.getTypeScriptErrorBreakdown();\n\n      expect(breakdown['TS2352']).toBe(15);\n      expect(breakdown['TS2345']).toBe(10);\n      expect(breakdown['TS2698']).toBe(5);\n      expect(breakdown['TS2304']).toBe(3);\n    });\n\n    it('should handle empty breakdown', async () => {\n      mockExecSync.mockReturnValue('');\n\n      const breakdown = await progressTracker.getTypeScriptErrorBreakdown();\n\n      expect(breakdown).toEqual({});\n    });\n\n    it('should handle command failure gracefully', async () => {\n      mockExecSync.mockImplementation(() => {\n        throw new Error('Command failed');\n      });\n\n      const breakdown = await progressTracker.getTypeScriptErrorBreakdown();\n\n      expect(breakdown).toEqual({});\n    });\n  });\n\n  describe('getLintingWarningCount', () => {\n    it('should return warning count from lint output', async () => {\n      mockExecSync.mockReturnValue('42');\n\n      const count = await progressTracker.getLintingWarningCount();\n\n      expect(count).toBe(42);\n      expect(mockExecSync).toHaveBeenCalledWith(\n        'yarn lint 2>&1 | grep -c \"warning\"',\n        expect.any(Object)\n      );\n    });\n\n    it('should return 0 when no warnings found', async () => {\n      mockExecSync.mockImplementation(() => {\n        const error = new Error('No matches found') as any;\n        error.status = 1; // grep returns 1 when no matches\n        throw error;\n      });\n\n      const count = await progressTracker.getLintingWarningCount();\n\n      expect(count).toBe(0);\n    });\n\n    it('should return -1 on command failure', async () => {\n      mockExecSync.mockImplementation(() => {\n        const error = new Error('Command failed') as any;\n        error.status = 2; // Other error\n        throw error;\n      });\n\n      const count = await progressTracker.getLintingWarningCount();\n\n      expect(count).toBe(-1);\n    });\n  });\n\n  describe('getLintingWarningBreakdown', () => {\n    it('should return warning breakdown by rule type', async () => {\n      mockExecSync.mockReturnValue(`\n        file1.ts:10:5 - warning: Unexpected any @typescript-eslint/no-explicit-any\n        file2.ts:15:10 - warning: Unused variable no-unused-vars\n        file3.ts:20:1 - warning: Console statement no-console\n        file4.ts:25:3 - warning: Another any @typescript-eslint/no-explicit-any\n      `);\n\n      const breakdown = await progressTracker.getLintingWarningBreakdown();\n\n      expect(breakdown['@typescript-eslint/no-explicit-any']).toBe(2);\n      expect(breakdown['no-unused-vars']).toBe(1);\n      expect(breakdown['no-console']).toBe(1);\n    });\n\n    it('should handle empty breakdown', async () => {\n      mockExecSync.mockReturnValue('');\n\n      const breakdown = await progressTracker.getLintingWarningBreakdown();\n\n      expect(breakdown).toEqual({});\n    });\n\n    it('should handle command failure gracefully', async () => {\n      mockExecSync.mockImplementation(() => {\n        throw new Error('Command failed');\n      });\n\n      const breakdown = await progressTracker.getLintingWarningBreakdown();\n\n      expect(breakdown).toEqual({});\n    });\n  });\n\n  describe('getBuildTime', () => {\n    it('should measure build time successfully', async () => {\n      // Mock successful build\n      mockExecSync.mockImplementation(() => {\n        // Simulate build taking some time\n        return '';\n      });\n\n      const buildTime = await progressTracker.getBuildTime();\n\n      expect(buildTime).toBeGreaterThan(0);\n      expect(mockExecSync).toHaveBeenCalledWith(\n        'yarn build',\n        expect.any(Object)\n      );\n    });\n\n    it('should return -1 on build failure', async () => {\n      mockExecSync.mockImplementation(() => {\n        throw new Error('Build failed');\n      });\n\n      const buildTime = await progressTracker.getBuildTime();\n\n      expect(buildTime).toBe(-1);\n    });\n  });\n\n  describe('getEnterpriseSystemCount', () => {\n    it('should count intelligence systems', async () => {\n      mockExecSync.mockReturnValue('25');\n\n      const count = await progressTracker.getEnterpriseSystemCount();\n\n      expect(count).toBe(25);\n      expect(mockExecSync).toHaveBeenCalledWith(\n        'grep -r \"INTELLIGENCE_SYSTEM\" src/ | wc -l',\n        expect.any(Object)\n      );\n    });\n\n    it('should return 0 when no systems found', async () => {\n      mockExecSync.mockReturnValue('0');\n\n      const count = await progressTracker.getEnterpriseSystemCount();\n\n      expect(count).toBe(0);\n    });\n\n    it('should handle command failure gracefully', async () => {\n      mockExecSync.mockImplementation(() => {\n        throw new Error('Command failed');\n      });\n\n      const count = await progressTracker.getEnterpriseSystemCount();\n\n      expect(count).toBe(0);\n    });\n  });\n\n  describe('getCacheHitRate', () => {\n    it('should return mock cache hit rate', async () => {\n      const rate = await progressTracker.getCacheHitRate();\n\n      expect(rate).toBe(0.8);\n    });\n\n    it('should handle errors gracefully', async () => {\n      // Mock implementation that throws\n      jest.spyOn(progressTracker as any, 'getCacheHitRate').mockImplementation(() => {\n        throw new Error('Cache measurement failed');\n      });\n\n      const rate = await progressTracker.getCacheHitRate().catch(() => 0);\n\n      expect(rate).toBe(0);\n    });\n  });\n\n  describe('getMemoryUsage', () => {\n    it('should return current memory usage', async () => {\n      const originalMemoryUsage = process.memoryUsage;\n      process.memoryUsage = jest.fn().mockReturnValue({\n        heapUsed: 50 * 1024 * 1024, // 50MB\n        heapTotal: 100 * 1024 * 1024,\n        external: 0,\n        rss: 60 * 1024 * 1024,\n        arrayBuffers: 0\n      }) as any;\n\n      const memory = await progressTracker.getMemoryUsage();\n\n      expect(memory).toBe(50);\n\n      process.memoryUsage = originalMemoryUsage;\n    });\n\n    it('should handle memory measurement errors', async () => {\n      const originalMemoryUsage = process.memoryUsage;\n      process.memoryUsage = jest.fn().mockImplementation(() => {\n        throw new Error('Memory measurement failed');\n      }) as any;\n\n      const memory = await progressTracker.getMemoryUsage();\n\n      expect(memory).toBe(0);\n\n      process.memoryUsage = originalMemoryUsage;\n    });\n  });\n\n  describe('getBundleSize', () => {\n    it('should calculate bundle size from build directories', async () => {\n      mockFs.existsSync.mockImplementation((path) => {\n        return path === '.next' || path === 'dist';\n      });\n      \n      mockExecSync.mockImplementation((command) => {\n        if (command.toString().includes('du -sk .next')) {\n          return '300';\n        }\n        if (command.toString().includes('du -sk dist')) {\n          return '120';\n        }\n        return '';\n      });\n\n      const size = await progressTracker.getBundleSize();\n\n      expect(size).toBe(420); // 300 + 120\n    });\n\n    it('should return 0 when no build directories exist', async () => {\n      mockFs.existsSync.mockReturnValue(false);\n\n      const size = await progressTracker.getBundleSize();\n\n      expect(size).toBe(0);\n    });\n\n    it('should handle command failure gracefully', async () => {\n      mockFs.existsSync.mockReturnValue(true);\n      mockExecSync.mockImplementation(() => {\n        throw new Error('Command failed');\n      });\n\n      const size = await progressTracker.getBundleSize();\n\n      expect(size).toBe(0);\n    });\n  });\n\n  describe('getProgressMetrics', () => {\n    beforeEach(() => {\n      jest.spyOn(progressTracker, 'getTypeScriptErrorCount').mockResolvedValue(50);\n      jest.spyOn(progressTracker, 'getLintingWarningCount').mockResolvedValue(2000);\n      jest.spyOn(progressTracker, 'getBuildTime').mockResolvedValue(8.5);\n      jest.spyOn(progressTracker, 'getEnterpriseSystemCount').mockResolvedValue(100);\n      jest.spyOn(progressTracker, 'getCacheHitRate').mockResolvedValue(0.85);\n      jest.spyOn(progressTracker, 'getMemoryUsage').mockResolvedValue(42);\n    });\n\n    it('should return comprehensive progress metrics', async () => {\n      const metrics = await progressTracker.getProgressMetrics();\n\n      expect(metrics.typeScriptErrors.current).toBe(50);\n      expect(metrics.typeScriptErrors.target).toBe(0);\n      expect(metrics.typeScriptErrors.reduction).toBe(36); // 86 - 50\n      expect(metrics.typeScriptErrors.percentage).toBe(42); // (36/86) * 100\n\n      expect(metrics.lintingWarnings.current).toBe(2000);\n      expect(metrics.lintingWarnings.target).toBe(0);\n      expect(metrics.lintingWarnings.reduction).toBe(2506); // 4506 - 2000\n      expect(metrics.lintingWarnings.percentage).toBe(56); // (2506/4506) * 100\n\n      expect(metrics.buildPerformance.currentTime).toBe(8.5);\n      expect(metrics.buildPerformance.targetTime).toBe(10);\n      expect(metrics.buildPerformance.cacheHitRate).toBe(0.85);\n      expect(metrics.buildPerformance.memoryUsage).toBe(42);\n\n      expect(metrics.enterpriseSystems.current).toBe(100);\n      expect(metrics.enterpriseSystems.target).toBe(200);\n      expect(metrics.enterpriseSystems.transformedExports).toBe(100);\n    });\n\n    it('should store metrics in history', async () => {\n      await progressTracker.getProgressMetrics();\n\n      const history = progressTracker.getMetricsHistory();\n      expect(history.length).toBe(1);\n    });\n\n    it('should limit metrics history to prevent memory issues', async () => {\n      // Add many metrics to history\n      for (let i = 0; i < 110; i++) {\n        await progressTracker.getProgressMetrics();\n      }\n\n      const history = progressTracker.getMetricsHistory();\n      expect(history.length).toBe(50); // Should be trimmed to 50\n    });\n\n    it('should handle negative error counts gracefully', async () => {\n      jest.spyOn(progressTracker, 'getTypeScriptErrorCount').mockResolvedValue(-1);\n      jest.spyOn(progressTracker, 'getLintingWarningCount').mockResolvedValue(-1);\n\n      const metrics = await progressTracker.getProgressMetrics();\n\n      expect(metrics.typeScriptErrors.percentage).toBe(0);\n      expect(metrics.lintingWarnings.percentage).toBe(0);\n    });\n  });\n\n  describe('validateMilestone', () => {\n    beforeEach(() => {\n      jest.spyOn(progressTracker, 'getProgressMetrics').mockResolvedValue({\n        typeScriptErrors: { current: 0, target: 0, reduction: 86, percentage: 100 },\n        lintingWarnings: { current: 0, target: 0, reduction: 4506, percentage: 100 },\n        buildPerformance: { currentTime: 8.5, targetTime: 10, cacheHitRate: 0.85, memoryUsage: 42 },\n        enterpriseSystems: { current: 200, target: 200, transformedExports: 200 }\n      });\n    });\n\n    it('should validate zero-typescript-errors milestone', async () => {\n      const result = await progressTracker.validateMilestone('zero-typescript-errors');\n      expect(result).toBe(true);\n    });\n\n    it('should validate zero-linting-warnings milestone', async () => {\n      const result = await progressTracker.validateMilestone('zero-linting-warnings');\n      expect(result).toBe(true);\n    });\n\n    it('should validate build-time-under-10s milestone', async () => {\n      const result = await progressTracker.validateMilestone('build-time-under-10s');\n      expect(result).toBe(true);\n    });\n\n    it('should validate enterprise-systems-200 milestone', async () => {\n      const result = await progressTracker.validateMilestone('enterprise-systems-200');\n      expect(result).toBe(true);\n    });\n\n    it('should validate phase completion milestones', async () => {\n      const phase1 = await progressTracker.validateMilestone('phase-1-complete');\n      const phase2 = await progressTracker.validateMilestone('phase-2-complete');\n      const phase3 = await progressTracker.validateMilestone('phase-3-complete');\n      const phase4 = await progressTracker.validateMilestone('phase-4-complete');\n\n      expect(phase1).toBe(true);\n      expect(phase2).toBe(true);\n      expect(phase3).toBe(true);\n      expect(phase4).toBe(true);\n    });\n\n    it('should fail validation for incomplete milestones', async () => {\n      jest.spyOn(progressTracker, 'getProgressMetrics').mockResolvedValue({\n        typeScriptErrors: { current: 5, target: 0, reduction: 81, percentage: 94 },\n        lintingWarnings: { current: 100, target: 0, reduction: 4406, percentage: 98 },\n        buildPerformance: { currentTime: 12, targetTime: 10, cacheHitRate: 0.6, memoryUsage: 60 },\n        enterpriseSystems: { current: 150, target: 200, transformedExports: 150 }\n      });\n\n      const tsErrors = await progressTracker.validateMilestone('zero-typescript-errors');\n      const lintWarnings = await progressTracker.validateMilestone('zero-linting-warnings');\n      const buildTime = await progressTracker.validateMilestone('build-time-under-10s');\n      const enterprise = await progressTracker.validateMilestone('enterprise-systems-200');\n\n      expect(tsErrors).toBe(false);\n      expect(lintWarnings).toBe(false);\n      expect(buildTime).toBe(false);\n      expect(enterprise).toBe(false);\n    });\n\n    it('should handle unknown milestones', async () => {\n      const result = await progressTracker.validateMilestone('unknown-milestone' as Milestone);\n      expect(result).toBe(false);\n    });\n  });\n\n  describe('generateProgressReport', () => {\n    beforeEach(() => {\n      jest.spyOn(progressTracker, 'getProgressMetrics').mockResolvedValue({\n        typeScriptErrors: { current: 25, target: 0, reduction: 61, percentage: 71 },\n        lintingWarnings: { current: 1000, target: 0, reduction: 3506, percentage: 78 },\n        buildPerformance: { currentTime: 9, targetTime: 10, cacheHitRate: 0.8, memoryUsage: 45 },\n        enterpriseSystems: { current: 150, target: 200, transformedExports: 150 }\n      });\n    });\n\n    it('should generate comprehensive progress report', async () => {\n      const report = await progressTracker.generateProgressReport();\n\n      expect(report.campaignId).toBe('perfect-codebase-campaign');\n      expect(report.overallProgress).toBeGreaterThan(0);\n      expect(report.phases).toHaveLength(2);\n      expect(report.currentMetrics).toBeDefined();\n      expect(report.targetMetrics).toBeDefined();\n      expect(report.estimatedCompletion).toBeInstanceOf(Date);\n    });\n\n    it('should calculate overall progress correctly', async () => {\n      const report = await progressTracker.generateProgressReport();\n\n      // Overall progress should be average of all phase progress\n      // TypeScript: 71%, Linting: 78%, Build: 100%, Enterprise: 75%\n      // Average: (71 + 78 + 100 + 75) / 4 = 81%\n      expect(report.overallProgress).toBe(81);\n    });\n\n    it('should generate phase reports with correct status', async () => {\n      const report = await progressTracker.generateProgressReport();\n\n      const phase1 = report.phases.find(p => p.phaseId === 'phase1');\n      const phase2 = report.phases.find(p => p.phaseId === 'phase2');\n\n      expect(phase1?.status).toBe(PhaseStatus.IN_PROGRESS);\n      expect(phase2?.status).toBe(PhaseStatus.IN_PROGRESS);\n      expect(phase1?.issues).toContain('25 TypeScript errors remaining');\n      expect(phase2?.issues).toContain('1000 linting warnings remaining');\n    });\n\n    it('should show completed status for finished phases', async () => {\n      jest.spyOn(progressTracker, 'getProgressMetrics').mockResolvedValue({\n        typeScriptErrors: { current: 0, target: 0, reduction: 86, percentage: 100 },\n        lintingWarnings: { current: 0, target: 0, reduction: 4506, percentage: 100 },\n        buildPerformance: { currentTime: 8, targetTime: 10, cacheHitRate: 0.8, memoryUsage: 45 },\n        enterpriseSystems: { current: 200, target: 200, transformedExports: 200 }\n      });\n\n      const report = await progressTracker.generateProgressReport();\n\n      const phase1 = report.phases.find(p => p.phaseId === 'phase1');\n      const phase2 = report.phases.find(p => p.phaseId === 'phase2');\n\n      expect(phase1?.status).toBe(PhaseStatus.COMPLETED);\n      expect(phase2?.status).toBe(PhaseStatus.COMPLETED);\n      expect(phase1?.achievements).toContain('Zero TypeScript errors achieved');\n      expect(phase2?.achievements).toContain('Zero linting warnings achieved');\n    });\n  });\n\n  describe('getMetricsImprovement', () => {\n    it('should calculate improvement correctly', async () => {\n      // Add initial metrics\n      jest.spyOn(progressTracker, 'getProgressMetrics').mockResolvedValueOnce({\n        typeScriptErrors: { current: 86, target: 0, reduction: 0, percentage: 0 },\n        lintingWarnings: { current: 4506, target: 0, reduction: 0, percentage: 0 },\n        buildPerformance: { currentTime: 12, targetTime: 10, cacheHitRate: 0.7, memoryUsage: 60 },\n        enterpriseSystems: { current: 0, target: 200, transformedExports: 0 }\n      });\n      await progressTracker.getProgressMetrics();\n\n      // Add improved metrics\n      jest.spyOn(progressTracker, 'getProgressMetrics').mockResolvedValueOnce({\n        typeScriptErrors: { current: 50, target: 0, reduction: 36, percentage: 42 },\n        lintingWarnings: { current: 3000, target: 0, reduction: 1506, percentage: 33 },\n        buildPerformance: { currentTime: 9, targetTime: 10, cacheHitRate: 0.8, memoryUsage: 45 },\n        enterpriseSystems: { current: 100, target: 200, transformedExports: 100 }\n      });\n      await progressTracker.getProgressMetrics();\n\n      const improvement = progressTracker.getMetricsImprovement();\n\n      expect(improvement.typeScriptErrorsReduced).toBe(36);\n      expect(improvement.lintingWarningsReduced).toBe(1506);\n      expect(improvement.buildTimeImproved).toBe(3);\n      expect(improvement.enterpriseSystemsAdded).toBe(100);\n    });\n\n    it('should return zero improvement with insufficient history', () => {\n      const improvement = progressTracker.getMetricsImprovement();\n\n      expect(improvement.typeScriptErrorsReduced).toBe(0);\n      expect(improvement.lintingWarningsReduced).toBe(0);\n      expect(improvement.buildTimeImproved).toBe(0);\n      expect(improvement.enterpriseSystemsAdded).toBe(0);\n    });\n  });\n\n  describe('exportMetrics', () => {\n    beforeEach(() => {\n      jest.spyOn(progressTracker, 'generateProgressReport').mockResolvedValue({\n        campaignId: 'perfect-codebase-campaign',\n        overallProgress: 75,\n        phases: [],\n        currentMetrics: {} as ProgressMetrics,\n        targetMetrics: {} as ProgressMetrics,\n        estimatedCompletion: new Date()\n      });\n    });\n\n    it('should export metrics to JSON file', async () => {\n      await progressTracker.exportMetrics('test-metrics.json');\n\n      expect(mockFs.writeFileSync).toHaveBeenCalledWith(\n        'test-metrics.json',\n        expect.stringContaining('\"campaignId\": \"perfect-codebase-campaign\"'),\n        undefined\n      );\n    });\n\n    it('should include timestamp in export', async () => {\n      await progressTracker.exportMetrics('test-metrics.json');\n\n      const writeCall = mockFs.writeFileSync.mock.calls[0];\n      const exportData = JSON.parse(writeCall[1] as string);\n\n      expect(exportData.timestamp).toBeDefined();\n      expect(new Date(exportData.timestamp)).toBeInstanceOf(Date);\n    });\n\n    it('should handle export errors', async () => {\n      mockFs.writeFileSync.mockImplementation(() => {\n        throw new Error('Write failed');\n      });\n\n      await expect(progressTracker.exportMetrics('test-metrics.json')).rejects.toThrow(\n        'Failed to export metrics: Write failed'\n      );\n    });\n  });\n\n  describe('resetMetricsHistory', () => {\n    it('should clear metrics history', async () => {\n      // Add some metrics first\n      await progressTracker.getProgressMetrics();\n      expect(progressTracker.getMetricsHistory().length).toBe(1);\n\n      progressTracker.resetMetricsHistory();\n\n      expect(progressTracker.getMetricsHistory().length).toBe(0);\n    });\n\n    it('should update last metrics update timestamp', () => {\n      const beforeReset = (progressTracker as any).lastMetricsUpdate;\n      \n      progressTracker.resetMetricsHistory();\n      \n      const afterReset = (progressTracker as any).lastMetricsUpdate;\n      expect(afterReset.getTime()).toBeGreaterThan(beforeReset.getTime());\n    });\n  });\n});"],"version":3}