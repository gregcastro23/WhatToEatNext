{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/MetricsIntegration.test.ts","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/services/campaign/unintentional-any-elimination/__tests__/MetricsIntegration.test.ts"],"sourcesContent":["/**\n * Metrics Integration Tests\n * Tests for the metrics integration with existing campaign reporting systems\n */\n\nimport {\n    UnintentionalAnyCampaignScheduler,\n    UnintentionalAnyProgressTracker\n} from '../MetricsIntegration';\n\n\n// Mock child_process to avoid actual command execution in tests\njest.mock('child_process', () => ({\n  execSync: jest.fn()\n}));\n\n// Mock fs to avoid file system operations in tests\njest.mock('fs', () => ({\n  writeFileSync: jest.fn(),\n  existsSync: jest.fn(() => true),\n  readFileSync: jest.fn(() => '{}')\n}));\n\ndescribe('UnintentionalAnyProgressTracker', () => {\n  let tracker: UnintentionalAnyProgressTracker;\n  let mockExecSync: jest.MockedFunction<typeof import('child_process').execSync>;\n\n  beforeEach(() => {\n    tracker = new UnintentionalAnyProgressTracker();\n    mockExecSync = require('child_process').execSync as jest.MockedFunction<typeof import('child_process').execSync>;\n    jest.clearAllMocks();\n  });\n\n  describe('getExplicitAnyWarningCount', () => {\n    it('should count explicit-any warnings from linting output', async () => {\n      const mockLintOutput = `\n        src/file1.ts:10:5: warning @typescript-eslint/no-explicit-any\n        src/file2.ts:20:10: warning @typescript-eslint/no-explicit-any\n        src/file3.ts:30:15: error some-other-rule\n      `;\n\n      mockExecSync.mockReturnValue(mockLintOutput);\n\n      const count = await tracker.getExplicitAnyWarningCount();\n      expect(count).toBe(2);\n    });\n\n    it('should return 0 when no explicit-any warnings found', async () => {\n      const mockLintOutput = `\n        src/file1.ts:10:5: warning some-other-rule\n        src/file2.ts:20:10: error another-rule\n      `;\n\n      mockExecSync.mockReturnValue(mockLintOutput);\n\n      const count = await tracker.getExplicitAnyWarningCount();\n      expect(count).toBe(0);\n    });\n\n    it('should handle linting command failure gracefully', async () => {\n      const error = new Error('Linting failed') as any;\n      error.stdout = 'src/file1.ts:10:5: warning @typescript-eslint/no-explicit-any';\n      mockExecSync.mockImplementation(() => {\n        throw error;\n      });\n\n      const count = await tracker.getExplicitAnyWarningCount();\n      expect(count).toBe(1);\n    });\n\n    it('should return 0 when linting command fails without output', async () => {\n      mockExecSync.mockImplementation(() => {\n        throw new Error('Command failed');\n      });\n\n      const count = await tracker.getExplicitAnyWarningCount();\n      expect(count).toBe(0);\n    });\n  });\n\n  describe('getExplicitAnyBreakdownByFile', () => {\n    it('should break down explicit-any warnings by file', async () => {\n      const mockLintOutput = `\n        src/file1.ts:10:5: warning @typescript-eslint/no-explicit-any\n        src/file1.ts:20:10: warning @typescript-eslint/no-explicit-any\n        src/file2.ts:30:15: warning @typescript-eslint/no-explicit-any\n        src/file3.ts:40:20: error some-other-rule\n      `;\n\n      mockExecSync.mockReturnValue(mockLintOutput);\n\n      const breakdown = await tracker.getExplicitAnyBreakdownByFile();\n\n      expect(breakdown['src/file1.ts']).toBe(2);\n      expect(breakdown['src/file2.ts']).toBe(1);\n      expect(breakdown['src/file3.ts']).toBeUndefined();\n    });\n\n    it('should return empty breakdown when no warnings found', async () => {\n      const mockLintOutput = `\n        src/file1.ts:10:5: warning some-other-rule\n        src/file2.ts:20:10: error another-rule\n      `;\n\n      mockExecSync.mockReturnValue(mockLintOutput);\n\n      const breakdown = await tracker.getExplicitAnyBreakdownByFile();\n      expect(Object.keys(breakdown)).toHaveLength(0);\n    });\n  });\n\n  describe('getUnintentionalAnyMetrics', () => {\n    it('should return comprehensive metrics', async () => {\n      // Mock linting output with explicit-any warnings\n      mockExecSync.mockReturnValue('src/file1.ts:10:5: warning @typescript-eslint/no-explicit-any');\n\n      const metrics = await tracker.getUnintentionalAnyMetrics();\n\n      expect(metrics).toBeDefined();\n      expect(typeof metrics.totalAnyTypes).toBe('number');\n      expect(typeof metrics.intentionalAnyTypes).toBe('number');\n      expect(typeof metrics.unintentionalAnyTypes).toBe('number');\n      expect(typeof metrics.documentedAnyTypes).toBe('number');\n      expect(typeof metrics.documentationCoverage).toBe('number');\n      expect(typeof metrics.reductionFromBaseline).toBe('number');\n      expect(metrics.targetReduction).toBe(15);\n    });\n\n    it('should handle errors gracefully and return default metrics', async () => {\n      mockExecSync.mockImplementation(() => {\n        throw new Error('Command failed');\n      });\n\n      const metrics = await tracker.getUnintentionalAnyMetrics();\n\n      expect(metrics.totalAnyTypes).toBe(0);\n      expect(metrics.intentionalAnyTypes).toBe(0);\n      expect(metrics.unintentionalAnyTypes).toBe(0);\n      expect(metrics.documentationCoverage).toBe(0);\n      expect(metrics.targetReduction).toBe(15);\n    });\n\n    it('should calculate reduction from baseline when baseline is set', async () => {\n      // Set baseline with higher any count\n      mockExecSync.mockReturnValue('src/file1.ts:10:5: warning @typescript-eslint/no-explicit-any\\nsrc/file2.ts:20:10: warning @typescript-eslint/no-explicit-any');\n      await tracker.setBaselineMetrics();\n\n      // Mock current state with fewer any types\n      mockExecSync.mockReturnValue('src/file1.ts:10:5: warning @typescript-eslint/no-explicit-any');\n\n      const metrics = await tracker.getUnintentionalAnyMetrics();\n      expect(metrics.reductionFromBaseline).toBeGreaterThan(0);\n    });\n  });\n\n  describe('getUnintentionalAnyProgressMetrics', () => {\n    it('should return enhanced progress metrics', async () => {\n      const progressMetrics = await tracker.getUnintentionalAnyProgressMetrics();\n\n      expect(progressMetrics).toBeDefined();\n      expect(progressMetrics.typeScriptErrors).toBeDefined();\n      expect(progressMetrics.lintingWarnings).toBeDefined();\n      expect(progressMetrics.buildPerformance).toBeDefined();\n      expect(progressMetrics.enterpriseSystems).toBeDefined();\n      expect(progressMetrics.unintentionalAnyMetrics).toBeDefined();\n    });\n  });\n\n  describe('setBaselineMetrics', () => {\n    it('should set baseline metrics for comparison', async () => {\n      mockExecSync.mockReturnValue('src/file1.ts:10:5: warning @typescript-eslint/no-explicit-any');\n\n      await tracker.setBaselineMetrics();\n\n      const history = tracker.getUnintentionalAnyMetricsHistory();\n      expect(history.length).toBeGreaterThan(0);\n    });\n  });\n\n  describe('validateUnintentionalAnyMilestone', () => {\n    it('should validate baseline-established milestone', async () => {\n      // Before setting baseline\n      let isValid = await tracker.validateUnintentionalAnyMilestone('baseline-established');\n      expect(isValid).toBe(false);\n\n      // After setting baseline\n      await tracker.setBaselineMetrics();\n      isValid = await tracker.validateUnintentionalAnyMilestone('baseline-established');\n      expect(isValid).toBe(true);\n    });\n\n    it('should validate analysis-complete milestone', async () => {\n      mockExecSync.mockReturnValue('src/file1.ts:10:5: warning @typescript-eslint/no-explicit-any');\n\n      const isValid = await tracker.validateUnintentionalAnyMilestone('analysis-complete');\n      expect(typeof isValid).toBe('boolean');\n    });\n\n    it('should validate target-reduction-achieved milestone', async () => {\n      // Set baseline\n      mockExecSync.mockReturnValue('src/file1.ts:10:5: warning @typescript-eslint/no-explicit-any\\nsrc/file2.ts:20:10: warning @typescript-eslint/no-explicit-any');\n      await tracker.setBaselineMetrics();\n\n      // Mock significant reduction\n      mockExecSync.mockReturnValue('');\n\n      const isValid = await tracker.validateUnintentionalAnyMilestone('target-reduction-achieved');\n      expect(isValid).toBe(true);\n    });\n\n    it('should validate documentation-complete milestone', async () => {\n      // This would require mocking the documentation quality assurance\n      const isValid = await tracker.validateUnintentionalAnyMilestone('documentation-complete');\n      expect(typeof isValid).toBe('boolean');\n    });\n\n    it('should validate zero-unintentional-any milestone', async () => {\n      mockExecSync.mockReturnValue(''); // No explicit-any warnings\n\n      const isValid = await tracker.validateUnintentionalAnyMilestone('zero-unintentional-any');\n      expect(typeof isValid).toBe('boolean');\n    });\n\n    it('should return false for unknown milestone', async () => {\n      const isValid = await tracker.validateUnintentionalAnyMilestone('unknown-milestone' as any);\n      expect(isValid).toBe(false);\n    });\n  });\n\n  describe('getDashboardMetrics', () => {\n    it('should return dashboard-compatible metrics', async () => {\n      mockExecSync.mockReturnValue('src/file1.ts:10:5: warning @typescript-eslint/no-explicit-any');\n\n      const dashboardMetrics = await tracker.getDashboardMetrics();\n\n      expect(dashboardMetrics.current).toBeDefined();\n      expect(['improving', 'stable', 'declining']).toContain(dashboardMetrics.trend);\n      expect(Array.isArray(dashboardMetrics.topFiles)).toBe(true);\n      expect(Array.isArray(dashboardMetrics.alerts)).toBe(true);\n      expect(Array.isArray(dashboardMetrics.recommendations)).toBe(true);\n      expect(dashboardMetrics.lastUpdated).toBeInstanceOf(Date);\n    });\n\n    it('should include top files with most any types', async () => {\n      const mockLintOutput = `\n        src/file1.ts:10:5: warning @typescript-eslint/no-explicit-any\n        src/file1.ts:20:10: warning @typescript-eslint/no-explicit-any\n        src/file2.ts:30:15: warning @typescript-eslint/no-explicit-any\n      `;\n\n      mockExecSync.mockReturnValue(mockLintOutput);\n\n      const dashboardMetrics = await tracker.getDashboardMetrics();\n\n      expect(dashboardMetrics.topFiles.length).toBeGreaterThan(0);\n      expect(dashboardMetrics.topFiles[0].file).toBe('src/file1.ts');\n      expect(dashboardMetrics.topFiles[0].count).toBe(2);\n    });\n\n    it('should generate alerts for high unintentional any count', async () => {\n      // Mock high number of explicit-any warnings\n      const mockLintOutput = Array(150).fill('src/file.ts:10:5: warning @typescript-eslint/no-explicit-any').join('\\n');\n      mockExecSync.mockReturnValue(mockLintOutput);\n\n      const dashboardMetrics = await tracker.getDashboardMetrics();\n\n      const highCountAlert = dashboardMetrics.alerts.find(alert =>\n        alert.type === 'high-unintentional-any-count'\n      );\n      expect(highCountAlert).toBeDefined();\n      expect(highCountAlert?.severity).toBe('warning');\n    });\n  });\n\n  describe('exportUnintentionalAnyMetrics', () => {\n    it('should export metrics to JSON file', async () => {\n      const mockWriteFileSync = require('fs').writeFileSync as jest.MockedFunction<typeof import('fs').writeFileSync>;\n\n      await tracker.exportUnintentionalAnyMetrics('test-metrics.json');\n\n      expect(mockWriteFileSync).toHaveBeenCalledWith(\n        'test-metrics.json',\n        expect.stringContaining('\"timestamp\"'),\n        undefined\n      );\n    });\n  });\n\n  describe('resetUnintentionalAnyMetricsHistory', () => {\n    it('should reset metrics history', async () => {\n      // Add some metrics to history\n      await tracker.setBaselineMetrics();\n      expect(tracker.getUnintentionalAnyMetricsHistory().length).toBeGreaterThan(0);\n\n      // Reset history\n      tracker.resetUnintentionalAnyMetricsHistory();\n      expect(tracker.getUnintentionalAnyMetricsHistory().length).toBe(0);\n    });\n  });\n});\n\ndescribe('UnintentionalAnyCampaignScheduler', () => {\n  let scheduler: UnintentionalAnyCampaignScheduler;\n\n  beforeEach(() => {\n    scheduler = new UnintentionalAnyCampaignScheduler();\n    jest.clearAllMocks();\n  });\n\n  describe('shouldTriggerCampaign', () => {\n    it('should trigger high priority campaign for many unintentional any types', async () => {\n      // Mock high number of explicit-any warnings\n      const mockLintOutput = Array(250).fill('src/file.ts:10:5: warning @typescript-eslint/no-explicit-any').join('\\n');\n      const mockExecSync = require('child_process').execSync as jest.MockedFunction<typeof import('child_process').execSync>;\n      mockExecSync.mockReturnValue(mockLintOutput);\n\n      const decision = await scheduler.shouldTriggerCampaign();\n\n      expect(decision.shouldTrigger).toBe(true);\n      expect(decision.priority).toBe('high');\n      expect(decision.reason).toContain('High number');\n    });\n\n    it('should trigger medium priority campaign for moderate unintentional any types', async () => {\n      // Mock moderate number of explicit-any warnings\n      const mockLintOutput = Array(75).fill('src/file.ts:10:5: warning @typescript-eslint/no-explicit-any').join('\\n');\n      const mockExecSync = require('child_process').execSync as jest.MockedFunction<typeof import('child_process').execSync>;\n      mockExecSync.mockReturnValue(mockLintOutput);\n\n      const decision = await scheduler.shouldTriggerCampaign();\n\n      expect(decision.shouldTrigger).toBe(true);\n      expect(decision.priority).toBe('medium');\n      expect(decision.reason).toContain('Moderate number');\n    });\n\n    it('should not trigger campaign when no issues detected', async () => {\n      // Mock no explicit-any warnings\n      const mockExecSync = require('child_process').execSync as jest.MockedFunction<typeof import('child_process').execSync>;\n      mockExecSync.mockReturnValue('');\n\n      const decision = await scheduler.shouldTriggerCampaign();\n\n      expect(decision.shouldTrigger).toBe(false);\n      expect(decision.priority).toBe('low');\n      expect(decision.reason).toContain('No significant');\n    });\n  });\n\n  describe('resolveCampaignConflicts', () => {\n    it('should allow execution when no conflicts exist', () => {\n      const resolution = scheduler.resolveCampaignConflicts(\n        ['other-campaign', 'unrelated-task'],\n        'unintentional-any-elimination'\n      );\n\n      expect(resolution.canProceed).toBe(true);\n      expect(resolution.conflictingCampaigns).toEqual([]);\n      expect(resolution.resolution).toContain('No conflicts');\n    });\n\n    it('should detect conflicts with TypeScript campaigns', () => {\n      const resolution = scheduler.resolveCampaignConflicts(\n        ['typescript-error-elimination', 'other-campaign'],\n        'unintentional-any-elimination'\n      );\n\n      expect(resolution.conflictingCampaigns).toContain('typescript-error-elimination');\n      expect(resolution.conflictingCampaigns).not.toContain('other-campaign');\n    });\n\n    it('should detect conflicts with linting campaigns', () => {\n      const resolution = scheduler.resolveCampaignConflicts(\n        ['linting-excellence', 'explicit-any-cleanup'],\n        'unintentional-any-elimination'\n      );\n\n      expect(resolution.conflictingCampaigns).toContain('linting-excellence');\n      expect(resolution.conflictingCampaigns).toContain('explicit-any-cleanup');\n    });\n\n    it('should allow resolution for non-critical conflicts', () => {\n      const resolution = scheduler.resolveCampaignConflicts(\n        ['typescript-cleanup', 'linting-improvement'],\n        'unintentional-any-elimination'\n      );\n\n      expect(resolution.canProceed).toBe(true);\n      expect(resolution.resolution).toContain('coordinating batch processing');\n    });\n\n    it('should prevent execution for critical campaigns', () => {\n      const resolution = scheduler.resolveCampaignConflicts(\n        ['critical-typescript-emergency', 'emergency-linting-fix'],\n        'unintentional-any-elimination'\n      );\n\n      expect(resolution.canProceed).toBe(false);\n      expect(resolution.resolution).toContain('Wait for critical campaigns');\n    });\n  });\n\n  describe('getRecommendedExecutionTime', () => {\n    it('should recommend immediate execution for low load', () => {\n      const recommendation = scheduler.getRecommendedExecutionTime([], 'low');\n\n      expect(recommendation.recommendedTime).toBeInstanceOf(Date);\n      expect(recommendation.reason).toContain('immediately');\n      expect(recommendation.estimatedDuration).toBeLessThan(30);\n    });\n\n    it('should recommend near future execution for medium load', () => {\n      const recommendation = scheduler.getRecommendedExecutionTime(['one-campaign'], 'medium');\n\n      const now = new Date();\n      expect(recommendation.recommendedTime.getTime()).toBeGreaterThan(now.getTime());\n      expect(recommendation.reason).toContain('near future');\n      expect(recommendation.estimatedDuration).toBeGreaterThan(30);\n      expect(recommendation.estimatedDuration).toBeLessThan(40);\n    });\n\n    it('should delay execution for high load', () => {\n      const recommendation = scheduler.getRecommendedExecutionTime(\n        ['campaign1', 'campaign2', 'campaign3'],\n        'high'\n      );\n\n      const now = new Date();\n      const twoHoursFromNow = new Date(now.getTime() + 2 * 60 * 60 * 1000);\n\n      expect(recommendation.recommendedTime.getTime()).toBeGreaterThanOrEqual(twoHoursFromNow.getTime() - 60000); // Allow 1 minute tolerance\n      expect(recommendation.reason).toContain('later');\n      expect(recommendation.estimatedDuration).toBeGreaterThan(40);\n    });\n\n    it('should adjust duration based on system conditions', () => {\n      const lowLoadRecommendation = scheduler.getRecommendedExecutionTime([], 'low');\n      const highLoadRecommendation = scheduler.getRecommendedExecutionTime(['campaign'], 'high');\n\n      expect(highLoadRecommendation.estimatedDuration).toBeGreaterThan(lowLoadRecommendation.estimatedDuration);\n    });\n  });\n});\n"],"version":3}