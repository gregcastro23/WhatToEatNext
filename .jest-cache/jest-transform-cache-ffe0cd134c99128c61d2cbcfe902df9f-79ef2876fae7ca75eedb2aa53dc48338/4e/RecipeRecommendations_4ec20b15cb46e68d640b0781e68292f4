838ca7bbf60a6387369359837387432a
"use strict";
'use client';
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RecipeRecommendations = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const lucide_react_1 = require("lucide-react");
const cuisineRecommender_1 = require("@/utils/cuisineRecommender");
// ========== HELPER FUNCTIONS ==========
const calculateAstrologicalScore = (recipe) => {
    // Simple astrological scoring based on recipe properties
    let score = 0.5; // Base score
    // Check for astrological tags or properties
    if (recipe.tags) {
        const astrologicalTags = ['lunar', 'solar', 'planetary', 'celestial', 'zodiac'];
        const hasAstrologicalTags = recipe.tags.some(tag => astrologicalTags.some(astroTag => tag.toLowerCase().includes(astroTag)));
        if (hasAstrologicalTags)
            score += 0.2;
    }
    // Check cooking time alignment with current moment
    if (recipe.cookTime) {
        const cookTimeStr = recipe.cookTime.toLowerCase();
        const now = new Date();
        const hour = now.getHours();
        // Quick cooking for busy times, slow cooking for relaxed times
        if (hour >= 17 && hour <= 20) { // Dinner time
            if (cookTimeStr.includes('quick') || cookTimeStr.includes('15') || cookTimeStr.includes('20')) {
                score += 0.15;
            }
        }
        else if (hour >= 10 && hour <= 16) { // Relaxed time
            if (cookTimeStr.includes('slow') || cookTimeStr.includes('60') || cookTimeStr.includes('hour')) {
                score += 0.15;
            }
        }
    }
    return Math.min(1, score);
};
const scoreRecipe = (recipe, currentElementalProfile) => {
    // Calculate elemental match score
    const elementalScore = recipe.elementalProperties
        ? (0, cuisineRecommender_1.calculateElementalMatch)(recipe.elementalProperties, currentElementalProfile)
        : 0.5;
    // Calculate astrological score
    const astrologicalScore = calculateAstrologicalScore(recipe);
    // Calculate overall score (weighted combination)
    const overallScore = (elementalScore * 0.6) + (astrologicalScore * 0.4);
    // Generate scoring reasons
    const scoringReasons = [];
    if (elementalScore > 0.7) {
        scoringReasons.push(`Excellent elemental harmony (${Math.round(elementalScore * 100)}%)`);
    }
    else if (elementalScore > 0.5) {
        scoringReasons.push(`Good elemental match (${Math.round(elementalScore * 100)}%)`);
    }
    if (astrologicalScore > 0.6) {
        scoringReasons.push('Aligned with current celestial energies');
    }
    if (recipe.difficulty === 'Easy' || recipe.difficulty === 'easy') {
        scoringReasons.push('Perfect for beginners');
    }
    if (recipe.cookTime && recipe.cookTime.includes('30')) {
        scoringReasons.push('Quick preparation time');
    }
    return {
        ...recipe,
        elementalScore,
        astrologicalScore,
        overallScore,
        scoringReasons,
        matchPercentage: Math.round(overallScore * 100)
    };
};
// ========== RECIPE CARD COMPONENT ==========
const RecipeCard = ({ recipe, isExpanded, onToggle, onSelect }) => {
    const handleCardClick = (0, react_1.useCallback)((e) => {
        e.stopPropagation();
        onToggle();
    }, [onToggle]);
    const handleSelectClick = (0, react_1.useCallback)((e) => {
        e.stopPropagation();
        if (onSelect) {
            onSelect(recipe);
        }
    }, [onSelect, recipe]);
    return ((0, jsx_runtime_1.jsxs)("div", { className: "border rounded-lg p-4 bg-white hover:shadow-md transition-shadow cursor-pointer", children: [(0, jsx_runtime_1.jsxs)("div", { onClick: handleCardClick, children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between items-start mb-2", children: [(0, jsx_runtime_1.jsx)("h4", { className: "font-medium text-base text-gray-900 flex-1 mr-2", children: recipe.name }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-2", children: [(0, jsx_runtime_1.jsxs)("span", { className: `text-xs px-2 py-1 rounded-full ${(0, cuisineRecommender_1.getMatchScoreClass)(recipe.overallScore)}`, children: [recipe.matchPercentage, "%"] }), isExpanded ? (0, jsx_runtime_1.jsx)(lucide_react_1.ChevronUp, { size: 16 }) : (0, jsx_runtime_1.jsx)(lucide_react_1.ChevronDown, { size: 16 })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-4 text-sm text-gray-600 mb-2", children: [recipe.cookTime && ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-1", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Clock, { size: 14 }), (0, jsx_runtime_1.jsx)("span", { children: recipe.cookTime })] })), recipe.servingSize && ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-1", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Users, { size: 14 }), (0, jsx_runtime_1.jsxs)("span", { children: [recipe.servingSize, " servings"] })] })), recipe.difficulty && ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-1", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.BarChart3, { size: 14 }), (0, jsx_runtime_1.jsx)("span", { children: recipe.difficulty })] }))] }), recipe.scoringReasons.length > 0 && ((0, jsx_runtime_1.jsx)("div", { className: "mb-2", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-1 text-xs text-blue-600", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Sparkles, { size: 12 }), (0, jsx_runtime_1.jsx)("span", { children: recipe.scoringReasons[0] })] }) })), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-gray-600 line-clamp-2 mb-2", children: recipe.description })] }), isExpanded && ((0, jsx_runtime_1.jsxs)("div", { className: "mt-4 pt-4 border-t border-gray-200", children: [recipe.description && ((0, jsx_runtime_1.jsxs)("div", { className: "mb-4", children: [(0, jsx_runtime_1.jsx)("h5", { className: "font-medium text-sm mb-2", children: "Description" }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-gray-600", children: recipe.description })] })), (0, jsx_runtime_1.jsxs)("div", { className: "mb-4", children: [(0, jsx_runtime_1.jsx)("h5", { className: "font-medium text-sm mb-2", children: "Compatibility Scores" }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 gap-3", children: [(0, jsx_runtime_1.jsxs)("div", { className: "bg-blue-50 p-2 rounded", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-xs text-blue-600 font-medium", children: "Elemental Match" }), (0, jsx_runtime_1.jsxs)("div", { className: "text-sm font-semibold text-blue-800", children: [Math.round(recipe.elementalScore * 100), "%"] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "bg-purple-50 p-2 rounded", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-xs text-purple-600 font-medium", children: "Astrological" }), (0, jsx_runtime_1.jsxs)("div", { className: "text-sm font-semibold text-purple-800", children: [Math.round(recipe.astrologicalScore * 100), "%"] })] })] })] }), recipe.scoringReasons.length > 1 && ((0, jsx_runtime_1.jsxs)("div", { className: "mb-4", children: [(0, jsx_runtime_1.jsx)("h5", { className: "font-medium text-sm mb-2", children: "Why This Recipe?" }), (0, jsx_runtime_1.jsx)("ul", { className: "list-disc pl-4 space-y-1", children: recipe.scoringReasons.map((reason, index) => ((0, jsx_runtime_1.jsx)("li", { className: "text-xs text-gray-600", children: reason }, index))) })] })), recipe.ingredients && Array.isArray(recipe.ingredients) && recipe.ingredients.length > 0 && ((0, jsx_runtime_1.jsxs)("div", { className: "mb-4", children: [(0, jsx_runtime_1.jsx)("h5", { className: "font-medium text-sm mb-2", children: "Key Ingredients" }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-wrap gap-1", children: [recipe.ingredients.slice(0, 8).map((ing, index) => ((0, jsx_runtime_1.jsx)("span", { className: "text-xs bg-gray-100 px-2 py-1 rounded", children: typeof ing === 'string' ? ing : ing.name || 'ingredient' }, index))), recipe.ingredients.length > 8 && ((0, jsx_runtime_1.jsxs)("span", { className: "text-xs text-gray-500", children: ["+", recipe.ingredients.length - 8, " more"] }))] })] })), onSelect && ((0, jsx_runtime_1.jsxs)("button", { onClick: handleSelectClick, className: "w-full mt-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded-lg transition-colors flex items-center justify-center space-x-2", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Star, { size: 16 }), (0, jsx_runtime_1.jsx)("span", { children: "Select This Recipe" })] }))] }))] }));
};
// ========== MAIN COMPONENT ==========
const RecipeRecommendations = ({ recipes, cuisineName, currentElementalProfile, maxDisplayed = 6, showExpandedByDefault = false, onRecipeSelect }) => {
    const [expandedRecipes, setExpandedRecipes] = (0, react_1.useState)({});
    const [showAllRecipes, setShowAllRecipes] = (0, react_1.useState)(false);
    // Score and sort recipes
    const scoredRecipes = (0, react_1.useMemo)(() => {
        return recipes
            .map(recipe => scoreRecipe(recipe, currentElementalProfile))
            .sort((a, b) => b.overallScore - a.overallScore);
    }, [recipes, currentElementalProfile]);
    // Determine which recipes to display
    const displayedRecipes = (0, react_1.useMemo)(() => {
        return showAllRecipes ? scoredRecipes : scoredRecipes.slice(0, maxDisplayed);
    }, [scoredRecipes, showAllRecipes, maxDisplayed]);
    const toggleRecipeExpansion = (0, react_1.useCallback)((recipeId) => {
        setExpandedRecipes(prev => ({
            ...prev,
            [recipeId]: !prev[recipeId]
        }));
    }, []);
    const toggleShowAll = (0, react_1.useCallback)(() => {
        setShowAllRecipes(prev => !prev);
    }, []);
    if (scoredRecipes.length === 0) {
        return ((0, jsx_runtime_1.jsxs)("div", { className: "text-center py-8 text-gray-500", children: [(0, jsx_runtime_1.jsxs)("p", { children: ["No recipes found for ", cuisineName, " cuisine."] }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm mt-1", children: "Try exploring other cuisines or check back later." })] }));
    }
    return ((0, jsx_runtime_1.jsxs)("div", { className: "space-y-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between items-center", children: [(0, jsx_runtime_1.jsxs)("h3", { className: "text-lg font-medium text-gray-900", children: [cuisineName, " Recipe Recommendations"] }), (0, jsx_runtime_1.jsxs)("span", { className: "text-sm text-gray-500", children: [scoredRecipes.length, " recipe", scoredRecipes.length !== 1 ? 's' : '', " found"] })] }), (0, jsx_runtime_1.jsx)("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: displayedRecipes.map((recipe) => ((0, jsx_runtime_1.jsx)(RecipeCard, { recipe: recipe, isExpanded: expandedRecipes[recipe.id || recipe.name || ''] || showExpandedByDefault, onToggle: () => toggleRecipeExpansion(recipe.id || recipe.name || ''), onSelect: onRecipeSelect }, recipe.id || recipe.name))) }), scoredRecipes.length > maxDisplayed && ((0, jsx_runtime_1.jsx)("div", { className: "text-center", children: (0, jsx_runtime_1.jsx)("button", { onClick: toggleShowAll, className: "inline-flex items-center space-x-2 px-4 py-2 text-blue-600 hover:text-blue-800 hover:bg-blue-50 rounded-lg transition-colors", children: showAllRecipes ? ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(lucide_react_1.ChevronUp, { size: 16 }), (0, jsx_runtime_1.jsx)("span", { children: "Show Less" })] })) : ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(lucide_react_1.ChevronDown, { size: 16 }), (0, jsx_runtime_1.jsxs)("span", { children: ["Show All ", scoredRecipes.length, " Recipes"] })] })) }) }))] }));
};
exports.RecipeRecommendations = RecipeRecommendations;
exports.default = exports.RecipeRecommendations;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,