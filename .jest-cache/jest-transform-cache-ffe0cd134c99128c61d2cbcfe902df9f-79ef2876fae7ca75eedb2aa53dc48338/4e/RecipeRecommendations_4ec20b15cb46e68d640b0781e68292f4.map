{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/components/RecipeRecommendations.tsx","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/components/RecipeRecommendations.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { \n  ChevronDown, \n  ChevronUp, \n  Clock, \n  Users, \n  BarChart3,\n  Star,\n  Sparkles\n} from 'lucide-react';\nimport { ElementalProperties } from '@/types/alchemy';\nimport { calculateElementalMatch, getMatchScoreClass } from '@/utils/cuisineRecommender';\n\n// ========== INTERFACES ==========\n\ninterface RecipeData {\n  id?: string;\n  name?: string;\n  description?: string;\n  cuisine?: string;\n  matchPercentage?: number;\n  matchScore?: number;\n  elementalProperties?: ElementalProperties;\n  ingredients?: unknown[];\n  instructions?: unknown[];\n  cookTime?: string;\n  prepTime?: string;\n  servingSize?: number;\n  difficulty?: string;\n  tags?: string[];\n  [key: string]: unknown;\n}\n\ninterface RecipeRecommendationsProps {\n  recipes: RecipeData[];\n  cuisineName: string;\n  currentElementalProfile: ElementalProperties;\n  maxDisplayed?: number;\n  showExpandedByDefault?: boolean;\n  onRecipeSelect?: (recipe: RecipeData) => void;\n}\n\ninterface ScoredRecipe extends RecipeData {\n  astrologicalScore: number;\n  elementalScore: number;\n  overallScore: number;\n  scoringReasons: string[];\n}\n\n// ========== HELPER FUNCTIONS ==========\n\nconst calculateAstrologicalScore = (recipe: RecipeData): number => {\n  // Simple astrological scoring based on recipe properties\n  let score = 0.5; // Base score\n  \n  // Check for astrological tags or properties\n  if (recipe.tags) {\n    const astrologicalTags = ['lunar', 'solar', 'planetary', 'celestial', 'zodiac'];\n    const hasAstrologicalTags = recipe.tags.some(tag => \n      astrologicalTags.some(astroTag => \n        tag.toLowerCase().includes(astroTag)\n      )\n    );\n    if (hasAstrologicalTags) score += 0.2;\n  }\n  \n  // Check cooking time alignment with current moment\n  if (recipe.cookTime) {\n    const cookTimeStr = recipe.cookTime.toLowerCase();\n    const now = new Date();\n    const hour = now.getHours();\n    \n    // Quick cooking for busy times, slow cooking for relaxed times\n    if (hour >= 17 && hour <= 20) { // Dinner time\n      if (cookTimeStr.includes('quick') || cookTimeStr.includes('15') || cookTimeStr.includes('20')) {\n        score += 0.15;\n      }\n    } else if (hour >= 10 && hour <= 16) { // Relaxed time\n      if (cookTimeStr.includes('slow') || cookTimeStr.includes('60') || cookTimeStr.includes('hour')) {\n        score += 0.15;\n      }\n    }\n  }\n  \n  return Math.min(1, score);\n};\n\nconst scoreRecipe = (recipe: RecipeData, currentElementalProfile: ElementalProperties): ScoredRecipe => {\n  // Calculate elemental match score\n  const elementalScore = recipe.elementalProperties \n    ? calculateElementalMatch(recipe.elementalProperties, currentElementalProfile)\n    : 0.5;\n  \n  // Calculate astrological score\n  const astrologicalScore = calculateAstrologicalScore(recipe);\n  \n  // Calculate overall score (weighted combination)\n  const overallScore = (elementalScore * 0.6) + (astrologicalScore * 0.4);\n  \n  // Generate scoring reasons\n  const scoringReasons: string[] = [];\n  \n  if (elementalScore > 0.7) {\n    scoringReasons.push(`Excellent elemental harmony (${Math.round(elementalScore * 100)}%)`);\n  } else if (elementalScore > 0.5) {\n    scoringReasons.push(`Good elemental match (${Math.round(elementalScore * 100)}%)`);\n  }\n  \n  if (astrologicalScore > 0.6) {\n    scoringReasons.push('Aligned with current celestial energies');\n  }\n  \n  if (recipe.difficulty === 'Easy' || recipe.difficulty === 'easy') {\n    scoringReasons.push('Perfect for beginners');\n  }\n  \n  if (recipe.cookTime && recipe.cookTime.includes('30')) {\n    scoringReasons.push('Quick preparation time');\n  }\n  \n  return {\n    ...recipe,\n    elementalScore,\n    astrologicalScore,\n    overallScore,\n    scoringReasons,\n    matchPercentage: Math.round(overallScore * 100)\n  };\n};\n\n// ========== RECIPE CARD COMPONENT ==========\n\nconst RecipeCard: React.FC<{\n  recipe: ScoredRecipe;\n  isExpanded: boolean;\n  onToggle: () => void;\n  onSelect?: (recipe: RecipeData) => void;\n}> = ({ recipe, isExpanded, onToggle, onSelect }) => {\n  const handleCardClick = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    onToggle();\n  }, [onToggle]);\n\n  const handleSelectClick = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (onSelect) {\n      onSelect(recipe);\n    }\n  }, [onSelect, recipe]);\n\n  return (\n    <div className=\"border rounded-lg p-4 bg-white hover:shadow-md transition-shadow cursor-pointer\">\n      <div onClick={handleCardClick}>\n        {/* Recipe Header */}\n        <div className=\"flex justify-between items-start mb-2\">\n          <h4 className=\"font-medium text-base text-gray-900 flex-1 mr-2\">\n            {recipe.name}\n          </h4>\n          <div className=\"flex items-center space-x-2\">\n            <span className={`text-xs px-2 py-1 rounded-full ${getMatchScoreClass(recipe.overallScore)}`}>\n              {recipe.matchPercentage}%\n            </span>\n            {isExpanded ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\n          </div>\n        </div>\n\n        {/* Recipe Meta Info */}\n        <div className=\"flex items-center space-x-4 text-sm text-gray-600 mb-2\">\n          {recipe.cookTime && (\n            <div className=\"flex items-center space-x-1\">\n              <Clock size={14} />\n              <span>{recipe.cookTime}</span>\n            </div>\n          )}\n          {recipe.servingSize && (\n            <div className=\"flex items-center space-x-1\">\n              <Users size={14} />\n              <span>{recipe.servingSize} servings</span>\n            </div>\n          )}\n          {recipe.difficulty && (\n            <div className=\"flex items-center space-x-1\">\n              <BarChart3 size={14} />\n              <span>{recipe.difficulty}</span>\n            </div>\n          )}\n        </div>\n\n        {/* Scoring Reasons */}\n        {recipe.scoringReasons.length > 0 && (\n          <div className=\"mb-2\">\n            <div className=\"flex items-center space-x-1 text-xs text-blue-600\">\n              <Sparkles size={12} />\n              <span>{recipe.scoringReasons[0]}</span>\n            </div>\n          </div>\n        )}\n\n        {/* Short Description */}\n        <p className=\"text-sm text-gray-600 line-clamp-2 mb-2\">\n          {recipe.description}\n        </p>\n      </div>\n\n      {/* Expanded Content */}\n      {isExpanded && (\n        <div className=\"mt-4 pt-4 border-t border-gray-200\">\n          {/* Full Description */}\n          {recipe.description && (\n            <div className=\"mb-4\">\n              <h5 className=\"font-medium text-sm mb-2\">Description</h5>\n              <p className=\"text-sm text-gray-600\">{recipe.description}</p>\n            </div>\n          )}\n\n          {/* Detailed Scores */}\n          <div className=\"mb-4\">\n            <h5 className=\"font-medium text-sm mb-2\">Compatibility Scores</h5>\n            <div className=\"grid grid-cols-2 gap-3\">\n              <div className=\"bg-blue-50 p-2 rounded\">\n                <div className=\"text-xs text-blue-600 font-medium\">Elemental Match</div>\n                <div className=\"text-sm font-semibold text-blue-800\">\n                  {Math.round(recipe.elementalScore * 100)}%\n                </div>\n              </div>\n              <div className=\"bg-purple-50 p-2 rounded\">\n                <div className=\"text-xs text-purple-600 font-medium\">Astrological</div>\n                <div className=\"text-sm font-semibold text-purple-800\">\n                  {Math.round(recipe.astrologicalScore * 100)}%\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* All Scoring Reasons */}\n          {recipe.scoringReasons.length > 1 && (\n            <div className=\"mb-4\">\n              <h5 className=\"font-medium text-sm mb-2\">Why This Recipe?</h5>\n              <ul className=\"list-disc pl-4 space-y-1\">\n                {recipe.scoringReasons.map((reason, index) => (\n                  <li key={index} className=\"text-xs text-gray-600\">{reason}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          {/* Ingredients Preview */}\n          {recipe.ingredients && Array.isArray(recipe.ingredients) && recipe.ingredients.length > 0 && (\n            <div className=\"mb-4\">\n              <h5 className=\"font-medium text-sm mb-2\">Key Ingredients</h5>\n              <div className=\"flex flex-wrap gap-1\">\n                {recipe.ingredients.slice(0, 8).map((ing, index) => (\n                  <span key={index} className=\"text-xs bg-gray-100 px-2 py-1 rounded\">\n                    {typeof ing === 'string' ? ing : (ing as any).name || 'ingredient'}\n                  </span>\n                ))}\n                {recipe.ingredients.length > 8 && (\n                  <span className=\"text-xs text-gray-500\">+{recipe.ingredients.length - 8} more</span>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Action Button */}\n          {onSelect && (\n            <button\n              onClick={handleSelectClick}\n              className=\"w-full mt-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded-lg transition-colors flex items-center justify-center space-x-2\"\n            >\n              <Star size={16} />\n              <span>Select This Recipe</span>\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// ========== MAIN COMPONENT ==========\n\nexport const RecipeRecommendations: React.FC<RecipeRecommendationsProps> = ({\n  recipes,\n  cuisineName,\n  currentElementalProfile,\n  maxDisplayed = 6,\n  showExpandedByDefault = false,\n  onRecipeSelect\n}) => {\n  const [expandedRecipes, setExpandedRecipes] = useState<Record<string, boolean>>({});\n  const [showAllRecipes, setShowAllRecipes] = useState(false);\n\n  // Score and sort recipes\n  const scoredRecipes = useMemo(() => {\n    return recipes\n      .map(recipe => scoreRecipe(recipe, currentElementalProfile))\n      .sort((a, b) => b.overallScore - a.overallScore);\n  }, [recipes, currentElementalProfile]);\n\n  // Determine which recipes to display\n  const displayedRecipes = useMemo(() => {\n    return showAllRecipes ? scoredRecipes : scoredRecipes.slice(0, maxDisplayed);\n  }, [scoredRecipes, showAllRecipes, maxDisplayed]);\n\n  const toggleRecipeExpansion = useCallback((recipeId: string) => {\n    setExpandedRecipes(prev => ({\n      ...prev,\n      [recipeId]: !prev[recipeId]\n    }));\n  }, []);\n\n  const toggleShowAll = useCallback(() => {\n    setShowAllRecipes(prev => !prev);\n  }, []);\n\n  if (scoredRecipes.length === 0) {\n    return (\n      <div className=\"text-center py-8 text-gray-500\">\n        <p>No recipes found for {cuisineName} cuisine.</p>\n        <p className=\"text-sm mt-1\">Try exploring other cuisines or check back later.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-lg font-medium text-gray-900\">\n          {cuisineName} Recipe Recommendations\n        </h3>\n        <span className=\"text-sm text-gray-500\">\n          {scoredRecipes.length} recipe{scoredRecipes.length !== 1 ? 's' : ''} found\n        </span>\n      </div>\n\n      {/* Recipe Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        {displayedRecipes.map((recipe) => (\n          <RecipeCard\n            key={recipe.id || recipe.name}\n            recipe={recipe}\n            isExpanded={expandedRecipes[recipe.id || recipe.name || ''] || showExpandedByDefault}\n            onToggle={() => toggleRecipeExpansion(recipe.id || recipe.name || '')}\n            onSelect={onRecipeSelect}\n          />\n        ))}\n      </div>\n\n      {/* Show More/Less Button */}\n      {scoredRecipes.length > maxDisplayed && (\n        <div className=\"text-center\">\n          <button\n            onClick={toggleShowAll}\n            className=\"inline-flex items-center space-x-2 px-4 py-2 text-blue-600 hover:text-blue-800 hover:bg-blue-50 rounded-lg transition-colors\"\n          >\n            {showAllRecipes ? (\n              <>\n                <ChevronUp size={16} />\n                <span>Show Less</span>\n              </>\n            ) : (\n              <>\n                <ChevronDown size={16} />\n                <span>Show All {scoredRecipes.length} Recipes</span>\n              </>\n            )}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RecipeRecommendations;"],"version":3}