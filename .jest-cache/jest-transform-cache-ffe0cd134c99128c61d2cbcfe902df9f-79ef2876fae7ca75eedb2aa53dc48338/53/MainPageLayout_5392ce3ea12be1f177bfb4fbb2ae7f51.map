{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/components/layout/MainPageLayout.tsx","mappings":"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","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/components/layout/MainPageLayout.tsx"],"sourcesContent":["'use client';\n\nimport React, {\n  useState,\n  useEffect,\n  useCallback,\n  createContext,\n  useContext,\n  useMemo,\n  memo,\n  lazy,\n  Suspense,\n} from 'react';\nimport { useRouter } from 'next/navigation';\nimport { logger } from '@/utils/logger';\nimport { useAlchemical } from '@/contexts/AlchemicalContext/hooks';\nimport ErrorBoundary from '@/components/error-boundaries/ErrorBoundary';\nimport {\n  useNavigationState,\n  useScrollPreservation,\n  useAutoStateCleanup,\n  useAstrologicalStatePreservation,\n  useCulturalSensitivityGuidance,\n  usePerformanceOptimizationGuidance,\n} from '@/hooks/useStatePreservation';\nimport { useErrorHandler } from '@/utils/errorHandling';\nimport { ComponentFallbacks } from '@/components/fallbacks/ComponentFallbacks';\nimport {\n  useSteeringFileIntelligence,\n  ElementalProperties,\n} from '@/utils/steeringFileIntelligence';\nimport {\n  useAgentHooks,\n  usePlanetaryDataValidationHook,\n  useIngredientConsistencyHook,\n  useTypeScriptCampaignHook,\n  useBuildQualityMonitoringHook,\n  useQualityMetricsHook,\n} from '@/hooks/useAgentHooks';\nimport { useMCPServerIntegration } from '@/utils/mcpServerIntegration';\nimport { useDevelopmentExperienceOptimizations } from '@/utils/developmentExperienceOptimizations';\n\n// Lazy load non-critical components for better performance\nconst ConsolidatedDebugInfo = lazy(\n  () => import('@/components/debug/ConsolidatedDebugInfo')\n);\nconst CuisineRecommender = lazy(\n  () => import('@/components/CuisineRecommender')\n);\nconst IngredientRecommender = lazy(\n  () => import('@/components/IngredientRecommender')\n);\nconst CookingMethodsSection = lazy(\n  () => import('@/components/CookingMethodsSection')\n);\nconst RecipeBuilderSimple = lazy(\n  () => import('@/components/recipes/RecipeBuilderSimple')\n);\n\ninterface MainPageLayoutProps {\n  children?: React.ReactNode;\n  debugMode?: boolean;\n  loading?: boolean;\n  onSectionNavigate?: (sectionId: string) => void;\n}\n\ninterface SectionConfig {\n  id: string;\n  title: string;\n  component: React.ComponentType;\n  loading: boolean;\n  error: string | null;\n}\n\n// Main Page Context for cross-component data sharing\ninterface MainPageContextType {\n  // Shared state\n  selectedIngredients: string[];\n  selectedCuisine: string | null;\n  selectedCookingMethods: string[];\n  currentRecipe: any | null;\n\n  // Navigation state\n  activeSection: string | null;\n  navigationHistory: string[];\n\n  // Update functions\n  updateSelectedIngredients: (ingredients: string[]) => void;\n  updateSelectedCuisine: (cuisine: string | null) => void;\n  updateSelectedCookingMethods: (methods: string[]) => void;\n  updateCurrentRecipe: (recipe: any | null) => void;\n  setActiveSection: (section: string | null) => void;\n\n  // Cross-component communication\n  notifyComponentUpdate: (componentId: string, data: any) => void;\n  subscribeToUpdates: (\n    componentId: string,\n    callback: (data: any) => void\n  ) => () => void;\n}\n\nconst MainPageContext = createContext<MainPageContextType | null>(null);\n\nexport const useMainPageContext = () => {\n  const context = useContext(MainPageContext);\n  if (!context) {\n    throw new Error('useMainPageContext must be used within MainPageLayout');\n  }\n  return context;\n};\n\n// Memoized loading fallback component for better performance\nconst ComponentLoadingFallback = memo(function ComponentLoadingFallback({\n  componentName,\n}: {\n  componentName: string;\n}) {\n  return (\n    <div className='flex items-center justify-center p-8 bg-gray-50 rounded-lg'>\n      <div className='flex items-center space-x-3'>\n        <div className='animate-spin rounded-full h-6 w-6 border-b-2 border-indigo-600'></div>\n        <span className='text-gray-600'>Loading {componentName}...</span>\n      </div>\n    </div>\n  );\n});\n\nconst MainPageLayout: React.FC<MainPageLayoutProps> = memo(\n  function MainPageLayout({\n    children,\n    debugMode = process.env.NODE_ENV === 'development',\n    loading = false,\n    onSectionNavigate,\n  }) {\n    const router = useRouter();\n    const { state, planetaryPositions, isDaytime } = useAlchemical();\n\n    // Use new state preservation hooks\n    const { saveState: saveNavState, getState: getNavState } =\n      useNavigationState();\n    const { restoreScrollPosition } = useScrollPreservation('main-page');\n    useAutoStateCleanup();\n\n    // Enhanced hooks with steering file intelligence\n    const steeringIntelligence = useSteeringFileIntelligence();\n    // Temporarily disabled for testing\n    // const {\n    //   saveAstrologicalState,\n    //   restoreAstrologicalState,\n    //   validateElementalCompatibility,\n    //   getArchitecturalGuidance,\n    //   getTechnologyStackGuidance\n    // } = useAstrologicalStatePreservation('main-page-layout');\n\n    // Temporarily disabled for testing\n    // const { validateCulturalContent, getInclusiveLanguageGuidelines } = useCulturalSensitivityGuidance();\n    // const { getOptimizationRecommendations, validatePerformanceMetrics } = usePerformanceOptimizationGuidance();\n\n    // Agent hooks for automated quality assurance - temporarily disabled for testing\n    // const { hookState: agentHookState, startAgentHooks, stopAgentHooks, triggerValidation } = useAgentHooks({\n    //   enablePlanetaryValidation: true,\n    //   enableIngredientValidation: true,\n    //   enableCampaignTriggers: true,\n    //   enablePerformanceMonitoring: true,\n    //   validationInterval: 5 // 5 minutes\n    // });\n\n    // const { validationResult: planetaryValidation, validatePlanetaryData } = usePlanetaryDataValidationHook(true);\n\n    // Temporary placeholders for disabled hooks\n    const agentHookState = null;\n    const planetaryValidation = null;\n    const { validationResult: ingredientValidation, validateIngredients } =\n      useIngredientConsistencyHook();\n    const { campaignTrigger: typescriptTrigger, checkErrorThreshold } =\n      useTypeScriptCampaignHook(true);\n    const { qualityResult: buildQuality, monitorBuildQuality } =\n      useBuildQualityMonitoringHook();\n    const { metrics: qualityMetrics, updateMetrics } =\n      useQualityMetricsHook(30000); // 30 seconds\n\n    // MCP server integration for reliable external APIs\n    const {\n      getAstrologicalData,\n      getNutritionalData,\n      getRecipeData,\n      testFallbackStrategy,\n      getServerStatus,\n    } = useMCPServerIntegration();\n\n    // Development experience optimizations\n    const {\n      updatePerformanceMetrics: updateDevMetrics,\n      getDevelopmentMetrics,\n      getPerformanceOptimizationRecommendations:\n        getDevOptimizationRecommendations,\n      applyAutomaticOptimizations,\n    } = useDevelopmentExperienceOptimizations();\n\n    const [sectionStates, setSectionStates] = useState<\n      Record<string, { loading: boolean; error: string | null }>\n    >({\n      cuisine: { loading: false, error: null },\n      ingredients: { loading: false, error: null },\n      cooking: { loading: false, error: null },\n      recipe: { loading: false, error: null },\n    });\n\n    // Main Page Context State - Initialize from preserved state\n    const [selectedIngredients, setSelectedIngredients] = useState<string[]>(\n      []\n    );\n    const [selectedCuisine, setSelectedCuisine] = useState<string | null>(null);\n    const [selectedCookingMethods, setSelectedCookingMethods] = useState<\n      string[]\n    >([]);\n    const [currentRecipe, setCurrentRecipe] = useState<any | null>(null);\n    const [activeSection, setActiveSection] = useState<string | null>(null);\n    const [navigationHistory, setNavigationHistory] = useState<string[]>([]);\n\n    // Component update subscribers\n    const [updateSubscribers, setUpdateSubscribers] = useState<\n      Record<string, ((data: any) => void)[]>\n    >({});\n\n    // Steering file intelligence state\n    const [astrologicalGuidance, setAstrologicalGuidance] = useState<any>(null);\n    const [performanceMetrics, setPerformanceMetrics] = useState<any>({});\n    const [culturalValidation, setCulturalValidation] = useState<any>(null);\n\n    // Initialize state from preserved navigation state\n    useEffect(() => {\n      const restoredState = getNavState();\n      if (restoredState) {\n        if (restoredState.selectedIngredients?.length > 0) {\n          setSelectedIngredients(restoredState.selectedIngredients);\n        }\n        if (restoredState.selectedCuisine) {\n          setSelectedCuisine(restoredState.selectedCuisine);\n        }\n        if (restoredState.selectedCookingMethods?.length > 0) {\n          setSelectedCookingMethods(restoredState.selectedCookingMethods);\n        }\n        if (restoredState.currentRecipe) {\n          setCurrentRecipe(restoredState.currentRecipe);\n        }\n        if (restoredState.activeSection) {\n          setActiveSection(restoredState.activeSection);\n        }\n        if (restoredState.navigationHistory?.length > 0) {\n          setNavigationHistory(restoredState.navigationHistory);\n        }\n\n        logger.debug(\n          'Restored main page context from enhanced state preservation'\n        );\n      }\n\n      // Restore scroll position after a short delay to ensure DOM is ready\n      setTimeout(() => {\n        restoreScrollPosition();\n      }, 100);\n    }, [getNavState, restoreScrollPosition]);\n\n    // Initialize steering file intelligence guidance\n    useEffect(() => {\n      const initializeGuidance = async () => {\n        try {\n          const guidance = await steeringIntelligence.getGuidance();\n          setAstrologicalGuidance(guidance);\n\n          // Apply architectural guidance for component optimization - temporarily disabled\n          // const archGuidance = getArchitecturalGuidance();\n          // logger.debug('Applied architectural guidance from steering files:', archGuidance);\n\n          // Validate cultural content if we have any - temporarily disabled\n          // if (selectedCuisine || selectedIngredients.length > 0) {\n          //   const validation = validateCulturalContent({\n          //     ingredientNames: selectedIngredients,\n          //     cuisineDescriptions: selectedCuisine ? [selectedCuisine] : []\n          //   });\n          //   setCulturalValidation(validation);\n          //\n          //   if (!validation.isCompliant) {\n          //     logger.warn('Cultural sensitivity issues detected:', validation.issues);\n          //   }\n          // }\n\n          // Get performance optimization recommendations - temporarily disabled\n          // const perfRecommendations = getOptimizationRecommendations('main-page-layout');\n          // logger.debug('Performance optimization recommendations:', perfRecommendations);\n        } catch (error) {\n          logger.error('Error initializing steering file intelligence:', error);\n        }\n      };\n\n      initializeGuidance();\n    }, [steeringIntelligence, selectedCuisine, selectedIngredients]);\n\n    // Monitor performance metrics using steering file guidance\n    useEffect(() => {\n      const startTime = performance.now();\n\n      const measurePerformance = () => {\n        const renderTime = performance.now() - startTime;\n        const memoryUsage =\n          (performance as any).memory?.usedJSHeapSize / 1024 / 1024 || 0;\n\n        const metrics = {\n          renderTime,\n          memoryUsage,\n          componentCount: Object.keys(sectionStates).length,\n          activeSubscribers: Object.values(updateSubscribers).reduce(\n            (sum, subs) => sum + subs.length,\n            0\n          ),\n        };\n\n        setPerformanceMetrics(metrics);\n\n        // Validate performance against steering file thresholds - temporarily disabled\n        // const validation = validatePerformanceMetrics({\n        //   renderTime,\n        //   memoryUsage\n        // });\n        //\n        // if (!validation.isOptimal) {\n        //   logger.warn('Performance issues detected:', validation.issues);\n        //   logger.info('Performance recommendations:', validation.recommendations);\n        // }\n      };\n\n      // Measure performance after component mounts and updates\n      const timeoutId = setTimeout(measurePerformance, 100);\n\n      return () => clearTimeout(timeoutId);\n    }, [sectionStates, updateSubscribers]);\n\n    // Enhanced state preservation with astrological context\n    useEffect(() => {\n      const saveEnhancedState = async () => {\n        try {\n          // Calculate elemental properties from current selections\n          const elementalProps: ElementalProperties = {\n            Fire:\n              selectedCookingMethods.filter(\n                method => method.includes('grill') || method.includes('sauté')\n              ).length * 0.3,\n            Water:\n              selectedIngredients.filter(\n                ing => ing.includes('soup') || ing.includes('steam')\n              ).length * 0.3,\n            Earth:\n              selectedIngredients.filter(\n                ing => ing.includes('root') || ing.includes('grain')\n              ).length * 0.3,\n            Air:\n              selectedIngredients.filter(\n                ing => ing.includes('herb') || ing.includes('spice')\n              ).length * 0.3,\n          };\n\n          // Save astrological state with steering file intelligence\n          // Temporarily disabled for testing\n          // await saveAstrologicalState({\n          //   elementalProperties: elementalProps,\n          //   selectedIngredients,\n          //   astrologicalContext: {\n          //     selectedCuisine,\n          //     selectedCookingMethods,\n          //     currentRecipe,\n          //     activeSection,\n          //     navigationHistory\n          //   }\n          // });\n        } catch (error) {\n          logger.error('Error saving enhanced astrological state:', error);\n        }\n      };\n\n      if (\n        selectedIngredients.length > 0 ||\n        selectedCuisine ||\n        selectedCookingMethods.length > 0\n      ) {\n        saveEnhancedState();\n      }\n    }, [\n      selectedIngredients,\n      selectedCuisine,\n      selectedCookingMethods,\n      currentRecipe,\n      activeSection,\n      navigationHistory,\n    ]);\n\n    // Initialize agent hooks for automated quality assurance - temporarily disabled for testing\n    // useEffect(() => {\n    //   startAgentHooks();\n    //   logger.info('Agent hooks started for automated quality assurance');\n    //\n    //   return () => {\n    //     stopAgentHooks();\n    //     logger.info('Agent hooks stopped');\n    //   };\n    // }, [startAgentHooks, stopAgentHooks]);\n\n    // Monitor ingredient consistency when ingredients change\n    useEffect(() => {\n      if (selectedIngredients.length > 0) {\n        const ingredientsWithElementalProps = selectedIngredients.map(\n          ingredient => ({\n            name: ingredient,\n            elementalProperties: {\n              Fire:\n                ingredient.includes('spice') || ingredient.includes('pepper')\n                  ? 0.8\n                  : 0.2,\n              Water:\n                ingredient.includes('soup') || ingredient.includes('broth')\n                  ? 0.8\n                  : 0.2,\n              Earth:\n                ingredient.includes('root') || ingredient.includes('grain')\n                  ? 0.8\n                  : 0.2,\n              Air:\n                ingredient.includes('herb') || ingredient.includes('leaf')\n                  ? 0.8\n                  : 0.2,\n            } as ElementalProperties,\n            category: ingredient.includes('spice')\n              ? 'spices'\n              : ingredient.includes('herb')\n                ? 'herbs'\n                : ingredient.includes('grain')\n                  ? 'grains'\n                  : 'other',\n          })\n        );\n\n        validateIngredients(ingredientsWithElementalProps)\n          .then(result => {\n            if (result && !result.isValid) {\n              logger.warn(\n                'Ingredient consistency validation failed:',\n                result.issues\n              );\n            }\n          })\n          .catch(error => {\n            logger.error('Error validating ingredient consistency:', error);\n          });\n      }\n    }, [selectedIngredients]);\n\n    // Monitor build quality and performance metrics\n    useEffect(() => {\n      const monitorQuality = async () => {\n        try {\n          const buildMetrics = {\n            buildTime: performanceMetrics.renderTime || 0,\n            memoryUsage: performanceMetrics.memoryUsage || 0,\n            bundleSize: 150 * 1024, // Estimated 150KB for main page\n            errorCount: 0, // No build errors in this context\n          };\n\n          const qualityResult = await monitorBuildQuality(buildMetrics);\n          if (qualityResult && !qualityResult.isValid) {\n            logger.warn('Build quality issues detected:', qualityResult.issues);\n          }\n        } catch (error) {\n          logger.error('Error monitoring build quality:', error);\n        }\n      };\n\n      // Monitor quality every 30 seconds\n      const qualityInterval = setInterval(monitorQuality, 30000);\n\n      // Initial quality check\n      monitorQuality();\n\n      return () => clearInterval(qualityInterval);\n    }, [performanceMetrics, monitorBuildQuality]);\n\n    // Test MCP server integration and fallback strategy\n    useEffect(() => {\n      const testMCPIntegration = async () => {\n        try {\n          // Test fallback strategy on component mount\n          const fallbackTest = await testFallbackStrategy();\n          logger.info('MCP server fallback strategy test completed:', {\n            overallReliability: fallbackTest.overallReliability,\n            astrological: fallbackTest.astrological.source,\n            nutritional: fallbackTest.nutritional.source,\n            recipes: fallbackTest.recipes.source,\n          });\n\n          // Monitor server status\n          const serverStatus = getServerStatus();\n          logger.debug('MCP server status:', serverStatus);\n\n          // Test individual API integrations if needed\n          if (selectedIngredients.length > 0) {\n            const nutritionalData = await getNutritionalData(\n              selectedIngredients[0]\n            );\n            if (nutritionalData.success) {\n              logger.debug(\n                `Nutritional data fetched via ${nutritionalData.source} for ${selectedIngredients[0]}`\n              );\n            }\n          }\n        } catch (error) {\n          logger.error('Error testing MCP server integration:', error);\n        }\n      };\n\n      // Test MCP integration on mount and when ingredients change\n      testMCPIntegration();\n\n      // Set up periodic server status monitoring\n      const statusInterval = setInterval(\n        () => {\n          const serverStatus = getServerStatus();\n          logger.debug('MCP server status check:', serverStatus);\n        },\n        5 * 60 * 1000\n      ); // Every 5 minutes\n\n      return () => clearInterval(statusInterval);\n    }, [\n      testFallbackStrategy,\n      getServerStatus,\n      getNutritionalData,\n      selectedIngredients,\n    ]);\n\n    // Apply development experience optimizations\n    useEffect(() => {\n      const applyDevOptimizations = async () => {\n        try {\n          // Update development metrics with current performance data\n          const devMetrics = {\n            compilationTime: performanceMetrics.renderTime || 0,\n            memoryUsage: performanceMetrics.memoryUsage || 0,\n            bundleSize: 150 * 1024, // Estimated bundle size\n            errorCount: 0, // No compilation errors in runtime\n            warningCount: 0,\n            hotReloadTime: 0,\n          };\n\n          updateDevMetrics(devMetrics);\n\n          // Get development optimization recommendations\n          const devRecommendations = getDevOptimizationRecommendations();\n          if (debugMode) {\n            logger.debug(\n              'Development optimization recommendations:',\n              devRecommendations\n            );\n          }\n\n          // Apply automatic optimizations in development mode\n          if (debugMode && process.env.NODE_ENV === 'development') {\n            const optimizationResults = applyAutomaticOptimizations();\n            if (optimizationResults.applied.length > 0) {\n              logger.info(\n                'Applied automatic development optimizations:',\n                optimizationResults.applied\n              );\n            }\n            if (optimizationResults.errors.length > 0) {\n              logger.warn(\n                'Development optimization errors:',\n                optimizationResults.errors\n              );\n            }\n          }\n\n          // Monitor development metrics\n          const currentDevMetrics = getDevelopmentMetrics();\n          if (debugMode) {\n            logger.debug('Current development metrics:', currentDevMetrics);\n          }\n        } catch (error) {\n          logger.error(\n            'Error applying development experience optimizations:',\n            error\n          );\n        }\n      };\n\n      // Apply optimizations on mount and when performance metrics change\n      applyDevOptimizations();\n\n      // Set up periodic optimization monitoring\n      const devOptimizationInterval = setInterval(applyDevOptimizations, 60000); // Every minute\n\n      return () => clearInterval(devOptimizationInterval);\n    }, [\n      performanceMetrics,\n      updateDevMetrics,\n      getDevOptimizationRecommendations,\n      applyAutomaticOptimizations,\n      getDevelopmentMetrics,\n      debugMode,\n    ]);\n\n    // Log quality metrics and campaign triggers for debugging\n    useEffect(() => {\n      if (debugMode) {\n        logger.debug('Quality Metrics:', qualityMetrics);\n        logger.debug('Agent Hook State:', agentHookState);\n\n        if (planetaryValidation && !planetaryValidation.isValid) {\n          logger.warn(\n            'Planetary validation issues:',\n            planetaryValidation.issues\n          );\n        }\n\n        if (typescriptTrigger?.triggered) {\n          logger.warn('TypeScript campaign trigger active:', typescriptTrigger);\n        }\n\n        if (buildQuality && !buildQuality.isValid) {\n          logger.warn('Build quality issues:', buildQuality.issues);\n        }\n\n        // Log MCP server status in debug mode\n        const serverStatus = getServerStatus();\n        logger.debug('MCP Server Status:', serverStatus);\n\n        // Log development metrics in debug mode\n        const devMetrics = getDevelopmentMetrics();\n        logger.debug('Development Experience Metrics:', devMetrics);\n      }\n    }, [\n      debugMode,\n      qualityMetrics,\n      agentHookState,\n      planetaryValidation,\n      typescriptTrigger,\n      buildQuality,\n      getServerStatus,\n      getDevelopmentMetrics,\n    ]);\n\n    // Save state changes using enhanced state preservation\n    useEffect(() => {\n      saveNavState({\n        selectedIngredients,\n        selectedCuisine,\n        selectedCookingMethods,\n        currentRecipe,\n        activeSection,\n        navigationHistory,\n        scrollPosition: window.scrollY,\n      });\n    }, [\n      selectedIngredients,\n      selectedCuisine,\n      selectedCookingMethods,\n      currentRecipe,\n      activeSection,\n      navigationHistory,\n      saveNavState,\n    ]);\n\n    // Context update functions\n    const updateSelectedIngredients = useCallback((ingredients: string[]) => {\n      setSelectedIngredients(ingredients);\n      notifyComponentUpdate('ingredients', {\n        selectedIngredients: ingredients,\n      });\n      logger.debug('Updated selected ingredients:', ingredients);\n    }, []);\n\n    const updateSelectedCuisine = useCallback((cuisine: string | null) => {\n      setSelectedCuisine(cuisine);\n      notifyComponentUpdate('cuisine', { selectedCuisine: cuisine });\n      logger.debug('Updated selected cuisine:', cuisine);\n    }, []);\n\n    const updateSelectedCookingMethods = useCallback((methods: string[]) => {\n      setSelectedCookingMethods(methods);\n      notifyComponentUpdate('cooking', { selectedCookingMethods: methods });\n      logger.debug('Updated selected cooking methods:', methods);\n    }, []);\n\n    const updateCurrentRecipe = useCallback((recipe: any | null) => {\n      setCurrentRecipe(recipe);\n      notifyComponentUpdate('recipe', { currentRecipe: recipe });\n      logger.debug('Updated current recipe:', recipe);\n    }, []);\n\n    const handleSetActiveSection = useCallback((section: string | null) => {\n      setActiveSection(section);\n      if (section) {\n        setNavigationHistory(prev => [...prev.slice(-9), section]); // Keep last 10 sections\n      }\n    }, []);\n\n    // Cross-component communication\n    const notifyComponentUpdate = useCallback(\n      (componentId: string, data: any) => {\n        const subscribers = updateSubscribers[componentId] || [];\n        subscribers.forEach(callback => {\n          try {\n            callback(data);\n          } catch (error) {\n            logger.error(\n              `Error in component update callback for ${componentId}:`,\n              error\n            );\n          }\n        });\n      },\n      [updateSubscribers]\n    );\n\n    const subscribeToUpdates = useCallback(\n      (componentId: string, callback: (data: any) => void) => {\n        setUpdateSubscribers(prev => ({\n          ...prev,\n          [componentId]: [...(prev[componentId] || []), callback],\n        }));\n\n        // Return unsubscribe function\n        return () => {\n          setUpdateSubscribers(prev => ({\n            ...prev,\n            [componentId]: (prev[componentId] || []).filter(\n              cb => cb !== callback\n            ),\n          }));\n        };\n      },\n      []\n    );\n\n    // Memoized context value to prevent unnecessary re-renders\n    const contextValue: MainPageContextType = useMemo(\n      () => ({\n        // Shared state\n        selectedIngredients,\n        selectedCuisine,\n        selectedCookingMethods,\n        currentRecipe,\n        activeSection,\n        navigationHistory,\n\n        // Update functions\n        updateSelectedIngredients,\n        updateSelectedCuisine,\n        updateSelectedCookingMethods,\n        updateCurrentRecipe,\n        setActiveSection: handleSetActiveSection,\n\n        // Cross-component communication\n        notifyComponentUpdate,\n        subscribeToUpdates,\n      }),\n      [\n        selectedIngredients,\n        selectedCuisine,\n        selectedCookingMethods,\n        currentRecipe,\n        activeSection,\n        navigationHistory,\n        updateSelectedIngredients,\n        updateSelectedCuisine,\n        updateSelectedCookingMethods,\n        updateCurrentRecipe,\n        handleSetActiveSection,\n        notifyComponentUpdate,\n        subscribeToUpdates,\n      ]\n    );\n\n    // Handle section navigation with enhanced context preservation and smooth transitions\n    const handleSectionNavigate = useCallback(\n      (sectionId: string) => {\n        const element = document.getElementById(sectionId);\n        if (element) {\n          // Add smooth transition effect\n          element.style.transition = 'all 0.3s ease-in-out';\n          element.scrollIntoView({ behavior: 'smooth', block: 'start' });\n\n          // Update active section and navigation history\n          handleSetActiveSection(sectionId);\n          onSectionNavigate?.(sectionId);\n\n          // Save navigation state using enhanced preservation system\n          saveNavState({\n            selectedIngredients,\n            selectedCuisine,\n            selectedCookingMethods,\n            currentRecipe,\n            activeSection: sectionId,\n            navigationHistory: [...navigationHistory, sectionId].slice(-10), // Keep last 10\n            scrollPosition: window.scrollY,\n          });\n\n          // Add visual feedback for navigation\n          element.classList.add('highlight-section');\n          setTimeout(() => {\n            element.classList.remove('highlight-section');\n            element.style.transition = '';\n          }, 1000);\n        }\n      },\n      [\n        onSectionNavigate,\n        handleSetActiveSection,\n        navigationHistory,\n        saveNavState,\n        selectedIngredients,\n        selectedCuisine,\n        selectedCookingMethods,\n        currentRecipe,\n      ]\n    );\n\n    // Update section loading state\n    const updateSectionState = useCallback(\n      (\n        sectionId: string,\n        updates: Partial<{ loading: boolean; error: string | null }>\n      ) => {\n        setSectionStates(prev => ({\n          ...prev,\n          [sectionId]: { ...prev[sectionId], ...updates },\n        }));\n      },\n      []\n    );\n\n    // Section error boundary fallback\n    const SectionErrorFallback: React.FC<{\n      error: Error;\n      sectionId: string;\n      onRetry: () => void;\n    }> = ({ error, sectionId, onRetry }) => (\n      <div className='bg-red-50 border border-red-200 rounded-lg p-6 text-center'>\n        <h3 className='text-lg font-semibold text-red-800 mb-2'>\n          Section Error: {sectionId}\n        </h3>\n        <p className='text-red-600 mb-4'>\n          {error.message || 'An unexpected error occurred in this section.'}\n        </p>\n        <button\n          onClick={onRetry}\n          className='bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition-colors'\n        >\n          Retry Section\n        </button>\n      </div>\n    );\n\n    // Section wrapper with error boundary\n    const SectionWrapper: React.FC<{\n      id: string;\n      title: string;\n      children: React.ReactNode;\n      className?: string;\n    }> = ({ id, title, children, className = '' }) => {\n      const [retryKey, setRetryKey] = useState(0);\n\n      const handleRetry = useCallback(() => {\n        setRetryKey(prev => prev + 1);\n        updateSectionState(id, { loading: false, error: null });\n      }, [id]);\n\n      return (\n        <section\n          id={id}\n          className={`bg-white rounded-lg shadow-md p-6 scroll-mt-20 ${className}`}\n        >\n          <div className='flex items-center justify-between mb-4'>\n            <h2 className='text-2xl font-semibold text-gray-800'>{title}</h2>\n            {sectionStates[id]?.loading && (\n              <div className='flex items-center text-blue-600'>\n                <div className='animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2'></div>\n                <span className='text-sm'>Loading...</span>\n              </div>\n            )}\n          </div>\n\n          <ErrorBoundary\n            key={retryKey}\n            fallback={error => (\n              <SectionErrorFallback\n                error={error}\n                sectionId={id}\n                onRetry={handleRetry}\n              />\n            )}\n          >\n            {children}\n          </ErrorBoundary>\n        </section>\n      );\n    };\n\n    return (\n      <MainPageContext.Provider value={contextValue}>\n        <div className='min-h-screen bg-gradient-to-b from-indigo-50 via-blue-50 to-gray-100 text-gray-800'>\n          <div className='container mx-auto px-4 py-8'>\n            {/* Header Section */}\n            <header className='mb-8 text-center'>\n              <h1 className='text-3xl md:text-4xl font-bold mb-2 text-indigo-900'>\n                What to Eat Next\n              </h1>\n              <p className='text-indigo-600 mb-4'>\n                Food recommendations based on the current celestial energies\n              </p>\n\n              {/* Loading Status Indicator */}\n              <div className='inline-block bg-white px-4 py-2 rounded-lg shadow-sm'>\n                {loading ? (\n                  <div className='flex items-center'>\n                    <div className='animate-spin rounded-full h-4 w-4 border-b-2 border-indigo-600 mr-2'></div>\n                    <p className='text-sm text-gray-600'>\n                      Loading astrological data...\n                    </p>\n                  </div>\n                ) : (\n                  <div className='flex items-center'>\n                    <div className='w-2 h-2 bg-green-500 rounded-full mr-2'></div>\n                    <p className='text-sm text-gray-600'>\n                      Connected • {isDaytime ? 'Day' : 'Night'} •{' '}\n                      {state.astrologicalState?.sunSign || 'Loading...'}\n                    </p>\n                  </div>\n                )}\n              </div>\n            </header>\n\n            {/* Sticky Navigation with Jump Links */}\n            <nav className='flex flex-wrap justify-center gap-4 mb-8 bg-white rounded-lg shadow-md p-4 sticky top-2 z-10'>\n              <button\n                onClick={() => handleSectionNavigate('cuisine')}\n                className='text-indigo-600 hover:text-indigo-800 font-medium px-3 py-1 rounded hover:bg-indigo-50 transition-colors'\n              >\n                Cuisine Recommendations\n              </button>\n              <button\n                onClick={() => handleSectionNavigate('ingredients')}\n                className='text-indigo-600 hover:text-indigo-800 font-medium px-3 py-1 rounded hover:bg-indigo-50 transition-colors'\n              >\n                Ingredient Recommendations\n              </button>\n              <button\n                onClick={() => handleSectionNavigate('cooking')}\n                className='text-indigo-600 hover:text-indigo-800 font-medium px-3 py-1 rounded hover:bg-indigo-50 transition-colors'\n              >\n                Cooking Methods\n              </button>\n              <button\n                onClick={() => handleSectionNavigate('recipe')}\n                className='text-indigo-600 hover:text-indigo-800 font-medium px-3 py-1 rounded hover:bg-indigo-50 transition-colors'\n              >\n                Recipe Builder\n              </button>\n            </nav>\n\n            {/* Main Content - Single Column Stacked Layout */}\n            <main className='flex flex-col gap-8 max-w-6xl mx-auto'>\n              {/* Cuisine Recommender Section */}\n              <SectionWrapper id='cuisine' title='Cuisine Recommendations'>\n                <ErrorBoundary\n                  fallback={error => (\n                    <ComponentFallbacks.CuisineRecommender\n                      onRetry={() => window.location.reload()}\n                      error={error}\n                    />\n                  )}\n                >\n                  <Suspense\n                    fallback={\n                      <ComponentFallbacks.Loading componentName='Cuisine Recommender' />\n                    }\n                  >\n                    <CuisineRecommender />\n                  </Suspense>\n                </ErrorBoundary>\n              </SectionWrapper>\n\n              {/* Ingredient Recommender Section */}\n              <SectionWrapper\n                id='ingredients'\n                title='Ingredient Recommendations'\n              >\n                <ErrorBoundary\n                  fallback={error => (\n                    <ComponentFallbacks.IngredientRecommender\n                      onRetry={() => window.location.reload()}\n                      error={error}\n                    />\n                  )}\n                >\n                  <Suspense\n                    fallback={\n                      <ComponentFallbacks.Loading componentName='Ingredient Recommender' />\n                    }\n                  >\n                    <IngredientRecommender\n                      isFullPageVersion={false}\n                      maxDisplayed={8}\n                    />\n                  </Suspense>\n                </ErrorBoundary>\n              </SectionWrapper>\n\n              {/* Cooking Methods Section */}\n              <SectionWrapper id='cooking' title='Cooking Methods'>\n                <ErrorBoundary\n                  fallback={error => (\n                    <ComponentFallbacks.CookingMethods\n                      onRetry={() => window.location.reload()}\n                      error={error}\n                    />\n                  )}\n                >\n                  <Suspense\n                    fallback={\n                      <ComponentFallbacks.Loading componentName='Cooking Methods' />\n                    }\n                  >\n                    <CookingMethodsSection\n                      isMainPageVersion={true}\n                      maxDisplayed={6}\n                      onViewMore={() => router.push('/cooking-methods')}\n                    />\n                  </Suspense>\n                </ErrorBoundary>\n              </SectionWrapper>\n\n              {/* Recipe Builder Section */}\n              <SectionWrapper id='recipe' title='Recipe Builder'>\n                <ErrorBoundary\n                  fallback={error => (\n                    <ComponentFallbacks.RecipeBuilder\n                      onRetry={() => window.location.reload()}\n                      error={error}\n                    />\n                  )}\n                >\n                  <Suspense\n                    fallback={\n                      <ComponentFallbacks.Loading componentName='Recipe Builder' />\n                    }\n                  >\n                    <RecipeBuilderSimple />\n                  </Suspense>\n                </ErrorBoundary>\n              </SectionWrapper>\n\n              {/* Additional children if provided */}\n              {children}\n            </main>\n\n            {/* Footer */}\n            <footer className='mt-12 text-center'>\n              <div className='mx-auto mb-4' style={{ maxWidth: '250px' }}>\n                <form\n                  action='https://www.paypal.com/ncp/payment/SVN6Q368TKKLS'\n                  method='post'\n                  target='_blank'\n                >\n                  <input\n                    type='submit'\n                    value='HELP'\n                    style={{\n                      textAlign: 'center',\n                      border: 'none',\n                      borderRadius: '0.25rem',\n                      width: '100%',\n                      padding: '0 2rem',\n                      height: '2.625rem',\n                      fontWeight: 'bold',\n                      backgroundColor: '#FFD140',\n                      color: '#000000',\n                      fontFamily: '\"Helvetica Neue\", Arial, sans-serif',\n                      fontSize: '1rem',\n                      lineHeight: '1.25rem',\n                      cursor: 'pointer',\n                    }}\n                  />\n                </form>\n              </div>\n            </footer>\n          </div>\n\n          {/* Debug Panel - Fixed Bottom Right */}\n          {debugMode && (\n            <Suspense fallback={null}>\n              <ConsolidatedDebugInfo\n                position='bottom-right'\n                collapsible={true}\n                showPerformanceMetrics={true}\n                showAstrologicalData={true}\n                showComponentStates={true}\n              />\n            </Suspense>\n          )}\n\n          {/* CSS for smooth navigation transitions */}\n          <style jsx>{`\n            .highlight-section {\n              transform: scale(1.02);\n              box-shadow: 0 10px 25px rgba(99, 102, 241, 0.15);\n              border: 2px solid rgba(99, 102, 241, 0.3);\n            }\n\n            section {\n              transition:\n                transform 0.3s ease-in-out,\n                box-shadow 0.3s ease-in-out,\n                border 0.3s ease-in-out;\n            }\n\n            nav button:hover {\n              transform: translateY(-1px);\n            }\n\n            nav button:active {\n              transform: translateY(0);\n            }\n          `}</style>\n        </div>\n      </MainPageContext.Provider>\n    );\n  }\n);\n\nexport default MainPageLayout;\n"],"version":3}