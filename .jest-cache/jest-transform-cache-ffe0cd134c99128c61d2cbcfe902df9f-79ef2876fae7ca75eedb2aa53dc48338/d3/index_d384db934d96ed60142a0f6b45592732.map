{"file":"/Users/GregCastro/Desktop/WhatToEatNext/src/data/ingredients/vegetables/index.ts","mappings":";;;AACA,+CAA4C;AA8B1C,4FA9BO,yBAAW,OA8BP;AA7Bb,mCAAgC;AA8B9B,sFA9BO,aAAK,OA8BP;AA7BP,+CAA4C;AA8B1C,4FA9BO,yBAAW,OA8BP;AA7Bb,+CAA4C;AA8B1C,4FA9BO,yBAAW,OA8BP;AA7Bb,uCAAoC;AA8BlC,wFA9BO,iBAAO,OA8BP;AA7BT,qCAAkC;AA8BhC,uFA9BO,eAAM,OA8BP;AA7BR,uCAA8C;AA8B5C,kGA9BO,2BAAiB,OA8BP;AA7BnB,uCAAoC;AA8BlC,wFA9BO,iBAAO,OA8BP;AA7BT,2DAA+D;AAE/D,mCAAmC;AACtB,QAAA,UAAU,GAAsC,IAAA,sCAAqB,EAAC;IACjF,GAAG,yBAAW;IACd,GAAG,aAAK;IACR,GAAG,yBAAW;IACd,GAAG,yBAAW;IACd,GAAG,iBAAO;IACV,GAAG,eAAM;IACT,GAAG,2BAAiB;IACpB,GAAG,iBAAO;CACX,CAAC,CAAC;AAEH,wDAAwD;AAC3C,QAAA,kBAAkB,GAAG,kBAAU,CAAC;AAE7C,8DAA8D;AACjD,QAAA,sBAAsB,GAAG,kBAAU,CAAC;AAcjD,mBAAmB;AACZ,MAAM,0BAA0B,GAAG,CAAC,WAAmB,EAAqC,EAAE;IACnG,OAAO,MAAM,CAAC,OAAO,CAAC,kBAAU,CAAC;SAC9B,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,WAAW,KAAK,WAAW,CAAC;SACzD,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AACnE,CAAC,CAAC;AAJW,QAAA,0BAA0B,8BAIrC;AAEK,MAAM,qBAAqB,GAAG,CAAC,MAAc,EAAqC,EAAE;IACzF,OAAO,MAAM,CAAC,OAAO,CAAC,kBAAU,CAAC;SAC9B,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACpF,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AACnE,CAAC,CAAC;AAJW,QAAA,qBAAqB,yBAIhC;AAEK,MAAM,4BAA4B,GAAG,CAAC,MAAc,EAAqC,EAAE;IAChG,OAAO,MAAM,CAAC,OAAO,CAAC,kBAAU,CAAC;SAC9B,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACpG,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AACnE,CAAC,CAAC;AAJW,QAAA,4BAA4B,gCAIvC;AAEF,kBAAe,aAAK,CAAC","names":[],"sources":["/Users/GregCastro/Desktop/WhatToEatNext/src/data/ingredients/vegetables/index.ts"],"sourcesContent":["import type { IngredientMapping } from '@/data/ingredients/types';\nimport { leafyGreens } from './leafyGreens';\nimport { roots } from './roots';\nimport { cruciferous } from './cruciferous';\nimport { nightshades } from './nightshades';\nimport { alliums } from './alliums';\nimport { squash } from './squash';\nimport { starchyVegetables } from './starchy';\nimport { legumes } from './legumes';\nimport { fixIngredientMappings } from '@/utils/elementalUtils';\n\n// Combine all vegetable categories\nexport const vegetables: Record<string, IngredientMapping> = fixIngredientMappings({\n  ...leafyGreens,\n  ...roots,\n  ...cruciferous,\n  ...nightshades,\n  ...alliums,\n  ...squash,\n  ...starchyVegetables,\n  ...legumes\n});\n\n// Create enhanced vegetables with additional properties\nexport const enhancedVegetables = vegetables;\n\n// For standardization - both exports refer to the same object\nexport const standardizedVegetables = vegetables;\n\n// Export individual categories\nexport {\n  leafyGreens,\n  roots,\n  cruciferous,\n  nightshades,\n  alliums,\n  squash,\n  starchyVegetables,\n  legumes\n};\n\n// Helper functions\nexport const getVegetablesBySubCategory = (subCategory: string): Record<string, IngredientMapping> => {\n  return Object.entries(vegetables)\n    .filter(([_, value]) => value.subCategory === subCategory)\n    .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n};\n\nexport const getSeasonalVegetables = (season: string): Record<string, IngredientMapping> => {\n  return Object.entries(vegetables)\n    .filter(([_, value]) => Array.isArray(value.season) && value.season.includes(season))\n    .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n};\n\nexport const getVegetablesByCookingMethod = (method: string): Record<string, IngredientMapping> => {\n  return Object.entries(vegetables)\n    .filter(([_, value]) => Array.isArray(value.cookingMethods) && value.cookingMethods.includes(method))\n    .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n};\n\nexport default roots;\n"],"version":3}