{
  "name": "what-to-eat-next",
  "version": "0.1.0",
  "private": true,
  "type": "module",
  "engines": {
    "node": ">=20.18.0",
    "yarn": ">=1.22.0"
  },
  "resolutions": {
    "@next/swc": "15.3.4",
    "@next/swc-darwin-x64": "15.3.4",
    "@next/swc-darwin-arm64": "15.3.4",
    "@next/swc-linux-x64": "15.3.4",
    "@next/swc-linux-arm64": "15.3.4",
    "@next/swc-win32-x64": "15.3.4",
    "@next/swc-win32-ia32": "15.3.4",
    "@typescript-eslint/scope-manager": "5.61.0",
    "@typescript-eslint/types": "5.61.0",
    "@typescript-eslint/typescript-estree": "5.61.0"
  },
  "scripts": {
    "types:api": "node scripts/generate-types-from-backend.cjs",
    "predev": "node scripts/check-node-version.cjs",
    "prebuild": "node scripts/check-node-version.cjs",
    "check-pm": "bash scripts/check-package-manager.sh",
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "eslint --config eslint.config.cjs src --max-warnings=10000",
    "lint:fix": "eslint --config eslint.config.cjs --fix src",
    "lint:fast": "eslint --config eslint.config.cjs --cache --cache-location .eslintcache src",
    "lint:quick": "eslint --config eslint.config.fast.cjs src --cache --cache-location .eslintcache-fast --max-warnings=10000",
    "lint:type-aware": "eslint --config eslint.config.cjs src --max-warnings=10000",
    "lint:incremental": "eslint --config eslint.config.fast.cjs --cache $(git diff --name-only --diff-filter=ACMR HEAD | grep -E '\\.(ts|tsx|js|jsx)$' | tr '\\n' ' ')",
    "lint:changed": "eslint --config eslint.config.cjs --cache $(git diff --name-only --diff-filter=ACMR HEAD | grep -E '\\.(ts|tsx|js|jsx)$' | tr '\\n' ' ')",
    "lint:performance": "time eslint --config eslint.config.cjs src --format=json --output-file=.eslint-results.json",
    "lint:profile": "TIMING=1 eslint --config eslint.config.fast.cjs src --format=json --output-file=.eslint-profile.json",
    "lint:parallel": "eslint --config eslint.config.cjs src --max-warnings=10000 --cache",
    "lint:ci": "eslint --config eslint.config.fast.cjs src --format=compact --max-warnings=10000",
    "lint:domain-astro": "eslint --config eslint.config.cjs 'src/calculations/**/*.{ts,tsx}' 'src/data/planets/**/*.{ts,tsx}' 'src/utils/reliableAstronomy.ts' 'src/utils/planetaryConsistencyCheck.ts' 'src/services/*Astrological*.ts' 'src/services/*Alchemical*.ts'",
    "lint:domain-campaign": "eslint --config eslint.config.cjs 'src/services/campaign/**/*.{ts,tsx}' 'src/types/campaign.ts' 'src/utils/*Campaign*.ts' 'src/utils/*Progress*.ts'",
    "lint:watch": "eslint --config eslint.config.cjs src --watch --cache --fix",
    "lint:summary": "eslint --config eslint.config.cjs src --format=compact --quiet",
    "lint:unused-vars": "node src/scripts/fix-unused-vars.js",
    "lint:const-assign": "node src/scripts/fix-const-assign.js",
    "lint:all-fix": "node src/scripts/fix-linting-issues.js",
    "lint:cache-clear": "rm -f .eslintcache .eslint-results.json .eslint-tsbuildinfo && rm -rf .eslint-ts-cache/",
    "lint:import-resolution-test": "eslint --config eslint.config.cjs --print-config src/components/Header/Header.tsx | grep -A 20 'import/resolver'",
    "lint:path-mapping-test": "node -e \"console.log('Testing path mappings:'); console.log(require('./tsconfig.json').compilerOptions.paths)\"",
    "lint:workflow": "node src/scripts/comprehensive-linting-workflow.js",
    "lint:workflow-dry": "node src/scripts/comprehensive-linting-workflow.js --dry-run",
    "lint:workflow-auto": "node src/scripts/comprehensive-linting-workflow.js --auto-fix --max-files=25",
    "lint:workflow-safe": "node src/scripts/comprehensive-linting-workflow.js --auto-fix --safety-mode --max-files=15",
    "lint:campaign": "node src/scripts/linting-campaign-cli.cjs",
    "lint:campaign:metrics": "node src/scripts/linting-campaign-cli.cjs collect-metrics",
    "lint:campaign:report": "node src/scripts/linting-campaign-cli.cjs generate-report",
    "deps:validate": "node --loader ts-node/esm scripts/validate-dependencies.ts",
    "deps:fix": "node --loader ts-node/esm scripts/validate-dependencies.ts --fix",
    "lint:campaign:start": "node src/scripts/linting-campaign-cli.cjs start-campaign standard --confirm",
    "track-errors": "node scripts/track-parsing-errors.cjs",
    "rollback": "bash scripts/rollback-fixes.sh",
    "dry-run": "bash scripts/dry-run-fix.sh",
    "lint:campaign:dry": "node src/scripts/linting-campaign-cli.cjs start-campaign standard --dry-run",
    "dashboard": "node --loader ts-node/esm src/scripts/zero-error-dashboard.ts generate",
    "dashboard:monitor": "node --loader ts-node/esm src/scripts/zero-error-dashboard.ts monitor",
    "dashboard:status": "node --loader ts-node/esm src/scripts/zero-error-dashboard.ts status",
    "dashboard:verbose": "node --loader ts-node/esm src/scripts/zero-error-dashboard.ts generate --verbose",
    "lint:dashboard": "node src/scripts/linting-excellence-dashboard.js validate",
    "lint:dashboard:monitor": "node src/scripts/linting-excellence-dashboard.js monitor --watch",
    "lint:dashboard:health": "node src/scripts/linting-excellence-dashboard.js health",
    "lint:dashboard:maintenance": "node src/scripts/linting-excellence-dashboard.js maintenance",
    "lint:dashboard:alerts": "node src/scripts/linting-excellence-dashboard.js alerts",
    "lint:dashboard:metrics": "node src/scripts/linting-excellence-dashboard.js metrics",
    "lint:campaign:gates": "node src/scripts/linting-campaign-cli.cjs evaluate-gates",
    "lint:campaign:deploy": "node src/scripts/linting-campaign-cli.cjs deployment-readiness",
    "lint:campaign:trends": "node src/scripts/linting-campaign-cli.cjs monitor-trends",
    "lint:campaign:cicd": "node src/scripts/linting-campaign-cli.cjs create-cicd-report",
    "fix:const-assign": "node fix-const-assignments.js",
    "clean:backups": "node src/scripts/clean-backups.js",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "format:changed": "prettier --write $(git diff --name-only --diff-filter=ACMR HEAD | grep -E '\\.(ts|tsx|js|jsx|json|md|yml|yaml)$' | tr '\\n' ' ')",
    "format:staged": "prettier --write $(git diff --cached --name-only --diff-filter=ACMR | grep -E '\\.(ts|tsx|js|jsx|json|md|yml|yaml)$' | tr '\\n' ' ')",
    "test": "NODE_OPTIONS='--expose-gc --max-old-space-size=2048' jest",
    "test:watch": "NODE_OPTIONS='--expose-gc --max-old-space-size=2048' jest --watch",
    "test:memory": "NODE_OPTIONS='--expose-gc --max-old-space-size=2048' jest --detectOpenHandles --forceExit",
    "open-browser": "node -e \"setTimeout(function(){require('open')('http://localhost:3000')}, 3000)\"",
    "test:coverage": "jest --coverage",
    "fix-elemental": "node fix-elemental-logic.js",
    "test-elemental-fix": "node test-elemental-logic.js",
    "prepare": "husky install",
    "update-vegetables": "yarn ts-node src/scripts/updateVegetables.ts",
    "update-oils-vinegars": "yarn ts-node src/scripts/updateOilsAndVinegars.ts",
    "clean-imports": "scripts/typescript-fixes/clean-imports.sh",
    "clean-imports:dry": "scripts/typescript-fixes/clean-imports.sh --dry-run",
    "clean-imports:auto": "scripts/typescript-fixes/clean-imports.sh --auto-fix",
    "clean-imports:metrics": "scripts/typescript-fixes/clean-imports.sh --metrics",
    "build:validate": "node scripts/build-system-repair.cjs validate",
    "build:repair": "node scripts/build-system-repair.cjs repair",
    "build:rebuild": "node scripts/build-system-repair.cjs rebuild",
    "build:comprehensive": "node scripts/build-system-repair.cjs comprehensive",
    "build:quick": "node scripts/build-system-repair.cjs quick",
    "build:health": "node scripts/build-system-repair.cjs health",
    "build:emergency": "node scripts/build-system-repair.cjs emergency",
    "performance:validate": "node --loader ts-node/esm src/scripts/validateLintingPerformance.ts",
    "performance:monitor": "node --loader ts-node/esm src/scripts/runPerformanceValidation.ts monitor",
    "performance:monitor:continuous": "node --loader ts-node/esm src/scripts/runPerformanceValidation.ts monitor --continuous",
    "performance:report": "node --loader ts-node/esm src/scripts/runPerformanceValidation.ts report",
    "performance:test": "node --loader ts-node/esm src/scripts/runPerformanceValidation.ts test",
    "performance:baseline": "node --loader ts-node/esm src/scripts/runPerformanceValidation.ts monitor --baseline",
    "performance:trends": "node --loader ts-node/esm src/scripts/runPerformanceValidation.ts report --trends",
    "auto-fix": "node fix-file-on-save.cjs",
    "auto-fix:watch": "node src/scripts/watch-and-fix.cjs",
    "auto-fix:watch-all": "node src/scripts/watch-and-fix.cjs .",
    "lint:fix:syntax": "node fix-parsing-errors.cjs",
    "lint:fix:any": "node scripts/typescript-fixes/fix-typescript-errors-enhanced-v3.js --auto-fix --max-files=15",
    "lint:fix:unused": "node scripts/fix-unused-variables-final.cjs --max-files=20",
    "lint:fix:await-thenable": "node fix-await-thenable-errors.cjs",
    "lint:fix:await-thenable:dry": "node fix-await-thenable-errors.cjs --dry-run",
    "lint:cache:clear": "rm -f .eslintcache .eslint-results.json .eslint-ts-cache/* && rm -rf .eslint-ts-cache/",
    "unused-vars:build": "tsc -p tsconfig.scripts.json && node scripts/rename-to-cjs.cjs",
    "unused-vars": "node dist-scripts/cli.cjs",
    "unused-vars:baseline": "yarn unused-vars baseline --count 965",
    "unused-vars:analyze": "yarn unused-vars analyze --out reports/unused-vars.json",
    "unused-vars:batch": "yarn unused-vars batch --in reports/unused-vars.json --max-batch 15 --max-batch-critical 8",
    "unused-vars:apply": "yarn unused-vars batch --in reports/unused-vars.json --max-batch 15 --max-batch-critical 8 --apply",
    "batch-process": "node --loader ts-node/esm src/scripts/batch-processing/cli.ts",
    "batch-process:plan": "yarn batch-process plan unused-variables-analysis-report.json",
    "batch-process:execute": "yarn batch-process execute unused-variables-analysis-report.json",
    "batch-process:execute:dry": "yarn batch-process execute unused-variables-analysis-report.json --dry-run",
    "batch-process:execute:safe": "yarn batch-process execute unused-variables-analysis-report.json --max-batch 10 --max-critical 3",
    "batch-process:review": "yarn batch-process review",
    "batch-process:status": "yarn batch-process status",
    "batch-process:integration": "node --loader ts-node/esm src/scripts/batch-processing/integration.ts"
  },
  "dependencies": {
    "@chakra-ui/react": "^3.27.0",
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.1",
    "@heroicons/react": "^2.2.0",
    "@mui/icons-material": "^5.11.16",
    "@mui/material": "^7.3.4",
    "@radix-ui/react-tabs": "^1.1.12",
    "@tailwindcss/postcss": "^4.1.14",
    "@types/jsonwebtoken": "^9.0.10",
    "astronomy-engine": "^2.1.17",
    "axios": "^1.10.0",
    "clsx": "^2.1.1",
    "date-fns": "^2.30.0",
    "framer-motion": "^12.23.22",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "lucide-react": "^0.462.0",
    "next": "15.3.4",
    "node-fetch": "2",
    "pg": "^8.16.3",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-error-boundary": "^6.0.0",
    "recast": "^0.23.11",
    "suncalc": "^1.9.0",
    "tailwind-merge": "^3.3.1",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@babel/core": "^7.26.0",
    "@babel/parser": "^7.27.7",
    "@tailwindcss/line-clamp": "^0.4.4",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.1.0",
    "@testing-library/user-event": "^14.5.1",
    "@types/jest": "^29.5.12",
    "@types/lodash": "^4.14.202",
    "@types/node": "20.3.2",
    "@types/pg": "^8",
    "@types/react": "^19.0.5",
    "@types/react-dom": "^19.0.2",
    "@types/testing-library__jest-dom": "6.0.0",
    "@typescript-eslint/eslint-plugin": "^5.61.0",
    "@typescript-eslint/parser": "^5.61.0",
    "autoprefixer": "10.4.14",
    "babel-jest": "^29.5.0",
    "eslint": "^8.57.0",
    "eslint-config-next": "^15.3.4",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^5.2.0",
    "glob": "^11.0.3",
    "husky": "^8.0.3",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.6.1",
    "jest-environment-jsdom": "^29.7.0",
    "nodemon": "^3.1.10",
    "open": "^10.1.0",
    "openapi-typescript": "^7.9.1",
    "postcss": "8.4.24",
    "postcss-custom-properties": "^14.0.4",
    "postcss-flexbugs-fixes": "^5.0.2",
    "postcss-import": "^16.1.0",
    "postcss-nesting": "^13.0.1",
    "postcss-preset-env": "^10.1.5",
    "postcss-simple-vars": "^7.0.1",
    "prettier": "^3.6.2",
    "prettier-plugin-tailwindcss": "^0.6.14",
    "react-test-renderer": "^19.1.0",
    "sass": "^1.68.0",
    "semver": "^7.7.1",
    "tailwindcss": "4.1.13",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.2",
    "typescript": "5.1.6"
  },
  "packageManager": "yarn@4.0.0+sha512.955259c0370ab8c06d013faa7d5e7addb6914251029695675f54e04c917ea6b092c379ba8d3521556d90b3874e5037759467072f01d2295341ead43cc259f14b"
}
